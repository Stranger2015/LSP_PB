// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/error.proto

package protocol;

/**
 * <pre>
 * Code is the error code in case a request fails.
 * </pre>
 *
 * Protobuf enum {@code protocol.Code}
 */
public enum Code
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Conventional default for enums. Do not use this.
   * </pre>
   *
   * <code>OK = 0;</code>
   */
  OK(0),
  /**
   * <pre>
   * Invalid JSON was received by the server. An error occurred on the server while parsing the JSON
   * text.
   * </pre>
   *
   * <code>PARSE_ERROR = -32700;</code>
   */
  PARSE_ERROR(-32700),
  /**
   * <pre>
   * The JSON sent is not a valid Request object.
   * </pre>
   *
   * <code>INVALID_REQUEST = -32600;</code>
   */
  INVALID_REQUEST(-32600),
  /**
   * <pre>
   * The method does not exist / is not available.
   * </pre>
   *
   * <code>METHOD_NOT_FOUND = -32601;</code>
   */
  METHOD_NOT_FOUND(-32601),
  /**
   * <pre>
   * Invalid method parameter(s).
   * </pre>
   *
   * <code>INVALID_PARAMS = -32602;</code>
   */
  INVALID_PARAMS(-32602),
  /**
   * <pre>
   * Internal JSON-RPC error.
   * </pre>
   *
   * <code>INTERNAL_ERROR = -32603;</code>
   */
  INTERNAL_ERROR(-32603),
  /**
   * <pre>
   * Reserved for implementation-defined server-errors.
   * </pre>
   *
   * <code>SERVER_ERROR_START = -32099;</code>
   */
  SERVER_ERROR_START(-32099),
  /**
   * <pre>
   * Server not initialized.
   * </pre>
   *
   * <code>SERVER_NOT_INITIALIZED = -32002;</code>
   */
  SERVER_NOT_INITIALIZED(-32002),
  /**
   * <pre>
   * Unknown error.
   * </pre>
   *
   * <code>UNKNOWN_ERROR_CODE = -32001;</code>
   */
  UNKNOWN_ERROR_CODE(-32001),
  /**
   * <pre>
   * SERVER_ERROR_END = -32000;
   *  reserved -32000;
   * Cancelled request.
   * </pre>
   *
   * <code>REQUEST_CANCELLED = -32800;</code>
   */
  REQUEST_CANCELLED(-32800),
  /**
   * <pre>
   * Modified content.
   * </pre>
   *
   * <code>CONTENT_MODIFIED = -32801;</code>
   */
  CONTENT_MODIFIED(-32801),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Conventional default for enums. Do not use this.
   * </pre>
   *
   * <code>OK = 0;</code>
   */
  public static final int OK_VALUE = 0;
  /**
   * <pre>
   * Invalid JSON was received by the server. An error occurred on the server while parsing the JSON
   * text.
   * </pre>
   *
   * <code>PARSE_ERROR = -32700;</code>
   */
  public static final int PARSE_ERROR_VALUE = -32700;
  /**
   * <pre>
   * The JSON sent is not a valid Request object.
   * </pre>
   *
   * <code>INVALID_REQUEST = -32600;</code>
   */
  public static final int INVALID_REQUEST_VALUE = -32600;
  /**
   * <pre>
   * The method does not exist / is not available.
   * </pre>
   *
   * <code>METHOD_NOT_FOUND = -32601;</code>
   */
  public static final int METHOD_NOT_FOUND_VALUE = -32601;
  /**
   * <pre>
   * Invalid method parameter(s).
   * </pre>
   *
   * <code>INVALID_PARAMS = -32602;</code>
   */
  public static final int INVALID_PARAMS_VALUE = -32602;
  /**
   * <pre>
   * Internal JSON-RPC error.
   * </pre>
   *
   * <code>INTERNAL_ERROR = -32603;</code>
   */
  public static final int INTERNAL_ERROR_VALUE = -32603;
  /**
   * <pre>
   * Reserved for implementation-defined server-errors.
   * </pre>
   *
   * <code>SERVER_ERROR_START = -32099;</code>
   */
  public static final int SERVER_ERROR_START_VALUE = -32099;
  /**
   * <pre>
   * Server not initialized.
   * </pre>
   *
   * <code>SERVER_NOT_INITIALIZED = -32002;</code>
   */
  public static final int SERVER_NOT_INITIALIZED_VALUE = -32002;
  /**
   * <pre>
   * Unknown error.
   * </pre>
   *
   * <code>UNKNOWN_ERROR_CODE = -32001;</code>
   */
  public static final int UNKNOWN_ERROR_CODE_VALUE = -32001;
  /**
   * <pre>
   * SERVER_ERROR_END = -32000;
   *  reserved -32000;
   * Cancelled request.
   * </pre>
   *
   * <code>REQUEST_CANCELLED = -32800;</code>
   */
  public static final int REQUEST_CANCELLED_VALUE = -32800;
  /**
   * <pre>
   * Modified content.
   * </pre>
   *
   * <code>CONTENT_MODIFIED = -32801;</code>
   */
  public static final int CONTENT_MODIFIED_VALUE = -32801;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Code valueOf(int value) {
    return forNumber(value);
  }

  public static Code forNumber(int value) {
    switch (value) {
      case 0: return OK;
      case -32700: return PARSE_ERROR;
      case -32600: return INVALID_REQUEST;
      case -32601: return METHOD_NOT_FOUND;
      case -32602: return INVALID_PARAMS;
      case -32603: return INTERNAL_ERROR;
      case -32099: return SERVER_ERROR_START;
      case -32002: return SERVER_NOT_INITIALIZED;
      case -32001: return UNKNOWN_ERROR_CODE;
      case -32800: return REQUEST_CANCELLED;
      case -32801: return CONTENT_MODIFIED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Code>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Code> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Code>() {
          public Code findValueByNumber(int number) {
            return Code.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return protocol.ErrorProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final Code[] VALUES = values();

  public static Code valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Code(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:protocol.Code)
}

