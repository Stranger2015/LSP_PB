// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/protocol.proto

package protocol;

/**
 * <pre>
 * DocumentFilter is a document filter denotes a document through properties like language, scheme
 * or pattern. An example is a filter that applies to TypeScript files on disk. Another example is a
 * filter the applies to JSON files with name package.json:
 * </pre>
 *
 * Protobuf type {@code protocol.DocumentFilter}
 */
public  final class DocumentFilter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.DocumentFilter)
    DocumentFilterOrBuilder {
  // Use DocumentFilter.newBuilder() to construct.
  private DocumentFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DocumentFilter() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DocumentFilter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (language_ != null) {
              subBuilder = language_.toBuilder();
            }
            language_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(language_);
              language_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (scheme_ != null) {
              subBuilder = scheme_.toBuilder();
            }
            scheme_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(scheme_);
              scheme_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (pattern_ != null) {
              subBuilder = pattern_.toBuilder();
            }
            pattern_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pattern_);
              pattern_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.ProtocolProto.internal_static_protocol_DocumentFilter_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.ProtocolProto.internal_static_protocol_DocumentFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.DocumentFilter.class, protocol.DocumentFilter.Builder.class);
  }

  public static final int LANGUAGE_FIELD_NUMBER = 1;
  private com.google.protobuf.StringValue language_;
  /**
   * <pre>
   * Optional. A language id, like `typescript`.
   * (-- api-linter: core::0143::standardized-codes=disabled --)
   * </pre>
   *
   * <code>.google.protobuf.StringValue language = 1;</code>
   */
  public boolean hasLanguage() {
    return language_ != null;
  }
  /**
   * <pre>
   * Optional. A language id, like `typescript`.
   * (-- api-linter: core::0143::standardized-codes=disabled --)
   * </pre>
   *
   * <code>.google.protobuf.StringValue language = 1;</code>
   */
  public com.google.protobuf.StringValue getLanguage() {
    return language_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : language_;
  }
  /**
   * <pre>
   * Optional. A language id, like `typescript`.
   * (-- api-linter: core::0143::standardized-codes=disabled --)
   * </pre>
   *
   * <code>.google.protobuf.StringValue language = 1;</code>
   */
  public com.google.protobuf.StringValueOrBuilder getLanguageOrBuilder() {
    return getLanguage();
  }

  public static final int SCHEME_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue scheme_;
  /**
   * <pre>
   * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue scheme = 2;</code>
   */
  public boolean hasScheme() {
    return scheme_ != null;
  }
  /**
   * <pre>
   * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue scheme = 2;</code>
   */
  public com.google.protobuf.StringValue getScheme() {
    return scheme_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : scheme_;
  }
  /**
   * <pre>
   * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue scheme = 2;</code>
   */
  public com.google.protobuf.StringValueOrBuilder getSchemeOrBuilder() {
    return getScheme();
  }

  public static final int PATTERN_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue pattern_;
  /**
   * <pre>
   * Optional. A glob pattern, like `*.{ts,js}`.
   * Glob patterns can have the following syntax:
   * - `*` to match one or more characters in a path segment
   * - `?` to match on one character in a path segment
   * - `**` to match any number of path segments, including none
   * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
   * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
   * match on `example.0`, `example.1`, …)
   * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
   * to match on `example.a`, `example.b`, but not `example.0`)
   * </pre>
   *
   * <code>.google.protobuf.StringValue pattern = 3;</code>
   */
  public boolean hasPattern() {
    return pattern_ != null;
  }
  /**
   * <pre>
   * Optional. A glob pattern, like `*.{ts,js}`.
   * Glob patterns can have the following syntax:
   * - `*` to match one or more characters in a path segment
   * - `?` to match on one character in a path segment
   * - `**` to match any number of path segments, including none
   * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
   * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
   * match on `example.0`, `example.1`, …)
   * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
   * to match on `example.a`, `example.b`, but not `example.0`)
   * </pre>
   *
   * <code>.google.protobuf.StringValue pattern = 3;</code>
   */
  public com.google.protobuf.StringValue getPattern() {
    return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
  }
  /**
   * <pre>
   * Optional. A glob pattern, like `*.{ts,js}`.
   * Glob patterns can have the following syntax:
   * - `*` to match one or more characters in a path segment
   * - `?` to match on one character in a path segment
   * - `**` to match any number of path segments, including none
   * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
   * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
   * match on `example.0`, `example.1`, …)
   * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
   * to match on `example.a`, `example.b`, but not `example.0`)
   * </pre>
   *
   * <code>.google.protobuf.StringValue pattern = 3;</code>
   */
  public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
    return getPattern();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (language_ != null) {
      output.writeMessage(1, getLanguage());
    }
    if (scheme_ != null) {
      output.writeMessage(2, getScheme());
    }
    if (pattern_ != null) {
      output.writeMessage(3, getPattern());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (language_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLanguage());
    }
    if (scheme_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getScheme());
    }
    if (pattern_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPattern());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.DocumentFilter)) {
      return super.equals(obj);
    }
    protocol.DocumentFilter other = (protocol.DocumentFilter) obj;

    boolean result = true;
    result = result && (hasLanguage() == other.hasLanguage());
    if (hasLanguage()) {
      result = result && getLanguage()
          .equals(other.getLanguage());
    }
    result = result && (hasScheme() == other.hasScheme());
    if (hasScheme()) {
      result = result && getScheme()
          .equals(other.getScheme());
    }
    result = result && (hasPattern() == other.hasPattern());
    if (hasPattern()) {
      result = result && getPattern()
          .equals(other.getPattern());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLanguage()) {
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguage().hashCode();
    }
    if (hasScheme()) {
      hash = (37 * hash) + SCHEME_FIELD_NUMBER;
      hash = (53 * hash) + getScheme().hashCode();
    }
    if (hasPattern()) {
      hash = (37 * hash) + PATTERN_FIELD_NUMBER;
      hash = (53 * hash) + getPattern().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.DocumentFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.DocumentFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.DocumentFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.DocumentFilter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.DocumentFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.DocumentFilter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.DocumentFilter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.DocumentFilter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.DocumentFilter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.DocumentFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.DocumentFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DocumentFilter is a document filter denotes a document through properties like language, scheme
   * or pattern. An example is a filter that applies to TypeScript files on disk. Another example is a
   * filter the applies to JSON files with name package.json:
   * </pre>
   *
   * Protobuf type {@code protocol.DocumentFilter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.DocumentFilter)
      protocol.DocumentFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.ProtocolProto.internal_static_protocol_DocumentFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.ProtocolProto.internal_static_protocol_DocumentFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.DocumentFilter.class, protocol.DocumentFilter.Builder.class);
    }

    // Construct using protocol.DocumentFilter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (languageBuilder_ == null) {
        language_ = null;
      } else {
        language_ = null;
        languageBuilder_ = null;
      }
      if (schemeBuilder_ == null) {
        scheme_ = null;
      } else {
        scheme_ = null;
        schemeBuilder_ = null;
      }
      if (patternBuilder_ == null) {
        pattern_ = null;
      } else {
        pattern_ = null;
        patternBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.ProtocolProto.internal_static_protocol_DocumentFilter_descriptor;
    }

    public protocol.DocumentFilter getDefaultInstanceForType() {
      return protocol.DocumentFilter.getDefaultInstance();
    }

    public protocol.DocumentFilter build() {
      protocol.DocumentFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.DocumentFilter buildPartial() {
      protocol.DocumentFilter result = new protocol.DocumentFilter(this);
      if (languageBuilder_ == null) {
        result.language_ = language_;
      } else {
        result.language_ = languageBuilder_.build();
      }
      if (schemeBuilder_ == null) {
        result.scheme_ = scheme_;
      } else {
        result.scheme_ = schemeBuilder_.build();
      }
      if (patternBuilder_ == null) {
        result.pattern_ = pattern_;
      } else {
        result.pattern_ = patternBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.DocumentFilter) {
        return mergeFrom((protocol.DocumentFilter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.DocumentFilter other) {
      if (other == protocol.DocumentFilter.getDefaultInstance()) return this;
      if (other.hasLanguage()) {
        mergeLanguage(other.getLanguage());
      }
      if (other.hasScheme()) {
        mergeScheme(other.getScheme());
      }
      if (other.hasPattern()) {
        mergePattern(other.getPattern());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.DocumentFilter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.DocumentFilter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.StringValue language_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> languageBuilder_;
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public boolean hasLanguage() {
      return languageBuilder_ != null || language_ != null;
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public com.google.protobuf.StringValue getLanguage() {
      if (languageBuilder_ == null) {
        return language_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : language_;
      } else {
        return languageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public Builder setLanguage(com.google.protobuf.StringValue value) {
      if (languageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        language_ = value;
        onChanged();
      } else {
        languageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public Builder setLanguage(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (languageBuilder_ == null) {
        language_ = builderForValue.build();
        onChanged();
      } else {
        languageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public Builder mergeLanguage(com.google.protobuf.StringValue value) {
      if (languageBuilder_ == null) {
        if (language_ != null) {
          language_ =
            com.google.protobuf.StringValue.newBuilder(language_).mergeFrom(value).buildPartial();
        } else {
          language_ = value;
        }
        onChanged();
      } else {
        languageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public Builder clearLanguage() {
      if (languageBuilder_ == null) {
        language_ = null;
        onChanged();
      } else {
        language_ = null;
        languageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public com.google.protobuf.StringValue.Builder getLanguageBuilder() {
      
      onChanged();
      return getLanguageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getLanguageOrBuilder() {
      if (languageBuilder_ != null) {
        return languageBuilder_.getMessageOrBuilder();
      } else {
        return language_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : language_;
      }
    }
    /**
     * <pre>
     * Optional. A language id, like `typescript`.
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>.google.protobuf.StringValue language = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getLanguageFieldBuilder() {
      if (languageBuilder_ == null) {
        languageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getLanguage(),
                getParentForChildren(),
                isClean());
        language_ = null;
      }
      return languageBuilder_;
    }

    private com.google.protobuf.StringValue scheme_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> schemeBuilder_;
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public boolean hasScheme() {
      return schemeBuilder_ != null || scheme_ != null;
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public com.google.protobuf.StringValue getScheme() {
      if (schemeBuilder_ == null) {
        return scheme_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : scheme_;
      } else {
        return schemeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public Builder setScheme(com.google.protobuf.StringValue value) {
      if (schemeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scheme_ = value;
        onChanged();
      } else {
        schemeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public Builder setScheme(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (schemeBuilder_ == null) {
        scheme_ = builderForValue.build();
        onChanged();
      } else {
        schemeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public Builder mergeScheme(com.google.protobuf.StringValue value) {
      if (schemeBuilder_ == null) {
        if (scheme_ != null) {
          scheme_ =
            com.google.protobuf.StringValue.newBuilder(scheme_).mergeFrom(value).buildPartial();
        } else {
          scheme_ = value;
        }
        onChanged();
      } else {
        schemeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public Builder clearScheme() {
      if (schemeBuilder_ == null) {
        scheme_ = null;
        onChanged();
      } else {
        scheme_ = null;
        schemeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getSchemeBuilder() {
      
      onChanged();
      return getSchemeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getSchemeOrBuilder() {
      if (schemeBuilder_ != null) {
        return schemeBuilder_.getMessageOrBuilder();
      } else {
        return scheme_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : scheme_;
      }
    }
    /**
     * <pre>
     * Optional. A URI [scheme](#uri.Scheme), like `file` or `untitled`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue scheme = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getSchemeFieldBuilder() {
      if (schemeBuilder_ == null) {
        schemeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getScheme(),
                getParentForChildren(),
                isClean());
        scheme_ = null;
      }
      return schemeBuilder_;
    }

    private com.google.protobuf.StringValue pattern_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> patternBuilder_;
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public boolean hasPattern() {
      return patternBuilder_ != null || pattern_ != null;
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public com.google.protobuf.StringValue getPattern() {
      if (patternBuilder_ == null) {
        return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
      } else {
        return patternBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public Builder setPattern(com.google.protobuf.StringValue value) {
      if (patternBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pattern_ = value;
        onChanged();
      } else {
        patternBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public Builder setPattern(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (patternBuilder_ == null) {
        pattern_ = builderForValue.build();
        onChanged();
      } else {
        patternBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public Builder mergePattern(com.google.protobuf.StringValue value) {
      if (patternBuilder_ == null) {
        if (pattern_ != null) {
          pattern_ =
            com.google.protobuf.StringValue.newBuilder(pattern_).mergeFrom(value).buildPartial();
        } else {
          pattern_ = value;
        }
        onChanged();
      } else {
        patternBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public Builder clearPattern() {
      if (patternBuilder_ == null) {
        pattern_ = null;
        onChanged();
      } else {
        pattern_ = null;
        patternBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public com.google.protobuf.StringValue.Builder getPatternBuilder() {
      
      onChanged();
      return getPatternFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
      if (patternBuilder_ != null) {
        return patternBuilder_.getMessageOrBuilder();
      } else {
        return pattern_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
      }
    }
    /**
     * <pre>
     * Optional. A glob pattern, like `*.{ts,js}`.
     * Glob patterns can have the following syntax:
     * - `*` to match one or more characters in a path segment
     * - `?` to match on one character in a path segment
     * - `**` to match any number of path segments, including none
     * - `{}` to group conditions (e.g. `**&#47;&#42;.{ts,js}` matches all TypeScript and JavaScript files)
     * - `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to
     * match on `example.0`, `example.1`, …)
     * - `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]`
     * to match on `example.a`, `example.b`, but not `example.0`)
     * </pre>
     *
     * <code>.google.protobuf.StringValue pattern = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getPatternFieldBuilder() {
      if (patternBuilder_ == null) {
        patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getPattern(),
                getParentForChildren(),
                isClean());
        pattern_ = null;
      }
      return patternBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.DocumentFilter)
  }

  // @@protoc_insertion_point(class_scope:protocol.DocumentFilter)
  private static final protocol.DocumentFilter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.DocumentFilter();
  }

  public static protocol.DocumentFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentFilter>
      PARSER = new com.google.protobuf.AbstractParser<DocumentFilter>() {
    public DocumentFilter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentFilter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DocumentFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentFilter> getParserForType() {
    return PARSER;
  }

  public protocol.DocumentFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

