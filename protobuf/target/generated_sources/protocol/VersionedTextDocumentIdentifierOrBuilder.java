// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/protocol.proto

package protocol;

public interface VersionedTextDocumentIdentifierOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.VersionedTextDocumentIdentifier)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * TextDocumentIdentifier text documents are identified using a URI. On the protocol level, URIs
   * are passed as strings.
   * </pre>
   *
   * <code>.protocol.TextDocumentIdentifier text_document_identifier = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  boolean hasTextDocumentIdentifier();
  /**
   * <pre>
   * TextDocumentIdentifier text documents are identified using a URI. On the protocol level, URIs
   * are passed as strings.
   * </pre>
   *
   * <code>.protocol.TextDocumentIdentifier text_document_identifier = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.TextDocumentIdentifier getTextDocumentIdentifier();
  /**
   * <pre>
   * TextDocumentIdentifier text documents are identified using a URI. On the protocol level, URIs
   * are passed as strings.
   * </pre>
   *
   * <code>.protocol.TextDocumentIdentifier text_document_identifier = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.TextDocumentIdentifierOrBuilder getTextDocumentIdentifierOrBuilder();

  /**
   * <pre>
   * Optional. The version number of this document. If a versioned text document identifier
   * is sent from the server to the client and the file is not open in the editor
   * (the server has not received an open notification before) the server can send
   * `null` to indicate that the version is known and the content on disk is the
   * master (as speced with document content ownership).
   * The version number of a document will increase after each change, including
   * undo/redo. The number doesn't need to be consecutive.
   * </pre>
   *
   * <code>bool version = 2;</code>
   */
  boolean getVersion();
}
