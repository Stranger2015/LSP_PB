// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/protocol.proto

package protocol;

/**
 * <pre>
 * Diagnostic represents a diagnostic, such as a compiler error or warning. Diagnostic objects are
 * only valid in the scope of a resource.
 * </pre>
 *
 * Protobuf type {@code protocol.Diagnostic}
 */
public  final class Diagnostic extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.Diagnostic)
    DiagnosticOrBuilder {
  // Use Diagnostic.newBuilder() to construct.
  private Diagnostic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Diagnostic() {
    severity_ = 0;
    message_ = "";
    tags_ = java.util.Collections.emptyList();
    relatedInformation_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Diagnostic(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.Range.Builder subBuilder = null;
            if (range_ != null) {
              subBuilder = range_.toBuilder();
            }
            range_ = input.readMessage(protocol.Range.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(range_);
              range_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            severity_ = rawValue;
            break;
          }
          case 26: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (code_ != null) {
              subBuilder = code_.toBuilder();
            }
            code_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(code_);
              code_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (source_ != null) {
              subBuilder = source_.toBuilder();
            }
            source_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(source_);
              source_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            message_ = s;
            break;
          }
          case 48: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              tags_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            tags_.add(rawValue);
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tags_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              tags_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              relatedInformation_ = new java.util.ArrayList<protocol.DiagnosticRelatedInformation>();
              mutable_bitField0_ |= 0x00000040;
            }
            relatedInformation_.add(
                input.readMessage(protocol.DiagnosticRelatedInformation.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        tags_ = java.util.Collections.unmodifiableList(tags_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        relatedInformation_ = java.util.Collections.unmodifiableList(relatedInformation_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.ProtocolProto.internal_static_protocol_Diagnostic_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.ProtocolProto.internal_static_protocol_Diagnostic_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.Diagnostic.class, protocol.Diagnostic.Builder.class);
  }

  private int bitField0_;
  public static final int RANGE_FIELD_NUMBER = 1;
  private protocol.Range range_;
  /**
   * <pre>
   * The range at which the message applies.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * The range at which the message applies.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.Range getRange() {
    return range_ == null ? protocol.Range.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * The range at which the message applies.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.RangeOrBuilder getRangeOrBuilder() {
    return getRange();
  }

  public static final int SEVERITY_FIELD_NUMBER = 2;
  private int severity_;
  /**
   * <pre>
   * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
   * client to interpret diagnostics as error, warning, info or hint.
   * </pre>
   *
   * <code>.protocol.DiagnosticSeverity severity = 2;</code>
   */
  public int getSeverityValue() {
    return severity_;
  }
  /**
   * <pre>
   * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
   * client to interpret diagnostics as error, warning, info or hint.
   * </pre>
   *
   * <code>.protocol.DiagnosticSeverity severity = 2;</code>
   */
  public protocol.DiagnosticSeverity getSeverity() {
    protocol.DiagnosticSeverity result = protocol.DiagnosticSeverity.valueOf(severity_);
    return result == null ? protocol.DiagnosticSeverity.UNRECOGNIZED : result;
  }

  public static final int CODE_FIELD_NUMBER = 3;
  private com.google.protobuf.Int32Value code_;
  /**
   * <pre>
   * Optional. The diagnostic's code, which might appear in the user interface.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value code = 3;</code>
   */
  public boolean hasCode() {
    return code_ != null;
  }
  /**
   * <pre>
   * Optional. The diagnostic's code, which might appear in the user interface.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value code = 3;</code>
   */
  public com.google.protobuf.Int32Value getCode() {
    return code_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : code_;
  }
  /**
   * <pre>
   * Optional. The diagnostic's code, which might appear in the user interface.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value code = 3;</code>
   */
  public com.google.protobuf.Int32ValueOrBuilder getCodeOrBuilder() {
    return getCode();
  }

  public static final int SOURCE_FIELD_NUMBER = 4;
  private com.google.protobuf.StringValue source_;
  /**
   * <pre>
   * Optional. A human-readable string describing the source of this
   * diagnostic, e.g. 'typescript' or 'super lint'.
   * </pre>
   *
   * <code>.google.protobuf.StringValue source = 4;</code>
   */
  public boolean hasSource() {
    return source_ != null;
  }
  /**
   * <pre>
   * Optional. A human-readable string describing the source of this
   * diagnostic, e.g. 'typescript' or 'super lint'.
   * </pre>
   *
   * <code>.google.protobuf.StringValue source = 4;</code>
   */
  public com.google.protobuf.StringValue getSource() {
    return source_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : source_;
  }
  /**
   * <pre>
   * Optional. A human-readable string describing the source of this
   * diagnostic, e.g. 'typescript' or 'super lint'.
   * </pre>
   *
   * <code>.google.protobuf.StringValue source = 4;</code>
   */
  public com.google.protobuf.StringValueOrBuilder getSourceOrBuilder() {
    return getSource();
  }

  public static final int MESSAGE_FIELD_NUMBER = 5;
  private volatile java.lang.Object message_;
  /**
   * <pre>
   * The diagnostic's message.
   * </pre>
   *
   * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The diagnostic's message.
   * </pre>
   *
   * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TAGS_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Integer> tags_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, protocol.DiagnosticTag> tags_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, protocol.DiagnosticTag>() {
            public protocol.DiagnosticTag convert(java.lang.Integer from) {
              protocol.DiagnosticTag result = protocol.DiagnosticTag.valueOf(from);
              return result == null ? protocol.DiagnosticTag.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Optional. Additional metadata about the diagnostic.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
   */
  public java.util.List<protocol.DiagnosticTag> getTagsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, protocol.DiagnosticTag>(tags_, tags_converter_);
  }
  /**
   * <pre>
   * Optional. Additional metadata about the diagnostic.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
   */
  public int getTagsCount() {
    return tags_.size();
  }
  /**
   * <pre>
   * Optional. Additional metadata about the diagnostic.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
   */
  public protocol.DiagnosticTag getTags(int index) {
    return tags_converter_.convert(tags_.get(index));
  }
  /**
   * <pre>
   * Optional. Additional metadata about the diagnostic.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
   */
  public java.util.List<java.lang.Integer>
  getTagsValueList() {
    return tags_;
  }
  /**
   * <pre>
   * Optional. Additional metadata about the diagnostic.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
   */
  public int getTagsValue(int index) {
    return tags_.get(index);
  }
  private int tagsMemoizedSerializedSize;

  public static final int RELATED_INFORMATION_FIELD_NUMBER = 7;
  private java.util.List<protocol.DiagnosticRelatedInformation> relatedInformation_;
  /**
   * <pre>
   * Optional. An array of related diagnostic information, e.g. when symbol-names within
   * a scope collide all definitions can be marked via this property.
   * (-- api-linter: core::0140::abbreviations=disabled --)
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
   */
  public java.util.List<protocol.DiagnosticRelatedInformation> getRelatedInformationList() {
    return relatedInformation_;
  }
  /**
   * <pre>
   * Optional. An array of related diagnostic information, e.g. when symbol-names within
   * a scope collide all definitions can be marked via this property.
   * (-- api-linter: core::0140::abbreviations=disabled --)
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
   */
  public java.util.List<? extends protocol.DiagnosticRelatedInformationOrBuilder> 
      getRelatedInformationOrBuilderList() {
    return relatedInformation_;
  }
  /**
   * <pre>
   * Optional. An array of related diagnostic information, e.g. when symbol-names within
   * a scope collide all definitions can be marked via this property.
   * (-- api-linter: core::0140::abbreviations=disabled --)
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
   */
  public int getRelatedInformationCount() {
    return relatedInformation_.size();
  }
  /**
   * <pre>
   * Optional. An array of related diagnostic information, e.g. when symbol-names within
   * a scope collide all definitions can be marked via this property.
   * (-- api-linter: core::0140::abbreviations=disabled --)
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
   */
  public protocol.DiagnosticRelatedInformation getRelatedInformation(int index) {
    return relatedInformation_.get(index);
  }
  /**
   * <pre>
   * Optional. An array of related diagnostic information, e.g. when symbol-names within
   * a scope collide all definitions can be marked via this property.
   * (-- api-linter: core::0140::abbreviations=disabled --)
   * </pre>
   *
   * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
   */
  public protocol.DiagnosticRelatedInformationOrBuilder getRelatedInformationOrBuilder(
      int index) {
    return relatedInformation_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (range_ != null) {
      output.writeMessage(1, getRange());
    }
    if (severity_ != protocol.DiagnosticSeverity.DIAGNOSTIC_SEVERITY_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, severity_);
    }
    if (code_ != null) {
      output.writeMessage(3, getCode());
    }
    if (source_ != null) {
      output.writeMessage(4, getSource());
    }
    if (!getMessageBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, message_);
    }
    if (getTagsList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(tagsMemoizedSerializedSize);
    }
    for (int i = 0; i < tags_.size(); i++) {
      output.writeEnumNoTag(tags_.get(i));
    }
    for (int i = 0; i < relatedInformation_.size(); i++) {
      output.writeMessage(7, relatedInformation_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (range_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRange());
    }
    if (severity_ != protocol.DiagnosticSeverity.DIAGNOSTIC_SEVERITY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, severity_);
    }
    if (code_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCode());
    }
    if (source_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSource());
    }
    if (!getMessageBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, message_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tags_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(tags_.get(i));
      }
      size += dataSize;
      if (!getTagsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }tagsMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < relatedInformation_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, relatedInformation_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.Diagnostic)) {
      return super.equals(obj);
    }
    protocol.Diagnostic other = (protocol.Diagnostic) obj;

    boolean result = true;
    result = result && (hasRange() == other.hasRange());
    if (hasRange()) {
      result = result && getRange()
          .equals(other.getRange());
    }
    result = result && severity_ == other.severity_;
    result = result && (hasCode() == other.hasCode());
    if (hasCode()) {
      result = result && getCode()
          .equals(other.getCode());
    }
    result = result && (hasSource() == other.hasSource());
    if (hasSource()) {
      result = result && getSource()
          .equals(other.getSource());
    }
    result = result && getMessage()
        .equals(other.getMessage());
    result = result && tags_.equals(other.tags_);
    result = result && getRelatedInformationList()
        .equals(other.getRelatedInformationList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRange()) {
      hash = (37 * hash) + RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getRange().hashCode();
    }
    hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
    hash = (53 * hash) + severity_;
    if (hasCode()) {
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
    }
    if (hasSource()) {
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
    }
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    if (getTagsCount() > 0) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + tags_.hashCode();
    }
    if (getRelatedInformationCount() > 0) {
      hash = (37 * hash) + RELATED_INFORMATION_FIELD_NUMBER;
      hash = (53 * hash) + getRelatedInformationList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.Diagnostic parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.Diagnostic parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.Diagnostic parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.Diagnostic parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.Diagnostic parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.Diagnostic parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.Diagnostic parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.Diagnostic parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.Diagnostic parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.Diagnostic parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.Diagnostic prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Diagnostic represents a diagnostic, such as a compiler error or warning. Diagnostic objects are
   * only valid in the scope of a resource.
   * </pre>
   *
   * Protobuf type {@code protocol.Diagnostic}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.Diagnostic)
      protocol.DiagnosticOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.ProtocolProto.internal_static_protocol_Diagnostic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.ProtocolProto.internal_static_protocol_Diagnostic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.Diagnostic.class, protocol.Diagnostic.Builder.class);
    }

    // Construct using protocol.Diagnostic.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRelatedInformationFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (rangeBuilder_ == null) {
        range_ = null;
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }
      severity_ = 0;

      if (codeBuilder_ == null) {
        code_ = null;
      } else {
        code_ = null;
        codeBuilder_ = null;
      }
      if (sourceBuilder_ == null) {
        source_ = null;
      } else {
        source_ = null;
        sourceBuilder_ = null;
      }
      message_ = "";

      tags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      if (relatedInformationBuilder_ == null) {
        relatedInformation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        relatedInformationBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.ProtocolProto.internal_static_protocol_Diagnostic_descriptor;
    }

    public protocol.Diagnostic getDefaultInstanceForType() {
      return protocol.Diagnostic.getDefaultInstance();
    }

    public protocol.Diagnostic build() {
      protocol.Diagnostic result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.Diagnostic buildPartial() {
      protocol.Diagnostic result = new protocol.Diagnostic(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (rangeBuilder_ == null) {
        result.range_ = range_;
      } else {
        result.range_ = rangeBuilder_.build();
      }
      result.severity_ = severity_;
      if (codeBuilder_ == null) {
        result.code_ = code_;
      } else {
        result.code_ = codeBuilder_.build();
      }
      if (sourceBuilder_ == null) {
        result.source_ = source_;
      } else {
        result.source_ = sourceBuilder_.build();
      }
      result.message_ = message_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        tags_ = java.util.Collections.unmodifiableList(tags_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.tags_ = tags_;
      if (relatedInformationBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          relatedInformation_ = java.util.Collections.unmodifiableList(relatedInformation_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.relatedInformation_ = relatedInformation_;
      } else {
        result.relatedInformation_ = relatedInformationBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.Diagnostic) {
        return mergeFrom((protocol.Diagnostic)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.Diagnostic other) {
      if (other == protocol.Diagnostic.getDefaultInstance()) return this;
      if (other.hasRange()) {
        mergeRange(other.getRange());
      }
      if (other.severity_ != 0) {
        setSeverityValue(other.getSeverityValue());
      }
      if (other.hasCode()) {
        mergeCode(other.getCode());
      }
      if (other.hasSource()) {
        mergeSource(other.getSource());
      }
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        onChanged();
      }
      if (!other.tags_.isEmpty()) {
        if (tags_.isEmpty()) {
          tags_ = other.tags_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureTagsIsMutable();
          tags_.addAll(other.tags_);
        }
        onChanged();
      }
      if (relatedInformationBuilder_ == null) {
        if (!other.relatedInformation_.isEmpty()) {
          if (relatedInformation_.isEmpty()) {
            relatedInformation_ = other.relatedInformation_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureRelatedInformationIsMutable();
            relatedInformation_.addAll(other.relatedInformation_);
          }
          onChanged();
        }
      } else {
        if (!other.relatedInformation_.isEmpty()) {
          if (relatedInformationBuilder_.isEmpty()) {
            relatedInformationBuilder_.dispose();
            relatedInformationBuilder_ = null;
            relatedInformation_ = other.relatedInformation_;
            bitField0_ = (bitField0_ & ~0x00000040);
            relatedInformationBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRelatedInformationFieldBuilder() : null;
          } else {
            relatedInformationBuilder_.addAllMessages(other.relatedInformation_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.Diagnostic parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.Diagnostic) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private protocol.Range range_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> rangeBuilder_;
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public boolean hasRange() {
      return rangeBuilder_ != null || range_ != null;
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range getRange() {
      if (rangeBuilder_ == null) {
        return range_ == null ? protocol.Range.getDefaultInstance() : range_;
      } else {
        return rangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        rangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(
        protocol.Range.Builder builderForValue) {
      if (rangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        rangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (range_ != null) {
          range_ =
            protocol.Range.newBuilder(range_).mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        rangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearRange() {
      if (rangeBuilder_ == null) {
        range_ = null;
        onChanged();
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range.Builder getRangeBuilder() {
      
      onChanged();
      return getRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.RangeOrBuilder getRangeOrBuilder() {
      if (rangeBuilder_ != null) {
        return rangeBuilder_.getMessageOrBuilder();
      } else {
        return range_ == null ?
            protocol.Range.getDefaultInstance() : range_;
      }
    }
    /**
     * <pre>
     * The range at which the message applies.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> 
        getRangeFieldBuilder() {
      if (rangeBuilder_ == null) {
        rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder>(
                getRange(),
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      return rangeBuilder_;
    }

    private int severity_ = 0;
    /**
     * <pre>
     * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
     * client to interpret diagnostics as error, warning, info or hint.
     * </pre>
     *
     * <code>.protocol.DiagnosticSeverity severity = 2;</code>
     */
    public int getSeverityValue() {
      return severity_;
    }
    /**
     * <pre>
     * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
     * client to interpret diagnostics as error, warning, info or hint.
     * </pre>
     *
     * <code>.protocol.DiagnosticSeverity severity = 2;</code>
     */
    public Builder setSeverityValue(int value) {
      severity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
     * client to interpret diagnostics as error, warning, info or hint.
     * </pre>
     *
     * <code>.protocol.DiagnosticSeverity severity = 2;</code>
     */
    public protocol.DiagnosticSeverity getSeverity() {
      protocol.DiagnosticSeverity result = protocol.DiagnosticSeverity.valueOf(severity_);
      return result == null ? protocol.DiagnosticSeverity.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
     * client to interpret diagnostics as error, warning, info or hint.
     * </pre>
     *
     * <code>.protocol.DiagnosticSeverity severity = 2;</code>
     */
    public Builder setSeverity(protocol.DiagnosticSeverity value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      severity_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's severity. Can be omitted. If omitted it is up to the
     * client to interpret diagnostics as error, warning, info or hint.
     * </pre>
     *
     * <code>.protocol.DiagnosticSeverity severity = 2;</code>
     */
    public Builder clearSeverity() {
      
      severity_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Int32Value code_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> codeBuilder_;
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public boolean hasCode() {
      return codeBuilder_ != null || code_ != null;
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public com.google.protobuf.Int32Value getCode() {
      if (codeBuilder_ == null) {
        return code_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : code_;
      } else {
        return codeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public Builder setCode(com.google.protobuf.Int32Value value) {
      if (codeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        code_ = value;
        onChanged();
      } else {
        codeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public Builder setCode(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (codeBuilder_ == null) {
        code_ = builderForValue.build();
        onChanged();
      } else {
        codeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public Builder mergeCode(com.google.protobuf.Int32Value value) {
      if (codeBuilder_ == null) {
        if (code_ != null) {
          code_ =
            com.google.protobuf.Int32Value.newBuilder(code_).mergeFrom(value).buildPartial();
        } else {
          code_ = value;
        }
        onChanged();
      } else {
        codeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public Builder clearCode() {
      if (codeBuilder_ == null) {
        code_ = null;
        onChanged();
      } else {
        code_ = null;
        codeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public com.google.protobuf.Int32Value.Builder getCodeBuilder() {
      
      onChanged();
      return getCodeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getCodeOrBuilder() {
      if (codeBuilder_ != null) {
        return codeBuilder_.getMessageOrBuilder();
      } else {
        return code_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : code_;
      }
    }
    /**
     * <pre>
     * Optional. The diagnostic's code, which might appear in the user interface.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value code = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getCodeFieldBuilder() {
      if (codeBuilder_ == null) {
        codeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getCode(),
                getParentForChildren(),
                isClean());
        code_ = null;
      }
      return codeBuilder_;
    }

    private com.google.protobuf.StringValue source_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> sourceBuilder_;
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public boolean hasSource() {
      return sourceBuilder_ != null || source_ != null;
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public com.google.protobuf.StringValue getSource() {
      if (sourceBuilder_ == null) {
        return source_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : source_;
      } else {
        return sourceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public Builder setSource(com.google.protobuf.StringValue value) {
      if (sourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        sourceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public Builder setSource(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (sourceBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        sourceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public Builder mergeSource(com.google.protobuf.StringValue value) {
      if (sourceBuilder_ == null) {
        if (source_ != null) {
          source_ =
            com.google.protobuf.StringValue.newBuilder(source_).mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        sourceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public Builder clearSource() {
      if (sourceBuilder_ == null) {
        source_ = null;
        onChanged();
      } else {
        source_ = null;
        sourceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public com.google.protobuf.StringValue.Builder getSourceBuilder() {
      
      onChanged();
      return getSourceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getSourceOrBuilder() {
      if (sourceBuilder_ != null) {
        return sourceBuilder_.getMessageOrBuilder();
      } else {
        return source_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : source_;
      }
    }
    /**
     * <pre>
     * Optional. A human-readable string describing the source of this
     * diagnostic, e.g. 'typescript' or 'super lint'.
     * </pre>
     *
     * <code>.google.protobuf.StringValue source = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getSourceFieldBuilder() {
      if (sourceBuilder_ == null) {
        sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getSource(),
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      return sourceBuilder_;
    }

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * The diagnostic's message.
     * </pre>
     *
     * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The diagnostic's message.
     * </pre>
     *
     * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The diagnostic's message.
     * </pre>
     *
     * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The diagnostic's message.
     * </pre>
     *
     * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The diagnostic's message.
     * </pre>
     *
     * <code>string message = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      message_ = value;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> tags_ =
      java.util.Collections.emptyList();
    private void ensureTagsIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        tags_ = new java.util.ArrayList<java.lang.Integer>(tags_);
        bitField0_ |= 0x00000020;
      }
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public java.util.List<protocol.DiagnosticTag> getTagsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, protocol.DiagnosticTag>(tags_, tags_converter_);
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public protocol.DiagnosticTag getTags(int index) {
      return tags_converter_.convert(tags_.get(index));
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder setTags(
        int index, protocol.DiagnosticTag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder addTags(protocol.DiagnosticTag value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTagsIsMutable();
      tags_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder addAllTags(
        java.lang.Iterable<? extends protocol.DiagnosticTag> values) {
      ensureTagsIsMutable();
      for (protocol.DiagnosticTag value : values) {
        tags_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder clearTags() {
      tags_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public java.util.List<java.lang.Integer>
    getTagsValueList() {
      return java.util.Collections.unmodifiableList(tags_);
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public int getTagsValue(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder setTagsValue(
        int index, int value) {
      ensureTagsIsMutable();
      tags_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder addTagsValue(int value) {
      ensureTagsIsMutable();
      tags_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Additional metadata about the diagnostic.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticTag tags = 6;</code>
     */
    public Builder addAllTagsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTagsIsMutable();
      for (int value : values) {
        tags_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<protocol.DiagnosticRelatedInformation> relatedInformation_ =
      java.util.Collections.emptyList();
    private void ensureRelatedInformationIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        relatedInformation_ = new java.util.ArrayList<protocol.DiagnosticRelatedInformation>(relatedInformation_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.DiagnosticRelatedInformation, protocol.DiagnosticRelatedInformation.Builder, protocol.DiagnosticRelatedInformationOrBuilder> relatedInformationBuilder_;

    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public java.util.List<protocol.DiagnosticRelatedInformation> getRelatedInformationList() {
      if (relatedInformationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relatedInformation_);
      } else {
        return relatedInformationBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public int getRelatedInformationCount() {
      if (relatedInformationBuilder_ == null) {
        return relatedInformation_.size();
      } else {
        return relatedInformationBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public protocol.DiagnosticRelatedInformation getRelatedInformation(int index) {
      if (relatedInformationBuilder_ == null) {
        return relatedInformation_.get(index);
      } else {
        return relatedInformationBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder setRelatedInformation(
        int index, protocol.DiagnosticRelatedInformation value) {
      if (relatedInformationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedInformationIsMutable();
        relatedInformation_.set(index, value);
        onChanged();
      } else {
        relatedInformationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder setRelatedInformation(
        int index, protocol.DiagnosticRelatedInformation.Builder builderForValue) {
      if (relatedInformationBuilder_ == null) {
        ensureRelatedInformationIsMutable();
        relatedInformation_.set(index, builderForValue.build());
        onChanged();
      } else {
        relatedInformationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder addRelatedInformation(protocol.DiagnosticRelatedInformation value) {
      if (relatedInformationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedInformationIsMutable();
        relatedInformation_.add(value);
        onChanged();
      } else {
        relatedInformationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder addRelatedInformation(
        int index, protocol.DiagnosticRelatedInformation value) {
      if (relatedInformationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelatedInformationIsMutable();
        relatedInformation_.add(index, value);
        onChanged();
      } else {
        relatedInformationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder addRelatedInformation(
        protocol.DiagnosticRelatedInformation.Builder builderForValue) {
      if (relatedInformationBuilder_ == null) {
        ensureRelatedInformationIsMutable();
        relatedInformation_.add(builderForValue.build());
        onChanged();
      } else {
        relatedInformationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder addRelatedInformation(
        int index, protocol.DiagnosticRelatedInformation.Builder builderForValue) {
      if (relatedInformationBuilder_ == null) {
        ensureRelatedInformationIsMutable();
        relatedInformation_.add(index, builderForValue.build());
        onChanged();
      } else {
        relatedInformationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder addAllRelatedInformation(
        java.lang.Iterable<? extends protocol.DiagnosticRelatedInformation> values) {
      if (relatedInformationBuilder_ == null) {
        ensureRelatedInformationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relatedInformation_);
        onChanged();
      } else {
        relatedInformationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder clearRelatedInformation() {
      if (relatedInformationBuilder_ == null) {
        relatedInformation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        relatedInformationBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public Builder removeRelatedInformation(int index) {
      if (relatedInformationBuilder_ == null) {
        ensureRelatedInformationIsMutable();
        relatedInformation_.remove(index);
        onChanged();
      } else {
        relatedInformationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public protocol.DiagnosticRelatedInformation.Builder getRelatedInformationBuilder(
        int index) {
      return getRelatedInformationFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public protocol.DiagnosticRelatedInformationOrBuilder getRelatedInformationOrBuilder(
        int index) {
      if (relatedInformationBuilder_ == null) {
        return relatedInformation_.get(index);  } else {
        return relatedInformationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public java.util.List<? extends protocol.DiagnosticRelatedInformationOrBuilder> 
         getRelatedInformationOrBuilderList() {
      if (relatedInformationBuilder_ != null) {
        return relatedInformationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relatedInformation_);
      }
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public protocol.DiagnosticRelatedInformation.Builder addRelatedInformationBuilder() {
      return getRelatedInformationFieldBuilder().addBuilder(
          protocol.DiagnosticRelatedInformation.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public protocol.DiagnosticRelatedInformation.Builder addRelatedInformationBuilder(
        int index) {
      return getRelatedInformationFieldBuilder().addBuilder(
          index, protocol.DiagnosticRelatedInformation.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional. An array of related diagnostic information, e.g. when symbol-names within
     * a scope collide all definitions can be marked via this property.
     * (-- api-linter: core::0140::abbreviations=disabled --)
     * </pre>
     *
     * <code>repeated .protocol.DiagnosticRelatedInformation related_information = 7;</code>
     */
    public java.util.List<protocol.DiagnosticRelatedInformation.Builder> 
         getRelatedInformationBuilderList() {
      return getRelatedInformationFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.DiagnosticRelatedInformation, protocol.DiagnosticRelatedInformation.Builder, protocol.DiagnosticRelatedInformationOrBuilder> 
        getRelatedInformationFieldBuilder() {
      if (relatedInformationBuilder_ == null) {
        relatedInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            protocol.DiagnosticRelatedInformation, protocol.DiagnosticRelatedInformation.Builder, protocol.DiagnosticRelatedInformationOrBuilder>(
                relatedInformation_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        relatedInformation_ = null;
      }
      return relatedInformationBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.Diagnostic)
  }

  // @@protoc_insertion_point(class_scope:protocol.Diagnostic)
  private static final protocol.Diagnostic DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.Diagnostic();
  }

  public static protocol.Diagnostic getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Diagnostic>
      PARSER = new com.google.protobuf.AbstractParser<Diagnostic>() {
    public Diagnostic parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Diagnostic(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Diagnostic> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Diagnostic> getParserForType() {
    return PARSER;
  }

  public protocol.Diagnostic getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

