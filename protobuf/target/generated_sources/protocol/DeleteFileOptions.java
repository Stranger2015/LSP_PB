// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/protocol.proto

package protocol;

/**
 * <pre>
 * DeleteFileOptions is the options to delete a file.
 * </pre>
 *
 * Protobuf type {@code protocol.DeleteFileOptions}
 */
public  final class DeleteFileOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.DeleteFileOptions)
    DeleteFileOptionsOrBuilder {
  // Use DeleteFileOptions.newBuilder() to construct.
  private DeleteFileOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DeleteFileOptions() {
    recursive_ = false;
    ignoreIfExists_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DeleteFileOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            recursive_ = input.readBool();
            break;
          }
          case 16: {

            ignoreIfExists_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.ProtocolProto.internal_static_protocol_DeleteFileOptions_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.ProtocolProto.internal_static_protocol_DeleteFileOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.DeleteFileOptions.class, protocol.DeleteFileOptions.Builder.class);
  }

  public static final int RECURSIVE_FIELD_NUMBER = 1;
  private boolean recursive_;
  /**
   * <pre>
   * Optional. Delete the content recursively if a folder is denoted.
   * </pre>
   *
   * <code>bool recursive = 1;</code>
   */
  public boolean getRecursive() {
    return recursive_;
  }

  public static final int IGNORE_IF_EXISTS_FIELD_NUMBER = 2;
  private boolean ignoreIfExists_;
  /**
   * <pre>
   * Optional. Ignore the operation if the file doesn't exist.
   * </pre>
   *
   * <code>bool ignore_if_exists = 2;</code>
   */
  public boolean getIgnoreIfExists() {
    return ignoreIfExists_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (recursive_ != false) {
      output.writeBool(1, recursive_);
    }
    if (ignoreIfExists_ != false) {
      output.writeBool(2, ignoreIfExists_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (recursive_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, recursive_);
    }
    if (ignoreIfExists_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, ignoreIfExists_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.DeleteFileOptions)) {
      return super.equals(obj);
    }
    protocol.DeleteFileOptions other = (protocol.DeleteFileOptions) obj;

    boolean result = true;
    result = result && (getRecursive()
        == other.getRecursive());
    result = result && (getIgnoreIfExists()
        == other.getIgnoreIfExists());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RECURSIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRecursive());
    hash = (37 * hash) + IGNORE_IF_EXISTS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIgnoreIfExists());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.DeleteFileOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.DeleteFileOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.DeleteFileOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.DeleteFileOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.DeleteFileOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.DeleteFileOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.DeleteFileOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.DeleteFileOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.DeleteFileOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.DeleteFileOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.DeleteFileOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DeleteFileOptions is the options to delete a file.
   * </pre>
   *
   * Protobuf type {@code protocol.DeleteFileOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.DeleteFileOptions)
      protocol.DeleteFileOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.ProtocolProto.internal_static_protocol_DeleteFileOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.ProtocolProto.internal_static_protocol_DeleteFileOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.DeleteFileOptions.class, protocol.DeleteFileOptions.Builder.class);
    }

    // Construct using protocol.DeleteFileOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      recursive_ = false;

      ignoreIfExists_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.ProtocolProto.internal_static_protocol_DeleteFileOptions_descriptor;
    }

    public protocol.DeleteFileOptions getDefaultInstanceForType() {
      return protocol.DeleteFileOptions.getDefaultInstance();
    }

    public protocol.DeleteFileOptions build() {
      protocol.DeleteFileOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.DeleteFileOptions buildPartial() {
      protocol.DeleteFileOptions result = new protocol.DeleteFileOptions(this);
      result.recursive_ = recursive_;
      result.ignoreIfExists_ = ignoreIfExists_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.DeleteFileOptions) {
        return mergeFrom((protocol.DeleteFileOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.DeleteFileOptions other) {
      if (other == protocol.DeleteFileOptions.getDefaultInstance()) return this;
      if (other.getRecursive() != false) {
        setRecursive(other.getRecursive());
      }
      if (other.getIgnoreIfExists() != false) {
        setIgnoreIfExists(other.getIgnoreIfExists());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.DeleteFileOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.DeleteFileOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean recursive_ ;
    /**
     * <pre>
     * Optional. Delete the content recursively if a folder is denoted.
     * </pre>
     *
     * <code>bool recursive = 1;</code>
     */
    public boolean getRecursive() {
      return recursive_;
    }
    /**
     * <pre>
     * Optional. Delete the content recursively if a folder is denoted.
     * </pre>
     *
     * <code>bool recursive = 1;</code>
     */
    public Builder setRecursive(boolean value) {
      
      recursive_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Delete the content recursively if a folder is denoted.
     * </pre>
     *
     * <code>bool recursive = 1;</code>
     */
    public Builder clearRecursive() {
      
      recursive_ = false;
      onChanged();
      return this;
    }

    private boolean ignoreIfExists_ ;
    /**
     * <pre>
     * Optional. Ignore the operation if the file doesn't exist.
     * </pre>
     *
     * <code>bool ignore_if_exists = 2;</code>
     */
    public boolean getIgnoreIfExists() {
      return ignoreIfExists_;
    }
    /**
     * <pre>
     * Optional. Ignore the operation if the file doesn't exist.
     * </pre>
     *
     * <code>bool ignore_if_exists = 2;</code>
     */
    public Builder setIgnoreIfExists(boolean value) {
      
      ignoreIfExists_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Ignore the operation if the file doesn't exist.
     * </pre>
     *
     * <code>bool ignore_if_exists = 2;</code>
     */
    public Builder clearIgnoreIfExists() {
      
      ignoreIfExists_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.DeleteFileOptions)
  }

  // @@protoc_insertion_point(class_scope:protocol.DeleteFileOptions)
  private static final protocol.DeleteFileOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.DeleteFileOptions();
  }

  public static protocol.DeleteFileOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DeleteFileOptions>
      PARSER = new com.google.protobuf.AbstractParser<DeleteFileOptions>() {
    public DeleteFileOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteFileOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DeleteFileOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DeleteFileOptions> getParserForType() {
    return PARSER;
  }

  public protocol.DeleteFileOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

