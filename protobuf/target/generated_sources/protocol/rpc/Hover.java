// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * Hover is the result of a hover request.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.Hover}
 */
public  final class Hover extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.Hover)
    HoverOrBuilder {
  // Use Hover.newBuilder() to construct.
  private Hover(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Hover() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Hover(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.rpc.MarkedString.Builder subBuilder = null;
            if (contentsCase_ == 1) {
              subBuilder = ((protocol.rpc.MarkedString) contents_).toBuilder();
            }
            contents_ =
                input.readMessage(protocol.rpc.MarkedString.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.MarkedString) contents_);
              contents_ = subBuilder.buildPartial();
            }
            contentsCase_ = 1;
            break;
          }
          case 18: {
            protocol.rpc.Hover.MarkedStrings.Builder subBuilder = null;
            if (contentsCase_ == 2) {
              subBuilder = ((protocol.rpc.Hover.MarkedStrings) contents_).toBuilder();
            }
            contents_ =
                input.readMessage(protocol.rpc.Hover.MarkedStrings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.Hover.MarkedStrings) contents_);
              contents_ = subBuilder.buildPartial();
            }
            contentsCase_ = 2;
            break;
          }
          case 26: {
            protocol.MarkupContent.Builder subBuilder = null;
            if (contentsCase_ == 3) {
              subBuilder = ((protocol.MarkupContent) contents_).toBuilder();
            }
            contents_ =
                input.readMessage(protocol.MarkupContent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.MarkupContent) contents_);
              contents_ = subBuilder.buildPartial();
            }
            contentsCase_ = 3;
            break;
          }
          case 34: {
            protocol.Range.Builder subBuilder = null;
            if (range_ != null) {
              subBuilder = range_.toBuilder();
            }
            range_ = input.readMessage(protocol.Range.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(range_);
              range_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.Hover.class, protocol.rpc.Hover.Builder.class);
  }

  public interface MarkedStringsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.rpc.Hover.MarkedStrings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    java.util.List<protocol.rpc.MarkedString> 
        getMarkedStringList();
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    protocol.rpc.MarkedString getMarkedString(int index);
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    int getMarkedStringCount();
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    java.util.List<? extends protocol.rpc.MarkedStringOrBuilder> 
        getMarkedStringOrBuilderList();
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    protocol.rpc.MarkedStringOrBuilder getMarkedStringOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol.rpc.Hover.MarkedStrings}
   */
  public  static final class MarkedStrings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.rpc.Hover.MarkedStrings)
      MarkedStringsOrBuilder {
    // Use MarkedStrings.newBuilder() to construct.
    private MarkedStrings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MarkedStrings() {
      markedString_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MarkedStrings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                markedString_ = new java.util.ArrayList<protocol.rpc.MarkedString>();
                mutable_bitField0_ |= 0x00000001;
              }
              markedString_.add(
                  input.readMessage(protocol.rpc.MarkedString.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          markedString_ = java.util.Collections.unmodifiableList(markedString_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_MarkedStrings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_MarkedStrings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.Hover.MarkedStrings.class, protocol.rpc.Hover.MarkedStrings.Builder.class);
    }

    public static final int MARKED_STRING_FIELD_NUMBER = 1;
    private java.util.List<protocol.rpc.MarkedString> markedString_;
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public java.util.List<protocol.rpc.MarkedString> getMarkedStringList() {
      return markedString_;
    }
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public java.util.List<? extends protocol.rpc.MarkedStringOrBuilder> 
        getMarkedStringOrBuilderList() {
      return markedString_;
    }
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public int getMarkedStringCount() {
      return markedString_.size();
    }
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public protocol.rpc.MarkedString getMarkedString(int index) {
      return markedString_.get(index);
    }
    /**
     * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public protocol.rpc.MarkedStringOrBuilder getMarkedStringOrBuilder(
        int index) {
      return markedString_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < markedString_.size(); i++) {
        output.writeMessage(1, markedString_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < markedString_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, markedString_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.rpc.Hover.MarkedStrings)) {
        return super.equals(obj);
      }
      protocol.rpc.Hover.MarkedStrings other = (protocol.rpc.Hover.MarkedStrings) obj;

      boolean result = true;
      result = result && getMarkedStringList()
          .equals(other.getMarkedStringList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMarkedStringCount() > 0) {
        hash = (37 * hash) + MARKED_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getMarkedStringList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.Hover.MarkedStrings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.rpc.Hover.MarkedStrings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.Hover.MarkedStrings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.rpc.Hover.MarkedStrings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.rpc.Hover.MarkedStrings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.rpc.Hover.MarkedStrings)
        protocol.rpc.Hover.MarkedStringsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_MarkedStrings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_MarkedStrings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.rpc.Hover.MarkedStrings.class, protocol.rpc.Hover.MarkedStrings.Builder.class);
      }

      // Construct using protocol.rpc.Hover.MarkedStrings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMarkedStringFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (markedStringBuilder_ == null) {
          markedString_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          markedStringBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_MarkedStrings_descriptor;
      }

      public protocol.rpc.Hover.MarkedStrings getDefaultInstanceForType() {
        return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
      }

      public protocol.rpc.Hover.MarkedStrings build() {
        protocol.rpc.Hover.MarkedStrings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.rpc.Hover.MarkedStrings buildPartial() {
        protocol.rpc.Hover.MarkedStrings result = new protocol.rpc.Hover.MarkedStrings(this);
        int from_bitField0_ = bitField0_;
        if (markedStringBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            markedString_ = java.util.Collections.unmodifiableList(markedString_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.markedString_ = markedString_;
        } else {
          result.markedString_ = markedStringBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.rpc.Hover.MarkedStrings) {
          return mergeFrom((protocol.rpc.Hover.MarkedStrings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.rpc.Hover.MarkedStrings other) {
        if (other == protocol.rpc.Hover.MarkedStrings.getDefaultInstance()) return this;
        if (markedStringBuilder_ == null) {
          if (!other.markedString_.isEmpty()) {
            if (markedString_.isEmpty()) {
              markedString_ = other.markedString_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMarkedStringIsMutable();
              markedString_.addAll(other.markedString_);
            }
            onChanged();
          }
        } else {
          if (!other.markedString_.isEmpty()) {
            if (markedStringBuilder_.isEmpty()) {
              markedStringBuilder_.dispose();
              markedStringBuilder_ = null;
              markedString_ = other.markedString_;
              bitField0_ = (bitField0_ & ~0x00000001);
              markedStringBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMarkedStringFieldBuilder() : null;
            } else {
              markedStringBuilder_.addAllMessages(other.markedString_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.rpc.Hover.MarkedStrings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.rpc.Hover.MarkedStrings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.rpc.MarkedString> markedString_ =
        java.util.Collections.emptyList();
      private void ensureMarkedStringIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          markedString_ = new java.util.ArrayList<protocol.rpc.MarkedString>(markedString_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder> markedStringBuilder_;

      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public java.util.List<protocol.rpc.MarkedString> getMarkedStringList() {
        if (markedStringBuilder_ == null) {
          return java.util.Collections.unmodifiableList(markedString_);
        } else {
          return markedStringBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public int getMarkedStringCount() {
        if (markedStringBuilder_ == null) {
          return markedString_.size();
        } else {
          return markedStringBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public protocol.rpc.MarkedString getMarkedString(int index) {
        if (markedStringBuilder_ == null) {
          return markedString_.get(index);
        } else {
          return markedStringBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder setMarkedString(
          int index, protocol.rpc.MarkedString value) {
        if (markedStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkedStringIsMutable();
          markedString_.set(index, value);
          onChanged();
        } else {
          markedStringBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder setMarkedString(
          int index, protocol.rpc.MarkedString.Builder builderForValue) {
        if (markedStringBuilder_ == null) {
          ensureMarkedStringIsMutable();
          markedString_.set(index, builderForValue.build());
          onChanged();
        } else {
          markedStringBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder addMarkedString(protocol.rpc.MarkedString value) {
        if (markedStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkedStringIsMutable();
          markedString_.add(value);
          onChanged();
        } else {
          markedStringBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder addMarkedString(
          int index, protocol.rpc.MarkedString value) {
        if (markedStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarkedStringIsMutable();
          markedString_.add(index, value);
          onChanged();
        } else {
          markedStringBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder addMarkedString(
          protocol.rpc.MarkedString.Builder builderForValue) {
        if (markedStringBuilder_ == null) {
          ensureMarkedStringIsMutable();
          markedString_.add(builderForValue.build());
          onChanged();
        } else {
          markedStringBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder addMarkedString(
          int index, protocol.rpc.MarkedString.Builder builderForValue) {
        if (markedStringBuilder_ == null) {
          ensureMarkedStringIsMutable();
          markedString_.add(index, builderForValue.build());
          onChanged();
        } else {
          markedStringBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder addAllMarkedString(
          java.lang.Iterable<? extends protocol.rpc.MarkedString> values) {
        if (markedStringBuilder_ == null) {
          ensureMarkedStringIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, markedString_);
          onChanged();
        } else {
          markedStringBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder clearMarkedString() {
        if (markedStringBuilder_ == null) {
          markedString_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          markedStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public Builder removeMarkedString(int index) {
        if (markedStringBuilder_ == null) {
          ensureMarkedStringIsMutable();
          markedString_.remove(index);
          onChanged();
        } else {
          markedStringBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public protocol.rpc.MarkedString.Builder getMarkedStringBuilder(
          int index) {
        return getMarkedStringFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public protocol.rpc.MarkedStringOrBuilder getMarkedStringOrBuilder(
          int index) {
        if (markedStringBuilder_ == null) {
          return markedString_.get(index);  } else {
          return markedStringBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public java.util.List<? extends protocol.rpc.MarkedStringOrBuilder> 
           getMarkedStringOrBuilderList() {
        if (markedStringBuilder_ != null) {
          return markedStringBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(markedString_);
        }
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public protocol.rpc.MarkedString.Builder addMarkedStringBuilder() {
        return getMarkedStringFieldBuilder().addBuilder(
            protocol.rpc.MarkedString.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public protocol.rpc.MarkedString.Builder addMarkedStringBuilder(
          int index) {
        return getMarkedStringFieldBuilder().addBuilder(
            index, protocol.rpc.MarkedString.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.rpc.MarkedString marked_string = 1;</code>
       */
      public java.util.List<protocol.rpc.MarkedString.Builder> 
           getMarkedStringBuilderList() {
        return getMarkedStringFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder> 
          getMarkedStringFieldBuilder() {
        if (markedStringBuilder_ == null) {
          markedStringBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder>(
                  markedString_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          markedString_ = null;
        }
        return markedStringBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protocol.rpc.Hover.MarkedStrings)
    }

    // @@protoc_insertion_point(class_scope:protocol.rpc.Hover.MarkedStrings)
    private static final protocol.rpc.Hover.MarkedStrings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.rpc.Hover.MarkedStrings();
    }

    public static protocol.rpc.Hover.MarkedStrings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MarkedStrings>
        PARSER = new com.google.protobuf.AbstractParser<MarkedStrings>() {
      public MarkedStrings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MarkedStrings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MarkedStrings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MarkedStrings> getParserForType() {
      return PARSER;
    }

    public protocol.rpc.Hover.MarkedStrings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int contentsCase_ = 0;
  private java.lang.Object contents_;
  public enum ContentsCase
      implements com.google.protobuf.Internal.EnumLite {
    MARKED_STRING(1),
    MARKED_STRINGS(2),
    MARKUP_CONTENT(3),
    CONTENTS_NOT_SET(0);
    private final int value;
    private ContentsCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContentsCase valueOf(int value) {
      return forNumber(value);
    }

    public static ContentsCase forNumber(int value) {
      switch (value) {
        case 1: return MARKED_STRING;
        case 2: return MARKED_STRINGS;
        case 3: return MARKUP_CONTENT;
        case 0: return CONTENTS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ContentsCase
  getContentsCase() {
    return ContentsCase.forNumber(
        contentsCase_);
  }

  public static final int MARKED_STRING_FIELD_NUMBER = 1;
  /**
   * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
   */
  public protocol.rpc.MarkedString getMarkedString() {
    if (contentsCase_ == 1) {
       return (protocol.rpc.MarkedString) contents_;
    }
    return protocol.rpc.MarkedString.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
   */
  public protocol.rpc.MarkedStringOrBuilder getMarkedStringOrBuilder() {
    if (contentsCase_ == 1) {
       return (protocol.rpc.MarkedString) contents_;
    }
    return protocol.rpc.MarkedString.getDefaultInstance();
  }

  public static final int MARKED_STRINGS_FIELD_NUMBER = 2;
  /**
   * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
   */
  public protocol.rpc.Hover.MarkedStrings getMarkedStrings() {
    if (contentsCase_ == 2) {
       return (protocol.rpc.Hover.MarkedStrings) contents_;
    }
    return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
   */
  public protocol.rpc.Hover.MarkedStringsOrBuilder getMarkedStringsOrBuilder() {
    if (contentsCase_ == 2) {
       return (protocol.rpc.Hover.MarkedStrings) contents_;
    }
    return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
  }

  public static final int MARKUP_CONTENT_FIELD_NUMBER = 3;
  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  public protocol.MarkupContent getMarkupContent() {
    if (contentsCase_ == 3) {
       return (protocol.MarkupContent) contents_;
    }
    return protocol.MarkupContent.getDefaultInstance();
  }
  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  public protocol.MarkupContentOrBuilder getMarkupContentOrBuilder() {
    if (contentsCase_ == 3) {
       return (protocol.MarkupContent) contents_;
    }
    return protocol.MarkupContent.getDefaultInstance();
  }

  public static final int RANGE_FIELD_NUMBER = 4;
  private protocol.Range range_;
  /**
   * <pre>
   * An optional range is a range inside a text document
   * that is used to visualize a hover, e.g. by changing the background color.
   * </pre>
   *
   * <code>.protocol.Range range = 4;</code>
   */
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * An optional range is a range inside a text document
   * that is used to visualize a hover, e.g. by changing the background color.
   * </pre>
   *
   * <code>.protocol.Range range = 4;</code>
   */
  public protocol.Range getRange() {
    return range_ == null ? protocol.Range.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * An optional range is a range inside a text document
   * that is used to visualize a hover, e.g. by changing the background color.
   * </pre>
   *
   * <code>.protocol.Range range = 4;</code>
   */
  public protocol.RangeOrBuilder getRangeOrBuilder() {
    return getRange();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (contentsCase_ == 1) {
      output.writeMessage(1, (protocol.rpc.MarkedString) contents_);
    }
    if (contentsCase_ == 2) {
      output.writeMessage(2, (protocol.rpc.Hover.MarkedStrings) contents_);
    }
    if (contentsCase_ == 3) {
      output.writeMessage(3, (protocol.MarkupContent) contents_);
    }
    if (range_ != null) {
      output.writeMessage(4, getRange());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (contentsCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (protocol.rpc.MarkedString) contents_);
    }
    if (contentsCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (protocol.rpc.Hover.MarkedStrings) contents_);
    }
    if (contentsCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (protocol.MarkupContent) contents_);
    }
    if (range_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRange());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.Hover)) {
      return super.equals(obj);
    }
    protocol.rpc.Hover other = (protocol.rpc.Hover) obj;

    boolean result = true;
    result = result && (hasRange() == other.hasRange());
    if (hasRange()) {
      result = result && getRange()
          .equals(other.getRange());
    }
    result = result && getContentsCase().equals(
        other.getContentsCase());
    if (!result) return false;
    switch (contentsCase_) {
      case 1:
        result = result && getMarkedString()
            .equals(other.getMarkedString());
        break;
      case 2:
        result = result && getMarkedStrings()
            .equals(other.getMarkedStrings());
        break;
      case 3:
        result = result && getMarkupContent()
            .equals(other.getMarkupContent());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRange()) {
      hash = (37 * hash) + RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getRange().hashCode();
    }
    switch (contentsCase_) {
      case 1:
        hash = (37 * hash) + MARKED_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getMarkedString().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MARKED_STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMarkedStrings().hashCode();
        break;
      case 3:
        hash = (37 * hash) + MARKUP_CONTENT_FIELD_NUMBER;
        hash = (53 * hash) + getMarkupContent().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.Hover parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.Hover parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.Hover parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.Hover parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.Hover parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.Hover parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.Hover parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.Hover parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.Hover parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.Hover parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.Hover prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Hover is the result of a hover request.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.Hover}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.Hover)
      protocol.rpc.HoverOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.Hover.class, protocol.rpc.Hover.Builder.class);
    }

    // Construct using protocol.rpc.Hover.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (rangeBuilder_ == null) {
        range_ = null;
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }
      contentsCase_ = 0;
      contents_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_Hover_descriptor;
    }

    public protocol.rpc.Hover getDefaultInstanceForType() {
      return protocol.rpc.Hover.getDefaultInstance();
    }

    public protocol.rpc.Hover build() {
      protocol.rpc.Hover result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.Hover buildPartial() {
      protocol.rpc.Hover result = new protocol.rpc.Hover(this);
      if (contentsCase_ == 1) {
        if (markedStringBuilder_ == null) {
          result.contents_ = contents_;
        } else {
          result.contents_ = markedStringBuilder_.build();
        }
      }
      if (contentsCase_ == 2) {
        if (markedStringsBuilder_ == null) {
          result.contents_ = contents_;
        } else {
          result.contents_ = markedStringsBuilder_.build();
        }
      }
      if (contentsCase_ == 3) {
        if (markupContentBuilder_ == null) {
          result.contents_ = contents_;
        } else {
          result.contents_ = markupContentBuilder_.build();
        }
      }
      if (rangeBuilder_ == null) {
        result.range_ = range_;
      } else {
        result.range_ = rangeBuilder_.build();
      }
      result.contentsCase_ = contentsCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.Hover) {
        return mergeFrom((protocol.rpc.Hover)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.Hover other) {
      if (other == protocol.rpc.Hover.getDefaultInstance()) return this;
      if (other.hasRange()) {
        mergeRange(other.getRange());
      }
      switch (other.getContentsCase()) {
        case MARKED_STRING: {
          mergeMarkedString(other.getMarkedString());
          break;
        }
        case MARKED_STRINGS: {
          mergeMarkedStrings(other.getMarkedStrings());
          break;
        }
        case MARKUP_CONTENT: {
          mergeMarkupContent(other.getMarkupContent());
          break;
        }
        case CONTENTS_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.Hover parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.Hover) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int contentsCase_ = 0;
    private java.lang.Object contents_;
    public ContentsCase
        getContentsCase() {
      return ContentsCase.forNumber(
          contentsCase_);
    }

    public Builder clearContents() {
      contentsCase_ = 0;
      contents_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder> markedStringBuilder_;
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public protocol.rpc.MarkedString getMarkedString() {
      if (markedStringBuilder_ == null) {
        if (contentsCase_ == 1) {
          return (protocol.rpc.MarkedString) contents_;
        }
        return protocol.rpc.MarkedString.getDefaultInstance();
      } else {
        if (contentsCase_ == 1) {
          return markedStringBuilder_.getMessage();
        }
        return protocol.rpc.MarkedString.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public Builder setMarkedString(protocol.rpc.MarkedString value) {
      if (markedStringBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contents_ = value;
        onChanged();
      } else {
        markedStringBuilder_.setMessage(value);
      }
      contentsCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public Builder setMarkedString(
        protocol.rpc.MarkedString.Builder builderForValue) {
      if (markedStringBuilder_ == null) {
        contents_ = builderForValue.build();
        onChanged();
      } else {
        markedStringBuilder_.setMessage(builderForValue.build());
      }
      contentsCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public Builder mergeMarkedString(protocol.rpc.MarkedString value) {
      if (markedStringBuilder_ == null) {
        if (contentsCase_ == 1 &&
            contents_ != protocol.rpc.MarkedString.getDefaultInstance()) {
          contents_ = protocol.rpc.MarkedString.newBuilder((protocol.rpc.MarkedString) contents_)
              .mergeFrom(value).buildPartial();
        } else {
          contents_ = value;
        }
        onChanged();
      } else {
        if (contentsCase_ == 1) {
          markedStringBuilder_.mergeFrom(value);
        }
        markedStringBuilder_.setMessage(value);
      }
      contentsCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public Builder clearMarkedString() {
      if (markedStringBuilder_ == null) {
        if (contentsCase_ == 1) {
          contentsCase_ = 0;
          contents_ = null;
          onChanged();
        }
      } else {
        if (contentsCase_ == 1) {
          contentsCase_ = 0;
          contents_ = null;
        }
        markedStringBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public protocol.rpc.MarkedString.Builder getMarkedStringBuilder() {
      return getMarkedStringFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    public protocol.rpc.MarkedStringOrBuilder getMarkedStringOrBuilder() {
      if ((contentsCase_ == 1) && (markedStringBuilder_ != null)) {
        return markedStringBuilder_.getMessageOrBuilder();
      } else {
        if (contentsCase_ == 1) {
          return (protocol.rpc.MarkedString) contents_;
        }
        return protocol.rpc.MarkedString.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.MarkedString marked_string = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder> 
        getMarkedStringFieldBuilder() {
      if (markedStringBuilder_ == null) {
        if (!(contentsCase_ == 1)) {
          contents_ = protocol.rpc.MarkedString.getDefaultInstance();
        }
        markedStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.MarkedString, protocol.rpc.MarkedString.Builder, protocol.rpc.MarkedStringOrBuilder>(
                (protocol.rpc.MarkedString) contents_,
                getParentForChildren(),
                isClean());
        contents_ = null;
      }
      contentsCase_ = 1;
      onChanged();;
      return markedStringBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.Hover.MarkedStrings, protocol.rpc.Hover.MarkedStrings.Builder, protocol.rpc.Hover.MarkedStringsOrBuilder> markedStringsBuilder_;
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public protocol.rpc.Hover.MarkedStrings getMarkedStrings() {
      if (markedStringsBuilder_ == null) {
        if (contentsCase_ == 2) {
          return (protocol.rpc.Hover.MarkedStrings) contents_;
        }
        return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
      } else {
        if (contentsCase_ == 2) {
          return markedStringsBuilder_.getMessage();
        }
        return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public Builder setMarkedStrings(protocol.rpc.Hover.MarkedStrings value) {
      if (markedStringsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contents_ = value;
        onChanged();
      } else {
        markedStringsBuilder_.setMessage(value);
      }
      contentsCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public Builder setMarkedStrings(
        protocol.rpc.Hover.MarkedStrings.Builder builderForValue) {
      if (markedStringsBuilder_ == null) {
        contents_ = builderForValue.build();
        onChanged();
      } else {
        markedStringsBuilder_.setMessage(builderForValue.build());
      }
      contentsCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public Builder mergeMarkedStrings(protocol.rpc.Hover.MarkedStrings value) {
      if (markedStringsBuilder_ == null) {
        if (contentsCase_ == 2 &&
            contents_ != protocol.rpc.Hover.MarkedStrings.getDefaultInstance()) {
          contents_ = protocol.rpc.Hover.MarkedStrings.newBuilder((protocol.rpc.Hover.MarkedStrings) contents_)
              .mergeFrom(value).buildPartial();
        } else {
          contents_ = value;
        }
        onChanged();
      } else {
        if (contentsCase_ == 2) {
          markedStringsBuilder_.mergeFrom(value);
        }
        markedStringsBuilder_.setMessage(value);
      }
      contentsCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public Builder clearMarkedStrings() {
      if (markedStringsBuilder_ == null) {
        if (contentsCase_ == 2) {
          contentsCase_ = 0;
          contents_ = null;
          onChanged();
        }
      } else {
        if (contentsCase_ == 2) {
          contentsCase_ = 0;
          contents_ = null;
        }
        markedStringsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public protocol.rpc.Hover.MarkedStrings.Builder getMarkedStringsBuilder() {
      return getMarkedStringsFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    public protocol.rpc.Hover.MarkedStringsOrBuilder getMarkedStringsOrBuilder() {
      if ((contentsCase_ == 2) && (markedStringsBuilder_ != null)) {
        return markedStringsBuilder_.getMessageOrBuilder();
      } else {
        if (contentsCase_ == 2) {
          return (protocol.rpc.Hover.MarkedStrings) contents_;
        }
        return protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.Hover.MarkedStrings marked_strings = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.Hover.MarkedStrings, protocol.rpc.Hover.MarkedStrings.Builder, protocol.rpc.Hover.MarkedStringsOrBuilder> 
        getMarkedStringsFieldBuilder() {
      if (markedStringsBuilder_ == null) {
        if (!(contentsCase_ == 2)) {
          contents_ = protocol.rpc.Hover.MarkedStrings.getDefaultInstance();
        }
        markedStringsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.Hover.MarkedStrings, protocol.rpc.Hover.MarkedStrings.Builder, protocol.rpc.Hover.MarkedStringsOrBuilder>(
                (protocol.rpc.Hover.MarkedStrings) contents_,
                getParentForChildren(),
                isClean());
        contents_ = null;
      }
      contentsCase_ = 2;
      onChanged();;
      return markedStringsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder> markupContentBuilder_;
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContent getMarkupContent() {
      if (markupContentBuilder_ == null) {
        if (contentsCase_ == 3) {
          return (protocol.MarkupContent) contents_;
        }
        return protocol.MarkupContent.getDefaultInstance();
      } else {
        if (contentsCase_ == 3) {
          return markupContentBuilder_.getMessage();
        }
        return protocol.MarkupContent.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder setMarkupContent(protocol.MarkupContent value) {
      if (markupContentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        contents_ = value;
        onChanged();
      } else {
        markupContentBuilder_.setMessage(value);
      }
      contentsCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder setMarkupContent(
        protocol.MarkupContent.Builder builderForValue) {
      if (markupContentBuilder_ == null) {
        contents_ = builderForValue.build();
        onChanged();
      } else {
        markupContentBuilder_.setMessage(builderForValue.build());
      }
      contentsCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder mergeMarkupContent(protocol.MarkupContent value) {
      if (markupContentBuilder_ == null) {
        if (contentsCase_ == 3 &&
            contents_ != protocol.MarkupContent.getDefaultInstance()) {
          contents_ = protocol.MarkupContent.newBuilder((protocol.MarkupContent) contents_)
              .mergeFrom(value).buildPartial();
        } else {
          contents_ = value;
        }
        onChanged();
      } else {
        if (contentsCase_ == 3) {
          markupContentBuilder_.mergeFrom(value);
        }
        markupContentBuilder_.setMessage(value);
      }
      contentsCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder clearMarkupContent() {
      if (markupContentBuilder_ == null) {
        if (contentsCase_ == 3) {
          contentsCase_ = 0;
          contents_ = null;
          onChanged();
        }
      } else {
        if (contentsCase_ == 3) {
          contentsCase_ = 0;
          contents_ = null;
        }
        markupContentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContent.Builder getMarkupContentBuilder() {
      return getMarkupContentFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContentOrBuilder getMarkupContentOrBuilder() {
      if ((contentsCase_ == 3) && (markupContentBuilder_ != null)) {
        return markupContentBuilder_.getMessageOrBuilder();
      } else {
        if (contentsCase_ == 3) {
          return (protocol.MarkupContent) contents_;
        }
        return protocol.MarkupContent.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder> 
        getMarkupContentFieldBuilder() {
      if (markupContentBuilder_ == null) {
        if (!(contentsCase_ == 3)) {
          contents_ = protocol.MarkupContent.getDefaultInstance();
        }
        markupContentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder>(
                (protocol.MarkupContent) contents_,
                getParentForChildren(),
                isClean());
        contents_ = null;
      }
      contentsCase_ = 3;
      onChanged();;
      return markupContentBuilder_;
    }

    private protocol.Range range_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> rangeBuilder_;
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public boolean hasRange() {
      return rangeBuilder_ != null || range_ != null;
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public protocol.Range getRange() {
      if (rangeBuilder_ == null) {
        return range_ == null ? protocol.Range.getDefaultInstance() : range_;
      } else {
        return rangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public Builder setRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        rangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public Builder setRange(
        protocol.Range.Builder builderForValue) {
      if (rangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        rangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public Builder mergeRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (range_ != null) {
          range_ =
            protocol.Range.newBuilder(range_).mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        rangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public Builder clearRange() {
      if (rangeBuilder_ == null) {
        range_ = null;
        onChanged();
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public protocol.Range.Builder getRangeBuilder() {
      
      onChanged();
      return getRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    public protocol.RangeOrBuilder getRangeOrBuilder() {
      if (rangeBuilder_ != null) {
        return rangeBuilder_.getMessageOrBuilder();
      } else {
        return range_ == null ?
            protocol.Range.getDefaultInstance() : range_;
      }
    }
    /**
     * <pre>
     * An optional range is a range inside a text document
     * that is used to visualize a hover, e.g. by changing the background color.
     * </pre>
     *
     * <code>.protocol.Range range = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> 
        getRangeFieldBuilder() {
      if (rangeBuilder_ == null) {
        rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder>(
                getRange(),
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      return rangeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.Hover)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.Hover)
  private static final protocol.rpc.Hover DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.Hover();
  }

  public static protocol.rpc.Hover getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Hover>
      PARSER = new com.google.protobuf.AbstractParser<Hover>() {
    public Hover parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hover(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Hover> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Hover> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.Hover getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

