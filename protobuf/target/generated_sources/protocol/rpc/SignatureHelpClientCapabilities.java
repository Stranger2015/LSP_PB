// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * SignatureHelpClientCapabilities represents a client capabilities of `textDocument/signatureHelp`
 * request.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities}
 */
public  final class SignatureHelpClientCapabilities extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.SignatureHelpClientCapabilities)
    SignatureHelpClientCapabilitiesOrBuilder {
  // Use SignatureHelpClientCapabilities.newBuilder() to construct.
  private SignatureHelpClientCapabilities(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SignatureHelpClientCapabilities() {
    dynamicRegistration_ = false;
    contextSupport_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SignatureHelpClientCapabilities(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            dynamicRegistration_ = input.readBool();
            break;
          }
          case 18: {
            protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder subBuilder = null;
            if (signatureInformation_ != null) {
              subBuilder = signatureInformation_.toBuilder();
            }
            signatureInformation_ = input.readMessage(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(signatureInformation_);
              signatureInformation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            contextSupport_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.SignatureHelpClientCapabilities.class, protocol.rpc.SignatureHelpClientCapabilities.Builder.class);
  }

  public interface SignatureInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    java.util.List<protocol.MarkupKind> getDocumentationFormatList();
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    int getDocumentationFormatCount();
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    protocol.MarkupKind getDocumentationFormat(int index);
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    java.util.List<java.lang.Integer>
    getDocumentationFormatValueList();
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    int getDocumentationFormatValue(int index);

    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    boolean hasParameterInformation();
    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getParameterInformation();
    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder getParameterInformationOrBuilder();

    /**
     * <pre>
     * Optional. The client support the `activeParameter` property on `SignatureInformation`
     * literal.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>bool active_parameter_support = 3;</code>
     */
    boolean getActiveParameterSupport();
  }
  /**
   * <pre>
   * The client supports the following `SignatureInformation`
   * specific properties.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation}
   */
  public  static final class SignatureInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)
      SignatureInformationOrBuilder {
    // Use SignatureInformation.newBuilder() to construct.
    private SignatureInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignatureInformation() {
      documentationFormat_ = java.util.Collections.emptyList();
      activeParameterSupport_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SignatureInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                documentationFormat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              documentationFormat_.add(rawValue);
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  documentationFormat_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                documentationFormat_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 18: {
              protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder subBuilder = null;
              if (parameterInformation_ != null) {
                subBuilder = parameterInformation_.toBuilder();
              }
              parameterInformation_ = input.readMessage(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parameterInformation_);
                parameterInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              activeParameterSupport_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          documentationFormat_ = java.util.Collections.unmodifiableList(documentationFormat_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.class, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder.class);
    }

    public interface ParameterInformationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Optional. The client supports processing label offsets instead of a
       * simple label string.
       * &#64;since 3.14.0
       * </pre>
       *
       * <code>bool label_offset_support = 1;</code>
       */
      boolean getLabelOffsetSupport();
    }
    /**
     * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation}
     */
    public  static final class ParameterInformation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)
        ParameterInformationOrBuilder {
      // Use ParameterInformation.newBuilder() to construct.
      private ParameterInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ParameterInformation() {
        labelOffsetSupport_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private ParameterInformation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                labelOffsetSupport_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_ParameterInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_ParameterInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.class, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder.class);
      }

      public static final int LABEL_OFFSET_SUPPORT_FIELD_NUMBER = 1;
      private boolean labelOffsetSupport_;
      /**
       * <pre>
       * Optional. The client supports processing label offsets instead of a
       * simple label string.
       * &#64;since 3.14.0
       * </pre>
       *
       * <code>bool label_offset_support = 1;</code>
       */
      public boolean getLabelOffsetSupport() {
        return labelOffsetSupport_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (labelOffsetSupport_ != false) {
          output.writeBool(1, labelOffsetSupport_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (labelOffsetSupport_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, labelOffsetSupport_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)) {
          return super.equals(obj);
        }
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation other = (protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation) obj;

        boolean result = true;
        result = result && (getLabelOffsetSupport()
            == other.getLabelOffsetSupport());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LABEL_OFFSET_SUPPORT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLabelOffsetSupport());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_ParameterInformation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_ParameterInformation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.class, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder.class);
        }

        // Construct using protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          labelOffsetSupport_ = false;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_ParameterInformation_descriptor;
        }

        public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getDefaultInstanceForType() {
          return protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.getDefaultInstance();
        }

        public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation build() {
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation buildPartial() {
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation result = new protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation(this);
          result.labelOffsetSupport_ = labelOffsetSupport_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation) {
            return mergeFrom((protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation other) {
          if (other == protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.getDefaultInstance()) return this;
          if (other.getLabelOffsetSupport() != false) {
            setLabelOffsetSupport(other.getLabelOffsetSupport());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private boolean labelOffsetSupport_ ;
        /**
         * <pre>
         * Optional. The client supports processing label offsets instead of a
         * simple label string.
         * &#64;since 3.14.0
         * </pre>
         *
         * <code>bool label_offset_support = 1;</code>
         */
        public boolean getLabelOffsetSupport() {
          return labelOffsetSupport_;
        }
        /**
         * <pre>
         * Optional. The client supports processing label offsets instead of a
         * simple label string.
         * &#64;since 3.14.0
         * </pre>
         *
         * <code>bool label_offset_support = 1;</code>
         */
        public Builder setLabelOffsetSupport(boolean value) {
          
          labelOffsetSupport_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Optional. The client supports processing label offsets instead of a
         * simple label string.
         * &#64;since 3.14.0
         * </pre>
         *
         * <code>bool label_offset_support = 1;</code>
         */
        public Builder clearLabelOffsetSupport() {
          
          labelOffsetSupport_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)
      }

      // @@protoc_insertion_point(class_scope:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation)
      private static final protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation();
      }

      public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ParameterInformation>
          PARSER = new com.google.protobuf.AbstractParser<ParameterInformation>() {
        public ParameterInformation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new ParameterInformation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ParameterInformation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ParameterInformation> getParserForType() {
        return PARSER;
      }

      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int DOCUMENTATION_FORMAT_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> documentationFormat_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, protocol.MarkupKind> documentationFormat_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, protocol.MarkupKind>() {
              public protocol.MarkupKind convert(java.lang.Integer from) {
                protocol.MarkupKind result = protocol.MarkupKind.valueOf(from);
                return result == null ? protocol.MarkupKind.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    public java.util.List<protocol.MarkupKind> getDocumentationFormatList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, protocol.MarkupKind>(documentationFormat_, documentationFormat_converter_);
    }
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    public int getDocumentationFormatCount() {
      return documentationFormat_.size();
    }
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    public protocol.MarkupKind getDocumentationFormat(int index) {
      return documentationFormat_converter_.convert(documentationFormat_.get(index));
    }
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    public java.util.List<java.lang.Integer>
    getDocumentationFormatValueList() {
      return documentationFormat_;
    }
    /**
     * <pre>
     * Client supports the follow content formats for the documentation
     * property. The order describes the preferred format of the client.
     * </pre>
     *
     * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
     */
    public int getDocumentationFormatValue(int index) {
      return documentationFormat_.get(index);
    }
    private int documentationFormatMemoizedSerializedSize;

    public static final int PARAMETER_INFORMATION_FIELD_NUMBER = 2;
    private protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameterInformation_;
    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    public boolean hasParameterInformation() {
      return parameterInformation_ != null;
    }
    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getParameterInformation() {
      return parameterInformation_ == null ? protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.getDefaultInstance() : parameterInformation_;
    }
    /**
     * <pre>
     * Client capabilities specific to parameter information.
     * </pre>
     *
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
     */
    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder getParameterInformationOrBuilder() {
      return getParameterInformation();
    }

    public static final int ACTIVE_PARAMETER_SUPPORT_FIELD_NUMBER = 3;
    private boolean activeParameterSupport_;
    /**
     * <pre>
     * Optional. The client support the `activeParameter` property on `SignatureInformation`
     * literal.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>bool active_parameter_support = 3;</code>
     */
    public boolean getActiveParameterSupport() {
      return activeParameterSupport_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDocumentationFormatList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(documentationFormatMemoizedSerializedSize);
      }
      for (int i = 0; i < documentationFormat_.size(); i++) {
        output.writeEnumNoTag(documentationFormat_.get(i));
      }
      if (parameterInformation_ != null) {
        output.writeMessage(2, getParameterInformation());
      }
      if (activeParameterSupport_ != false) {
        output.writeBool(3, activeParameterSupport_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < documentationFormat_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(documentationFormat_.get(i));
        }
        size += dataSize;
        if (!getDocumentationFormatList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }documentationFormatMemoizedSerializedSize = dataSize;
      }
      if (parameterInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParameterInformation());
      }
      if (activeParameterSupport_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, activeParameterSupport_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)) {
        return super.equals(obj);
      }
      protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation other = (protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation) obj;

      boolean result = true;
      result = result && documentationFormat_.equals(other.documentationFormat_);
      result = result && (hasParameterInformation() == other.hasParameterInformation());
      if (hasParameterInformation()) {
        result = result && getParameterInformation()
            .equals(other.getParameterInformation());
      }
      result = result && (getActiveParameterSupport()
          == other.getActiveParameterSupport());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDocumentationFormatCount() > 0) {
        hash = (37 * hash) + DOCUMENTATION_FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + documentationFormat_.hashCode();
      }
      if (hasParameterInformation()) {
        hash = (37 * hash) + PARAMETER_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getParameterInformation().hashCode();
      }
      hash = (37 * hash) + ACTIVE_PARAMETER_SUPPORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActiveParameterSupport());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The client supports the following `SignatureInformation`
     * specific properties.
     * </pre>
     *
     * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.class, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder.class);
      }

      // Construct using protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        documentationFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (parameterInformationBuilder_ == null) {
          parameterInformation_ = null;
        } else {
          parameterInformation_ = null;
          parameterInformationBuilder_ = null;
        }
        activeParameterSupport_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_SignatureInformation_descriptor;
      }

      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation getDefaultInstanceForType() {
        return protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.getDefaultInstance();
      }

      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation build() {
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation buildPartial() {
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation result = new protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          documentationFormat_ = java.util.Collections.unmodifiableList(documentationFormat_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.documentationFormat_ = documentationFormat_;
        if (parameterInformationBuilder_ == null) {
          result.parameterInformation_ = parameterInformation_;
        } else {
          result.parameterInformation_ = parameterInformationBuilder_.build();
        }
        result.activeParameterSupport_ = activeParameterSupport_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation) {
          return mergeFrom((protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation other) {
        if (other == protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.getDefaultInstance()) return this;
        if (!other.documentationFormat_.isEmpty()) {
          if (documentationFormat_.isEmpty()) {
            documentationFormat_ = other.documentationFormat_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDocumentationFormatIsMutable();
            documentationFormat_.addAll(other.documentationFormat_);
          }
          onChanged();
        }
        if (other.hasParameterInformation()) {
          mergeParameterInformation(other.getParameterInformation());
        }
        if (other.getActiveParameterSupport() != false) {
          setActiveParameterSupport(other.getActiveParameterSupport());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> documentationFormat_ =
        java.util.Collections.emptyList();
      private void ensureDocumentationFormatIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          documentationFormat_ = new java.util.ArrayList<java.lang.Integer>(documentationFormat_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public java.util.List<protocol.MarkupKind> getDocumentationFormatList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, protocol.MarkupKind>(documentationFormat_, documentationFormat_converter_);
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public int getDocumentationFormatCount() {
        return documentationFormat_.size();
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public protocol.MarkupKind getDocumentationFormat(int index) {
        return documentationFormat_converter_.convert(documentationFormat_.get(index));
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder setDocumentationFormat(
          int index, protocol.MarkupKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDocumentationFormatIsMutable();
        documentationFormat_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder addDocumentationFormat(protocol.MarkupKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDocumentationFormatIsMutable();
        documentationFormat_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder addAllDocumentationFormat(
          java.lang.Iterable<? extends protocol.MarkupKind> values) {
        ensureDocumentationFormatIsMutable();
        for (protocol.MarkupKind value : values) {
          documentationFormat_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder clearDocumentationFormat() {
        documentationFormat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public java.util.List<java.lang.Integer>
      getDocumentationFormatValueList() {
        return java.util.Collections.unmodifiableList(documentationFormat_);
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public int getDocumentationFormatValue(int index) {
        return documentationFormat_.get(index);
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder setDocumentationFormatValue(
          int index, int value) {
        ensureDocumentationFormatIsMutable();
        documentationFormat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder addDocumentationFormatValue(int value) {
        ensureDocumentationFormatIsMutable();
        documentationFormat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client supports the follow content formats for the documentation
       * property. The order describes the preferred format of the client.
       * </pre>
       *
       * <code>repeated .protocol.MarkupKind documentation_format = 1;</code>
       */
      public Builder addAllDocumentationFormatValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureDocumentationFormatIsMutable();
        for (int value : values) {
          documentationFormat_.add(value);
        }
        onChanged();
        return this;
      }

      private protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameterInformation_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder> parameterInformationBuilder_;
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public boolean hasParameterInformation() {
        return parameterInformationBuilder_ != null || parameterInformation_ != null;
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation getParameterInformation() {
        if (parameterInformationBuilder_ == null) {
          return parameterInformation_ == null ? protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.getDefaultInstance() : parameterInformation_;
        } else {
          return parameterInformationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public Builder setParameterInformation(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation value) {
        if (parameterInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameterInformation_ = value;
          onChanged();
        } else {
          parameterInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public Builder setParameterInformation(
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder builderForValue) {
        if (parameterInformationBuilder_ == null) {
          parameterInformation_ = builderForValue.build();
          onChanged();
        } else {
          parameterInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public Builder mergeParameterInformation(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation value) {
        if (parameterInformationBuilder_ == null) {
          if (parameterInformation_ != null) {
            parameterInformation_ =
              protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.newBuilder(parameterInformation_).mergeFrom(value).buildPartial();
          } else {
            parameterInformation_ = value;
          }
          onChanged();
        } else {
          parameterInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public Builder clearParameterInformation() {
        if (parameterInformationBuilder_ == null) {
          parameterInformation_ = null;
          onChanged();
        } else {
          parameterInformation_ = null;
          parameterInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder getParameterInformationBuilder() {
        
        onChanged();
        return getParameterInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder getParameterInformationOrBuilder() {
        if (parameterInformationBuilder_ != null) {
          return parameterInformationBuilder_.getMessageOrBuilder();
        } else {
          return parameterInformation_ == null ?
              protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.getDefaultInstance() : parameterInformation_;
        }
      }
      /**
       * <pre>
       * Client capabilities specific to parameter information.
       * </pre>
       *
       * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation parameter_information = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder> 
          getParameterInformationFieldBuilder() {
        if (parameterInformationBuilder_ == null) {
          parameterInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.ParameterInformationOrBuilder>(
                  getParameterInformation(),
                  getParentForChildren(),
                  isClean());
          parameterInformation_ = null;
        }
        return parameterInformationBuilder_;
      }

      private boolean activeParameterSupport_ ;
      /**
       * <pre>
       * Optional. The client support the `activeParameter` property on `SignatureInformation`
       * literal.
       * &#64;since 3.16.0 - proposed state
       * </pre>
       *
       * <code>bool active_parameter_support = 3;</code>
       */
      public boolean getActiveParameterSupport() {
        return activeParameterSupport_;
      }
      /**
       * <pre>
       * Optional. The client support the `activeParameter` property on `SignatureInformation`
       * literal.
       * &#64;since 3.16.0 - proposed state
       * </pre>
       *
       * <code>bool active_parameter_support = 3;</code>
       */
      public Builder setActiveParameterSupport(boolean value) {
        
        activeParameterSupport_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional. The client support the `activeParameter` property on `SignatureInformation`
       * literal.
       * &#64;since 3.16.0 - proposed state
       * </pre>
       *
       * <code>bool active_parameter_support = 3;</code>
       */
      public Builder clearActiveParameterSupport() {
        
        activeParameterSupport_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)
    }

    // @@protoc_insertion_point(class_scope:protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation)
    private static final protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation();
    }

    public static protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignatureInformation>
        PARSER = new com.google.protobuf.AbstractParser<SignatureInformation>() {
      public SignatureInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SignatureInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignatureInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureInformation> getParserForType() {
      return PARSER;
    }

    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int DYNAMIC_REGISTRATION_FIELD_NUMBER = 1;
  private boolean dynamicRegistration_;
  /**
   * <pre>
   * Optional. Whether signature help supports dynamic registration.
   * </pre>
   *
   * <code>bool dynamic_registration = 1;</code>
   */
  public boolean getDynamicRegistration() {
    return dynamicRegistration_;
  }

  public static final int SIGNATURE_INFORMATION_FIELD_NUMBER = 2;
  private protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signatureInformation_;
  /**
   * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
   */
  public boolean hasSignatureInformation() {
    return signatureInformation_ != null;
  }
  /**
   * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
   */
  public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation getSignatureInformation() {
    return signatureInformation_ == null ? protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.getDefaultInstance() : signatureInformation_;
  }
  /**
   * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
   */
  public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder getSignatureInformationOrBuilder() {
    return getSignatureInformation();
  }

  public static final int CONTEXT_SUPPORT_FIELD_NUMBER = 3;
  private boolean contextSupport_;
  /**
   * <pre>
   * Optional. The client supports to send additional context information for a
   * `textDocument/signatureHelp` request. A client that opts into
   * contextSupport will also support the `retriggerCharacters` on
   * `SignatureHelpOptions`.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>bool context_support = 3;</code>
   */
  public boolean getContextSupport() {
    return contextSupport_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (dynamicRegistration_ != false) {
      output.writeBool(1, dynamicRegistration_);
    }
    if (signatureInformation_ != null) {
      output.writeMessage(2, getSignatureInformation());
    }
    if (contextSupport_ != false) {
      output.writeBool(3, contextSupport_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (dynamicRegistration_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, dynamicRegistration_);
    }
    if (signatureInformation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSignatureInformation());
    }
    if (contextSupport_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, contextSupport_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.SignatureHelpClientCapabilities)) {
      return super.equals(obj);
    }
    protocol.rpc.SignatureHelpClientCapabilities other = (protocol.rpc.SignatureHelpClientCapabilities) obj;

    boolean result = true;
    result = result && (getDynamicRegistration()
        == other.getDynamicRegistration());
    result = result && (hasSignatureInformation() == other.hasSignatureInformation());
    if (hasSignatureInformation()) {
      result = result && getSignatureInformation()
          .equals(other.getSignatureInformation());
    }
    result = result && (getContextSupport()
        == other.getContextSupport());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DYNAMIC_REGISTRATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDynamicRegistration());
    if (hasSignatureInformation()) {
      hash = (37 * hash) + SIGNATURE_INFORMATION_FIELD_NUMBER;
      hash = (53 * hash) + getSignatureInformation().hashCode();
    }
    hash = (37 * hash) + CONTEXT_SUPPORT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getContextSupport());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureHelpClientCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.SignatureHelpClientCapabilities prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SignatureHelpClientCapabilities represents a client capabilities of `textDocument/signatureHelp`
   * request.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.SignatureHelpClientCapabilities}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.SignatureHelpClientCapabilities)
      protocol.rpc.SignatureHelpClientCapabilitiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.SignatureHelpClientCapabilities.class, protocol.rpc.SignatureHelpClientCapabilities.Builder.class);
    }

    // Construct using protocol.rpc.SignatureHelpClientCapabilities.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      dynamicRegistration_ = false;

      if (signatureInformationBuilder_ == null) {
        signatureInformation_ = null;
      } else {
        signatureInformation_ = null;
        signatureInformationBuilder_ = null;
      }
      contextSupport_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureHelpClientCapabilities_descriptor;
    }

    public protocol.rpc.SignatureHelpClientCapabilities getDefaultInstanceForType() {
      return protocol.rpc.SignatureHelpClientCapabilities.getDefaultInstance();
    }

    public protocol.rpc.SignatureHelpClientCapabilities build() {
      protocol.rpc.SignatureHelpClientCapabilities result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.SignatureHelpClientCapabilities buildPartial() {
      protocol.rpc.SignatureHelpClientCapabilities result = new protocol.rpc.SignatureHelpClientCapabilities(this);
      result.dynamicRegistration_ = dynamicRegistration_;
      if (signatureInformationBuilder_ == null) {
        result.signatureInformation_ = signatureInformation_;
      } else {
        result.signatureInformation_ = signatureInformationBuilder_.build();
      }
      result.contextSupport_ = contextSupport_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.SignatureHelpClientCapabilities) {
        return mergeFrom((protocol.rpc.SignatureHelpClientCapabilities)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.SignatureHelpClientCapabilities other) {
      if (other == protocol.rpc.SignatureHelpClientCapabilities.getDefaultInstance()) return this;
      if (other.getDynamicRegistration() != false) {
        setDynamicRegistration(other.getDynamicRegistration());
      }
      if (other.hasSignatureInformation()) {
        mergeSignatureInformation(other.getSignatureInformation());
      }
      if (other.getContextSupport() != false) {
        setContextSupport(other.getContextSupport());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.SignatureHelpClientCapabilities parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.SignatureHelpClientCapabilities) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean dynamicRegistration_ ;
    /**
     * <pre>
     * Optional. Whether signature help supports dynamic registration.
     * </pre>
     *
     * <code>bool dynamic_registration = 1;</code>
     */
    public boolean getDynamicRegistration() {
      return dynamicRegistration_;
    }
    /**
     * <pre>
     * Optional. Whether signature help supports dynamic registration.
     * </pre>
     *
     * <code>bool dynamic_registration = 1;</code>
     */
    public Builder setDynamicRegistration(boolean value) {
      
      dynamicRegistration_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Whether signature help supports dynamic registration.
     * </pre>
     *
     * <code>bool dynamic_registration = 1;</code>
     */
    public Builder clearDynamicRegistration() {
      
      dynamicRegistration_ = false;
      onChanged();
      return this;
    }

    private protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signatureInformation_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder> signatureInformationBuilder_;
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public boolean hasSignatureInformation() {
      return signatureInformationBuilder_ != null || signatureInformation_ != null;
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation getSignatureInformation() {
      if (signatureInformationBuilder_ == null) {
        return signatureInformation_ == null ? protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.getDefaultInstance() : signatureInformation_;
      } else {
        return signatureInformationBuilder_.getMessage();
      }
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public Builder setSignatureInformation(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation value) {
      if (signatureInformationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        signatureInformation_ = value;
        onChanged();
      } else {
        signatureInformationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public Builder setSignatureInformation(
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder builderForValue) {
      if (signatureInformationBuilder_ == null) {
        signatureInformation_ = builderForValue.build();
        onChanged();
      } else {
        signatureInformationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public Builder mergeSignatureInformation(protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation value) {
      if (signatureInformationBuilder_ == null) {
        if (signatureInformation_ != null) {
          signatureInformation_ =
            protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.newBuilder(signatureInformation_).mergeFrom(value).buildPartial();
        } else {
          signatureInformation_ = value;
        }
        onChanged();
      } else {
        signatureInformationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public Builder clearSignatureInformation() {
      if (signatureInformationBuilder_ == null) {
        signatureInformation_ = null;
        onChanged();
      } else {
        signatureInformation_ = null;
        signatureInformationBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder getSignatureInformationBuilder() {
      
      onChanged();
      return getSignatureInformationFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    public protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder getSignatureInformationOrBuilder() {
      if (signatureInformationBuilder_ != null) {
        return signatureInformationBuilder_.getMessageOrBuilder();
      } else {
        return signatureInformation_ == null ?
            protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.getDefaultInstance() : signatureInformation_;
      }
    }
    /**
     * <code>.protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation signature_information = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder> 
        getSignatureInformationFieldBuilder() {
      if (signatureInformationBuilder_ == null) {
        signatureInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformation.Builder, protocol.rpc.SignatureHelpClientCapabilities.SignatureInformationOrBuilder>(
                getSignatureInformation(),
                getParentForChildren(),
                isClean());
        signatureInformation_ = null;
      }
      return signatureInformationBuilder_;
    }

    private boolean contextSupport_ ;
    /**
     * <pre>
     * Optional. The client supports to send additional context information for a
     * `textDocument/signatureHelp` request. A client that opts into
     * contextSupport will also support the `retriggerCharacters` on
     * `SignatureHelpOptions`.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool context_support = 3;</code>
     */
    public boolean getContextSupport() {
      return contextSupport_;
    }
    /**
     * <pre>
     * Optional. The client supports to send additional context information for a
     * `textDocument/signatureHelp` request. A client that opts into
     * contextSupport will also support the `retriggerCharacters` on
     * `SignatureHelpOptions`.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool context_support = 3;</code>
     */
    public Builder setContextSupport(boolean value) {
      
      contextSupport_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The client supports to send additional context information for a
     * `textDocument/signatureHelp` request. A client that opts into
     * contextSupport will also support the `retriggerCharacters` on
     * `SignatureHelpOptions`.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool context_support = 3;</code>
     */
    public Builder clearContextSupport() {
      
      contextSupport_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.SignatureHelpClientCapabilities)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.SignatureHelpClientCapabilities)
  private static final protocol.rpc.SignatureHelpClientCapabilities DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.SignatureHelpClientCapabilities();
  }

  public static protocol.rpc.SignatureHelpClientCapabilities getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SignatureHelpClientCapabilities>
      PARSER = new com.google.protobuf.AbstractParser<SignatureHelpClientCapabilities>() {
    public SignatureHelpClientCapabilities parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureHelpClientCapabilities(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SignatureHelpClientCapabilities> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SignatureHelpClientCapabilities> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.SignatureHelpClientCapabilities getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

