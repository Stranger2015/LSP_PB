// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

public interface SemanticTokensOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.rpc.SemanticTokens)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An optional result id. If provided and clients support delta updating
   * the client will include the result id in the next semantic token request.
   * A server can then instead of computing all semantic tokens again simply
   * send a delta.
   * </pre>
   *
   * <code>.google.protobuf.StringValue result_id = 1;</code>
   */
  boolean hasResultId();
  /**
   * <pre>
   * An optional result id. If provided and clients support delta updating
   * the client will include the result id in the next semantic token request.
   * A server can then instead of computing all semantic tokens again simply
   * send a delta.
   * </pre>
   *
   * <code>.google.protobuf.StringValue result_id = 1;</code>
   */
  com.google.protobuf.StringValue getResultId();
  /**
   * <pre>
   * An optional result id. If provided and clients support delta updating
   * the client will include the result id in the next semantic token request.
   * A server can then instead of computing all semantic tokens again simply
   * send a delta.
   * </pre>
   *
   * <code>.google.protobuf.StringValue result_id = 1;</code>
   */
  com.google.protobuf.StringValueOrBuilder getResultIdOrBuilder();

  /**
   * <pre>
   * The actual tokens.
   * </pre>
   *
   * <code>repeated int32 data = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<java.lang.Integer> getDataList();
  /**
   * <pre>
   * The actual tokens.
   * </pre>
   *
   * <code>repeated int32 data = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getDataCount();
  /**
   * <pre>
   * The actual tokens.
   * </pre>
   *
   * <code>repeated int32 data = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getData(int index);
}
