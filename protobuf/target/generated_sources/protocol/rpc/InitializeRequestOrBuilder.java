// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

public interface InitializeRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.rpc.InitializeRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.rpc.WorkDoneProgressParams work_done_progress_params = 1;</code>
   */
  boolean hasWorkDoneProgressParams();
  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.rpc.WorkDoneProgressParams work_done_progress_params = 1;</code>
   */
  protocol.rpc.WorkDoneProgressParams getWorkDoneProgressParams();
  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.rpc.WorkDoneProgressParams work_done_progress_params = 1;</code>
   */
  protocol.rpc.WorkDoneProgressParamsOrBuilder getWorkDoneProgressParamsOrBuilder();

  /**
   * <pre>
   * Required. The process Id of the parent process that started
   * the server. Is null if the process has not been started by another process.
   * If the parent process is not alive then the server should exit (see exit notification) its
   * process.
   * </pre>
   *
   * <code>int32 process_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getProcessId();

  /**
   * <pre>
   * Optional. Information about the client.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>.protocol.rpc.InitializeRequest.ClientInfo client_info = 3;</code>
   */
  boolean hasClientInfo();
  /**
   * <pre>
   * Optional. Information about the client.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>.protocol.rpc.InitializeRequest.ClientInfo client_info = 3;</code>
   */
  protocol.rpc.InitializeRequest.ClientInfo getClientInfo();
  /**
   * <pre>
   * Optional. Information about the client.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>.protocol.rpc.InitializeRequest.ClientInfo client_info = 3;</code>
   */
  protocol.rpc.InitializeRequest.ClientInfoOrBuilder getClientInfoOrBuilder();

  /**
   * <pre>
   * Optional. The rootPath of the workspace. Is null
   * if no folder is open.
   * Use rootUri instead of.
   * </pre>
   *
   * <code>.google.protobuf.StringValue root_path = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated boolean hasRootPath();
  /**
   * <pre>
   * Optional. The rootPath of the workspace. Is null
   * if no folder is open.
   * Use rootUri instead of.
   * </pre>
   *
   * <code>.google.protobuf.StringValue root_path = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.protobuf.StringValue getRootPath();
  /**
   * <pre>
   * Optional. The rootPath of the workspace. Is null
   * if no folder is open.
   * Use rootUri instead of.
   * </pre>
   *
   * <code>.google.protobuf.StringValue root_path = 4 [deprecated = true];</code>
   */
  @java.lang.Deprecated com.google.protobuf.StringValueOrBuilder getRootPathOrBuilder();

  /**
   * <pre>
   * The rootUri of the workspace. Is null if no
   * folder is open. If both `rootPath` and `rootUri` are set
   * `rootUri` wins.
   * nullable
   * </pre>
   *
   * <code>.protocol.DocumentURI root_uri = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  boolean hasRootUri();
  /**
   * <pre>
   * The rootUri of the workspace. Is null if no
   * folder is open. If both `rootPath` and `rootUri` are set
   * `rootUri` wins.
   * nullable
   * </pre>
   *
   * <code>.protocol.DocumentURI root_uri = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.DocumentURI getRootUri();
  /**
   * <pre>
   * The rootUri of the workspace. Is null if no
   * folder is open. If both `rootPath` and `rootUri` are set
   * `rootUri` wins.
   * nullable
   * </pre>
   *
   * <code>.protocol.DocumentURI root_uri = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.DocumentURIOrBuilder getRootUriOrBuilder();

  /**
   * <pre>
   * Optional. User provided initialization options.
   * </pre>
   *
   * <code>.google.protobuf.Any initialization_options = 6;</code>
   */
  boolean hasInitializationOptions();
  /**
   * <pre>
   * Optional. User provided initialization options.
   * </pre>
   *
   * <code>.google.protobuf.Any initialization_options = 6;</code>
   */
  com.google.protobuf.Any getInitializationOptions();
  /**
   * <pre>
   * Optional. User provided initialization options.
   * </pre>
   *
   * <code>.google.protobuf.Any initialization_options = 6;</code>
   */
  com.google.protobuf.AnyOrBuilder getInitializationOptionsOrBuilder();

  /**
   * <pre>
   * Required. The capabilities provided by the client (editor or tool)
   * </pre>
   *
   * <code>.protocol.rpc.ClientCapabilities capabilities = 7 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  boolean hasCapabilities();
  /**
   * <pre>
   * Required. The capabilities provided by the client (editor or tool)
   * </pre>
   *
   * <code>.protocol.rpc.ClientCapabilities capabilities = 7 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.rpc.ClientCapabilities getCapabilities();
  /**
   * <pre>
   * Required. The capabilities provided by the client (editor or tool)
   * </pre>
   *
   * <code>.protocol.rpc.ClientCapabilities capabilities = 7 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.rpc.ClientCapabilitiesOrBuilder getCapabilitiesOrBuilder();

  /**
   * <pre>
   * Optional. The initial trace setting. If omitted trace is disabled ('off').
   * </pre>
   *
   * <code>.protocol.TraceValue trace = 8;</code>
   */
  int getTraceValue();
  /**
   * <pre>
   * Optional. The initial trace setting. If omitted trace is disabled ('off').
   * </pre>
   *
   * <code>.protocol.TraceValue trace = 8;</code>
   */
  protocol.TraceValue getTrace();

  /**
   * <pre>
   * Optional. The workspace folders configured in the client when the server starts.
   * This property is only available if the client supports workspace folders.
   * It can be `null` if the client supports workspace folders but none are
   * configured.
   * &#64;since 3.6.0
   * nullable
   * </pre>
   *
   * <code>repeated .protocol.rpc.WorkspaceFolder workspace_folders = 9;</code>
   */
  java.util.List<protocol.rpc.WorkspaceFolder> 
      getWorkspaceFoldersList();
  /**
   * <pre>
   * Optional. The workspace folders configured in the client when the server starts.
   * This property is only available if the client supports workspace folders.
   * It can be `null` if the client supports workspace folders but none are
   * configured.
   * &#64;since 3.6.0
   * nullable
   * </pre>
   *
   * <code>repeated .protocol.rpc.WorkspaceFolder workspace_folders = 9;</code>
   */
  protocol.rpc.WorkspaceFolder getWorkspaceFolders(int index);
  /**
   * <pre>
   * Optional. The workspace folders configured in the client when the server starts.
   * This property is only available if the client supports workspace folders.
   * It can be `null` if the client supports workspace folders but none are
   * configured.
   * &#64;since 3.6.0
   * nullable
   * </pre>
   *
   * <code>repeated .protocol.rpc.WorkspaceFolder workspace_folders = 9;</code>
   */
  int getWorkspaceFoldersCount();
  /**
   * <pre>
   * Optional. The workspace folders configured in the client when the server starts.
   * This property is only available if the client supports workspace folders.
   * It can be `null` if the client supports workspace folders but none are
   * configured.
   * &#64;since 3.6.0
   * nullable
   * </pre>
   *
   * <code>repeated .protocol.rpc.WorkspaceFolder workspace_folders = 9;</code>
   */
  java.util.List<? extends protocol.rpc.WorkspaceFolderOrBuilder> 
      getWorkspaceFoldersOrBuilderList();
  /**
   * <pre>
   * Optional. The workspace folders configured in the client when the server starts.
   * This property is only available if the client supports workspace folders.
   * It can be `null` if the client supports workspace folders but none are
   * configured.
   * &#64;since 3.6.0
   * nullable
   * </pre>
   *
   * <code>repeated .protocol.rpc.WorkspaceFolder workspace_folders = 9;</code>
   */
  protocol.rpc.WorkspaceFolderOrBuilder getWorkspaceFoldersOrBuilder(
      int index);
}
