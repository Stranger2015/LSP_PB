// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * DocumentSymbol represents programming constructs like variables, classes, interfaces etc. that
 * appear in a document. Document symbols can be hierarchical and they have two ranges: one that
 * encloses its definition and one that points to its most interesting range, e.g. the range of an
 * identifier.
 * (-- api-linter: core::0123::resource-annotation=disabled --)
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.DocumentSymbol}
 */
public  final class DocumentSymbol extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.DocumentSymbol)
    DocumentSymbolOrBuilder {
  // Use DocumentSymbol.newBuilder() to construct.
  private DocumentSymbol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DocumentSymbol() {
    name_ = "";
    detail_ = "";
    kind_ = 0;
    deprecated_ = false;
    children_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DocumentSymbol(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            detail_ = s;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            kind_ = rawValue;
            break;
          }
          case 32: {

            deprecated_ = input.readBool();
            break;
          }
          case 42: {
            protocol.Range.Builder subBuilder = null;
            if (range_ != null) {
              subBuilder = range_.toBuilder();
            }
            range_ = input.readMessage(protocol.Range.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(range_);
              range_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            protocol.Range.Builder subBuilder = null;
            if (selectionRange_ != null) {
              subBuilder = selectionRange_.toBuilder();
            }
            selectionRange_ = input.readMessage(protocol.Range.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(selectionRange_);
              selectionRange_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              children_ = new java.util.ArrayList<protocol.rpc.DocumentSymbol>();
              mutable_bitField0_ |= 0x00000040;
            }
            children_.add(
                input.readMessage(protocol.rpc.DocumentSymbol.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        children_ = java.util.Collections.unmodifiableList(children_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentSymbol_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentSymbol_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.DocumentSymbol.class, protocol.rpc.DocumentSymbol.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * The name of this symbol. Will be displayed in the user interface and therefore must not be
   * an empty string or a string only consisting of white spaces.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of this symbol. Will be displayed in the user interface and therefore must not be
   * an empty string or a string only consisting of white spaces.
   * </pre>
   *
   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DETAIL_FIELD_NUMBER = 2;
  private volatile java.lang.Object detail_;
  /**
   * <pre>
   * More detail for this symbol, e.g the signature of a function.
   * </pre>
   *
   * <code>string detail = 2;</code>
   */
  public java.lang.String getDetail() {
    java.lang.Object ref = detail_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      detail_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * More detail for this symbol, e.g the signature of a function.
   * </pre>
   *
   * <code>string detail = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDetailBytes() {
    java.lang.Object ref = detail_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      detail_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KIND_FIELD_NUMBER = 3;
  private int kind_;
  /**
   * <pre>
   * The kind of this symbol.
   * </pre>
   *
   * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public int getKindValue() {
    return kind_;
  }
  /**
   * <pre>
   * The kind of this symbol.
   * </pre>
   *
   * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.rpc.SymbolKind getKind() {
    protocol.rpc.SymbolKind result = protocol.rpc.SymbolKind.valueOf(kind_);
    return result == null ? protocol.rpc.SymbolKind.UNRECOGNIZED : result;
  }

  public static final int DEPRECATED_FIELD_NUMBER = 4;
  private boolean deprecated_;
  /**
   * <pre>
   * Optional. Indicates if this symbol is deprecated.
   * </pre>
   *
   * <code>bool deprecated = 4;</code>
   */
  public boolean getDeprecated() {
    return deprecated_;
  }

  public static final int RANGE_FIELD_NUMBER = 5;
  private protocol.Range range_;
  /**
   * <pre>
   * The range enclosing this symbol not including leading/trailing whitespace but everything else
   * like comments. This information is typically used to determine if the clients cursor is
   * inside the symbol to reveal in the symbol in the UI.
   * </pre>
   *
   * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * The range enclosing this symbol not including leading/trailing whitespace but everything else
   * like comments. This information is typically used to determine if the clients cursor is
   * inside the symbol to reveal in the symbol in the UI.
   * </pre>
   *
   * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.Range getRange() {
    return range_ == null ? protocol.Range.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * The range enclosing this symbol not including leading/trailing whitespace but everything else
   * like comments. This information is typically used to determine if the clients cursor is
   * inside the symbol to reveal in the symbol in the UI.
   * </pre>
   *
   * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.RangeOrBuilder getRangeOrBuilder() {
    return getRange();
  }

  public static final int SELECTION_RANGE_FIELD_NUMBER = 6;
  private protocol.Range selectionRange_;
  /**
   * <pre>
   * The range that should be selected and revealed when this symbol is being picked, e.g the name
   * of a function. Must be contained by the `range`.
   * </pre>
   *
   * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public boolean hasSelectionRange() {
    return selectionRange_ != null;
  }
  /**
   * <pre>
   * The range that should be selected and revealed when this symbol is being picked, e.g the name
   * of a function. Must be contained by the `range`.
   * </pre>
   *
   * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.Range getSelectionRange() {
    return selectionRange_ == null ? protocol.Range.getDefaultInstance() : selectionRange_;
  }
  /**
   * <pre>
   * The range that should be selected and revealed when this symbol is being picked, e.g the name
   * of a function. Must be contained by the `range`.
   * </pre>
   *
   * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.RangeOrBuilder getSelectionRangeOrBuilder() {
    return getSelectionRange();
  }

  public static final int CHILDREN_FIELD_NUMBER = 7;
  private java.util.List<protocol.rpc.DocumentSymbol> children_;
  /**
   * <pre>
   * Children of this symbol, e.g. properties of a class.
   * </pre>
   *
   * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
   */
  public java.util.List<protocol.rpc.DocumentSymbol> getChildrenList() {
    return children_;
  }
  /**
   * <pre>
   * Children of this symbol, e.g. properties of a class.
   * </pre>
   *
   * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
   */
  public java.util.List<? extends protocol.rpc.DocumentSymbolOrBuilder> 
      getChildrenOrBuilderList() {
    return children_;
  }
  /**
   * <pre>
   * Children of this symbol, e.g. properties of a class.
   * </pre>
   *
   * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
   */
  public int getChildrenCount() {
    return children_.size();
  }
  /**
   * <pre>
   * Children of this symbol, e.g. properties of a class.
   * </pre>
   *
   * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
   */
  public protocol.rpc.DocumentSymbol getChildren(int index) {
    return children_.get(index);
  }
  /**
   * <pre>
   * Children of this symbol, e.g. properties of a class.
   * </pre>
   *
   * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
   */
  public protocol.rpc.DocumentSymbolOrBuilder getChildrenOrBuilder(
      int index) {
    return children_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!getDetailBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, detail_);
    }
    if (kind_ != protocol.rpc.SymbolKind.SYMBOL_KIND_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, kind_);
    }
    if (deprecated_ != false) {
      output.writeBool(4, deprecated_);
    }
    if (range_ != null) {
      output.writeMessage(5, getRange());
    }
    if (selectionRange_ != null) {
      output.writeMessage(6, getSelectionRange());
    }
    for (int i = 0; i < children_.size(); i++) {
      output.writeMessage(7, children_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!getDetailBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, detail_);
    }
    if (kind_ != protocol.rpc.SymbolKind.SYMBOL_KIND_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, kind_);
    }
    if (deprecated_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, deprecated_);
    }
    if (range_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getRange());
    }
    if (selectionRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getSelectionRange());
    }
    for (int i = 0; i < children_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, children_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.DocumentSymbol)) {
      return super.equals(obj);
    }
    protocol.rpc.DocumentSymbol other = (protocol.rpc.DocumentSymbol) obj;

    boolean result = true;
    result = result && getName()
        .equals(other.getName());
    result = result && getDetail()
        .equals(other.getDetail());
    result = result && kind_ == other.kind_;
    result = result && (getDeprecated()
        == other.getDeprecated());
    result = result && (hasRange() == other.hasRange());
    if (hasRange()) {
      result = result && getRange()
          .equals(other.getRange());
    }
    result = result && (hasSelectionRange() == other.hasSelectionRange());
    if (hasSelectionRange()) {
      result = result && getSelectionRange()
          .equals(other.getSelectionRange());
    }
    result = result && getChildrenList()
        .equals(other.getChildrenList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DETAIL_FIELD_NUMBER;
    hash = (53 * hash) + getDetail().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + kind_;
    hash = (37 * hash) + DEPRECATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDeprecated());
    if (hasRange()) {
      hash = (37 * hash) + RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getRange().hashCode();
    }
    if (hasSelectionRange()) {
      hash = (37 * hash) + SELECTION_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getSelectionRange().hashCode();
    }
    if (getChildrenCount() > 0) {
      hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
      hash = (53 * hash) + getChildrenList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.DocumentSymbol parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentSymbol parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentSymbol parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentSymbol parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.DocumentSymbol prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DocumentSymbol represents programming constructs like variables, classes, interfaces etc. that
   * appear in a document. Document symbols can be hierarchical and they have two ranges: one that
   * encloses its definition and one that points to its most interesting range, e.g. the range of an
   * identifier.
   * (-- api-linter: core::0123::resource-annotation=disabled --)
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.DocumentSymbol}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.DocumentSymbol)
      protocol.rpc.DocumentSymbolOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentSymbol_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentSymbol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.DocumentSymbol.class, protocol.rpc.DocumentSymbol.Builder.class);
    }

    // Construct using protocol.rpc.DocumentSymbol.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getChildrenFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      detail_ = "";

      kind_ = 0;

      deprecated_ = false;

      if (rangeBuilder_ == null) {
        range_ = null;
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }
      if (selectionRangeBuilder_ == null) {
        selectionRange_ = null;
      } else {
        selectionRange_ = null;
        selectionRangeBuilder_ = null;
      }
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        childrenBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentSymbol_descriptor;
    }

    public protocol.rpc.DocumentSymbol getDefaultInstanceForType() {
      return protocol.rpc.DocumentSymbol.getDefaultInstance();
    }

    public protocol.rpc.DocumentSymbol build() {
      protocol.rpc.DocumentSymbol result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.DocumentSymbol buildPartial() {
      protocol.rpc.DocumentSymbol result = new protocol.rpc.DocumentSymbol(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.name_ = name_;
      result.detail_ = detail_;
      result.kind_ = kind_;
      result.deprecated_ = deprecated_;
      if (rangeBuilder_ == null) {
        result.range_ = range_;
      } else {
        result.range_ = rangeBuilder_.build();
      }
      if (selectionRangeBuilder_ == null) {
        result.selectionRange_ = selectionRange_;
      } else {
        result.selectionRange_ = selectionRangeBuilder_.build();
      }
      if (childrenBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          children_ = java.util.Collections.unmodifiableList(children_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.children_ = children_;
      } else {
        result.children_ = childrenBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.DocumentSymbol) {
        return mergeFrom((protocol.rpc.DocumentSymbol)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.DocumentSymbol other) {
      if (other == protocol.rpc.DocumentSymbol.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getDetail().isEmpty()) {
        detail_ = other.detail_;
        onChanged();
      }
      if (other.kind_ != 0) {
        setKindValue(other.getKindValue());
      }
      if (other.getDeprecated() != false) {
        setDeprecated(other.getDeprecated());
      }
      if (other.hasRange()) {
        mergeRange(other.getRange());
      }
      if (other.hasSelectionRange()) {
        mergeSelectionRange(other.getSelectionRange());
      }
      if (childrenBuilder_ == null) {
        if (!other.children_.isEmpty()) {
          if (children_.isEmpty()) {
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureChildrenIsMutable();
            children_.addAll(other.children_);
          }
          onChanged();
        }
      } else {
        if (!other.children_.isEmpty()) {
          if (childrenBuilder_.isEmpty()) {
            childrenBuilder_.dispose();
            childrenBuilder_ = null;
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000040);
            childrenBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChildrenFieldBuilder() : null;
          } else {
            childrenBuilder_.addAllMessages(other.children_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.DocumentSymbol parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.DocumentSymbol) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of this symbol. Will be displayed in the user interface and therefore must not be
     * an empty string or a string only consisting of white spaces.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of this symbol. Will be displayed in the user interface and therefore must not be
     * an empty string or a string only consisting of white spaces.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of this symbol. Will be displayed in the user interface and therefore must not be
     * an empty string or a string only consisting of white spaces.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of this symbol. Will be displayed in the user interface and therefore must not be
     * an empty string or a string only consisting of white spaces.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of this symbol. Will be displayed in the user interface and therefore must not be
     * an empty string or a string only consisting of white spaces.
     * </pre>
     *
     * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object detail_ = "";
    /**
     * <pre>
     * More detail for this symbol, e.g the signature of a function.
     * </pre>
     *
     * <code>string detail = 2;</code>
     */
    public java.lang.String getDetail() {
      java.lang.Object ref = detail_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        detail_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * More detail for this symbol, e.g the signature of a function.
     * </pre>
     *
     * <code>string detail = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDetailBytes() {
      java.lang.Object ref = detail_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        detail_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * More detail for this symbol, e.g the signature of a function.
     * </pre>
     *
     * <code>string detail = 2;</code>
     */
    public Builder setDetail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      detail_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * More detail for this symbol, e.g the signature of a function.
     * </pre>
     *
     * <code>string detail = 2;</code>
     */
    public Builder clearDetail() {
      
      detail_ = getDefaultInstance().getDetail();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * More detail for this symbol, e.g the signature of a function.
     * </pre>
     *
     * <code>string detail = 2;</code>
     */
    public Builder setDetailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      detail_ = value;
      onChanged();
      return this;
    }

    private int kind_ = 0;
    /**
     * <pre>
     * The kind of this symbol.
     * </pre>
     *
     * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * The kind of this symbol.
     * </pre>
     *
     * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setKindValue(int value) {
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The kind of this symbol.
     * </pre>
     *
     * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.rpc.SymbolKind getKind() {
      protocol.rpc.SymbolKind result = protocol.rpc.SymbolKind.valueOf(kind_);
      return result == null ? protocol.rpc.SymbolKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The kind of this symbol.
     * </pre>
     *
     * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setKind(protocol.rpc.SymbolKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The kind of this symbol.
     * </pre>
     *
     * <code>.protocol.rpc.SymbolKind kind = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearKind() {
      
      kind_ = 0;
      onChanged();
      return this;
    }

    private boolean deprecated_ ;
    /**
     * <pre>
     * Optional. Indicates if this symbol is deprecated.
     * </pre>
     *
     * <code>bool deprecated = 4;</code>
     */
    public boolean getDeprecated() {
      return deprecated_;
    }
    /**
     * <pre>
     * Optional. Indicates if this symbol is deprecated.
     * </pre>
     *
     * <code>bool deprecated = 4;</code>
     */
    public Builder setDeprecated(boolean value) {
      
      deprecated_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Indicates if this symbol is deprecated.
     * </pre>
     *
     * <code>bool deprecated = 4;</code>
     */
    public Builder clearDeprecated() {
      
      deprecated_ = false;
      onChanged();
      return this;
    }

    private protocol.Range range_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> rangeBuilder_;
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public boolean hasRange() {
      return rangeBuilder_ != null || range_ != null;
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range getRange() {
      if (rangeBuilder_ == null) {
        return range_ == null ? protocol.Range.getDefaultInstance() : range_;
      } else {
        return rangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        rangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(
        protocol.Range.Builder builderForValue) {
      if (rangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        rangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (range_ != null) {
          range_ =
            protocol.Range.newBuilder(range_).mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        rangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearRange() {
      if (rangeBuilder_ == null) {
        range_ = null;
        onChanged();
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range.Builder getRangeBuilder() {
      
      onChanged();
      return getRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.RangeOrBuilder getRangeOrBuilder() {
      if (rangeBuilder_ != null) {
        return rangeBuilder_.getMessageOrBuilder();
      } else {
        return range_ == null ?
            protocol.Range.getDefaultInstance() : range_;
      }
    }
    /**
     * <pre>
     * The range enclosing this symbol not including leading/trailing whitespace but everything else
     * like comments. This information is typically used to determine if the clients cursor is
     * inside the symbol to reveal in the symbol in the UI.
     * </pre>
     *
     * <code>.protocol.Range range = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> 
        getRangeFieldBuilder() {
      if (rangeBuilder_ == null) {
        rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder>(
                getRange(),
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      return rangeBuilder_;
    }

    private protocol.Range selectionRange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> selectionRangeBuilder_;
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public boolean hasSelectionRange() {
      return selectionRangeBuilder_ != null || selectionRange_ != null;
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range getSelectionRange() {
      if (selectionRangeBuilder_ == null) {
        return selectionRange_ == null ? protocol.Range.getDefaultInstance() : selectionRange_;
      } else {
        return selectionRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setSelectionRange(protocol.Range value) {
      if (selectionRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        selectionRange_ = value;
        onChanged();
      } else {
        selectionRangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setSelectionRange(
        protocol.Range.Builder builderForValue) {
      if (selectionRangeBuilder_ == null) {
        selectionRange_ = builderForValue.build();
        onChanged();
      } else {
        selectionRangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeSelectionRange(protocol.Range value) {
      if (selectionRangeBuilder_ == null) {
        if (selectionRange_ != null) {
          selectionRange_ =
            protocol.Range.newBuilder(selectionRange_).mergeFrom(value).buildPartial();
        } else {
          selectionRange_ = value;
        }
        onChanged();
      } else {
        selectionRangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearSelectionRange() {
      if (selectionRangeBuilder_ == null) {
        selectionRange_ = null;
        onChanged();
      } else {
        selectionRange_ = null;
        selectionRangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range.Builder getSelectionRangeBuilder() {
      
      onChanged();
      return getSelectionRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.RangeOrBuilder getSelectionRangeOrBuilder() {
      if (selectionRangeBuilder_ != null) {
        return selectionRangeBuilder_.getMessageOrBuilder();
      } else {
        return selectionRange_ == null ?
            protocol.Range.getDefaultInstance() : selectionRange_;
      }
    }
    /**
     * <pre>
     * The range that should be selected and revealed when this symbol is being picked, e.g the name
     * of a function. Must be contained by the `range`.
     * </pre>
     *
     * <code>.protocol.Range selection_range = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> 
        getSelectionRangeFieldBuilder() {
      if (selectionRangeBuilder_ == null) {
        selectionRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder>(
                getSelectionRange(),
                getParentForChildren(),
                isClean());
        selectionRange_ = null;
      }
      return selectionRangeBuilder_;
    }

    private java.util.List<protocol.rpc.DocumentSymbol> children_ =
      java.util.Collections.emptyList();
    private void ensureChildrenIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        children_ = new java.util.ArrayList<protocol.rpc.DocumentSymbol>(children_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.rpc.DocumentSymbol, protocol.rpc.DocumentSymbol.Builder, protocol.rpc.DocumentSymbolOrBuilder> childrenBuilder_;

    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public java.util.List<protocol.rpc.DocumentSymbol> getChildrenList() {
      if (childrenBuilder_ == null) {
        return java.util.Collections.unmodifiableList(children_);
      } else {
        return childrenBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public int getChildrenCount() {
      if (childrenBuilder_ == null) {
        return children_.size();
      } else {
        return childrenBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public protocol.rpc.DocumentSymbol getChildren(int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);
      } else {
        return childrenBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder setChildren(
        int index, protocol.rpc.DocumentSymbol value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.set(index, value);
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder setChildren(
        int index, protocol.rpc.DocumentSymbol.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.set(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder addChildren(protocol.rpc.DocumentSymbol value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder addChildren(
        int index, protocol.rpc.DocumentSymbol value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(index, value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder addChildren(
        protocol.rpc.DocumentSymbol.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder addChildren(
        int index, protocol.rpc.DocumentSymbol.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder addAllChildren(
        java.lang.Iterable<? extends protocol.rpc.DocumentSymbol> values) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, children_);
        onChanged();
      } else {
        childrenBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder clearChildren() {
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        childrenBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public Builder removeChildren(int index) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.remove(index);
        onChanged();
      } else {
        childrenBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public protocol.rpc.DocumentSymbol.Builder getChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public protocol.rpc.DocumentSymbolOrBuilder getChildrenOrBuilder(
        int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);  } else {
        return childrenBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public java.util.List<? extends protocol.rpc.DocumentSymbolOrBuilder> 
         getChildrenOrBuilderList() {
      if (childrenBuilder_ != null) {
        return childrenBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(children_);
      }
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public protocol.rpc.DocumentSymbol.Builder addChildrenBuilder() {
      return getChildrenFieldBuilder().addBuilder(
          protocol.rpc.DocumentSymbol.getDefaultInstance());
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public protocol.rpc.DocumentSymbol.Builder addChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().addBuilder(
          index, protocol.rpc.DocumentSymbol.getDefaultInstance());
    }
    /**
     * <pre>
     * Children of this symbol, e.g. properties of a class.
     * </pre>
     *
     * <code>repeated .protocol.rpc.DocumentSymbol children = 7;</code>
     */
    public java.util.List<protocol.rpc.DocumentSymbol.Builder> 
         getChildrenBuilderList() {
      return getChildrenFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.rpc.DocumentSymbol, protocol.rpc.DocumentSymbol.Builder, protocol.rpc.DocumentSymbolOrBuilder> 
        getChildrenFieldBuilder() {
      if (childrenBuilder_ == null) {
        childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            protocol.rpc.DocumentSymbol, protocol.rpc.DocumentSymbol.Builder, protocol.rpc.DocumentSymbolOrBuilder>(
                children_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        children_ = null;
      }
      return childrenBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.DocumentSymbol)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.DocumentSymbol)
  private static final protocol.rpc.DocumentSymbol DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.DocumentSymbol();
  }

  public static protocol.rpc.DocumentSymbol getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentSymbol>
      PARSER = new com.google.protobuf.AbstractParser<DocumentSymbol>() {
    public DocumentSymbol parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentSymbol(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DocumentSymbol> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentSymbol> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.DocumentSymbol getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

