// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * InsertTextFormat defines whether the insert text in a completion item should be interpreted as
 * plain text or a snippet.
 * </pre>
 *
 * Protobuf enum {@code protocol.rpc.InsertTextFormat}
 */
public enum InsertTextFormat
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Conventional default for enums. Do not use this.
   * </pre>
   *
   * <code>INSERT_TEXT_FORMAT_UNSPECIFIED = 0;</code>
   */
  INSERT_TEXT_FORMAT_UNSPECIFIED(0),
  /**
   * <pre>
   * The primary text to be inserted is treated as a plain string.
   * </pre>
   *
   * <code>PLAINTEXT = 1;</code>
   */
  PLAINTEXT(1),
  /**
   * <pre>
   * The primary text to be inserted is treated as a snippet.
   * A snippet can define tab stops and placeholders with `$1`, `$2`
   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to
   * the end of the snippet. Placeholders with equal identifiers are linked,
   * that is typing in one will update others too.
   * (-- Add `_FORMAT` suffix for avoid `Note that enum values use C++ scoping rules, meaning that
   * enum values are siblings of their type, not children of it.` warning on
   * [CompletionItemKind][CompletionItemKind]. --)
   * </pre>
   *
   * <code>SNIPPET_FORMAT = 2;</code>
   */
  SNIPPET_FORMAT(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Conventional default for enums. Do not use this.
   * </pre>
   *
   * <code>INSERT_TEXT_FORMAT_UNSPECIFIED = 0;</code>
   */
  public static final int INSERT_TEXT_FORMAT_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * The primary text to be inserted is treated as a plain string.
   * </pre>
   *
   * <code>PLAINTEXT = 1;</code>
   */
  public static final int PLAINTEXT_VALUE = 1;
  /**
   * <pre>
   * The primary text to be inserted is treated as a snippet.
   * A snippet can define tab stops and placeholders with `$1`, `$2`
   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to
   * the end of the snippet. Placeholders with equal identifiers are linked,
   * that is typing in one will update others too.
   * (-- Add `_FORMAT` suffix for avoid `Note that enum values use C++ scoping rules, meaning that
   * enum values are siblings of their type, not children of it.` warning on
   * [CompletionItemKind][CompletionItemKind]. --)
   * </pre>
   *
   * <code>SNIPPET_FORMAT = 2;</code>
   */
  public static final int SNIPPET_FORMAT_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static InsertTextFormat valueOf(int value) {
    return forNumber(value);
  }

  public static InsertTextFormat forNumber(int value) {
    switch (value) {
      case 0: return INSERT_TEXT_FORMAT_UNSPECIFIED;
      case 1: return PLAINTEXT;
      case 2: return SNIPPET_FORMAT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<InsertTextFormat>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      InsertTextFormat> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<InsertTextFormat>() {
          public InsertTextFormat findValueByNumber(int number) {
            return InsertTextFormat.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final InsertTextFormat[] VALUES = values();

  public static InsertTextFormat valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private InsertTextFormat(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:protocol.rpc.InsertTextFormat)
}

