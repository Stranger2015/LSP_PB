// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * CodeAction is a code action represents a change that can be performed in code, e.g. to fix a
 * problem or to refactor code.
 * A CodeAction must set either `edit` and/or a `command`. If both are supplied, the `edit` is
 * applied first, then the `command` is executed.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.CodeAction}
 */
public  final class CodeAction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.CodeAction)
    CodeActionOrBuilder {
  // Use CodeAction.newBuilder() to construct.
  private CodeAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CodeAction() {
    title_ = "";
    kind_ = 0;
    diagnostics_ = java.util.Collections.emptyList();
    isPreferred_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private CodeAction(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            title_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            kind_ = rawValue;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              diagnostics_ = new java.util.ArrayList<protocol.Diagnostic>();
              mutable_bitField0_ |= 0x00000004;
            }
            diagnostics_.add(
                input.readMessage(protocol.Diagnostic.parser(), extensionRegistry));
            break;
          }
          case 32: {

            isPreferred_ = input.readBool();
            break;
          }
          case 42: {
            protocol.WorkspaceEdit.Builder subBuilder = null;
            if (edit_ != null) {
              subBuilder = edit_.toBuilder();
            }
            edit_ = input.readMessage(protocol.WorkspaceEdit.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(edit_);
              edit_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            protocol.Command.Builder subBuilder = null;
            if (command_ != null) {
              subBuilder = command_.toBuilder();
            }
            command_ = input.readMessage(protocol.Command.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(command_);
              command_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        diagnostics_ = java.util.Collections.unmodifiableList(diagnostics_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_CodeAction_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_CodeAction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.CodeAction.class, protocol.rpc.CodeAction.Builder.class);
  }

  private int bitField0_;
  public static final int TITLE_FIELD_NUMBER = 1;
  private volatile java.lang.Object title_;
  /**
   * <pre>
   * A short, human-readable, title for this code action.
   * </pre>
   *
   * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public java.lang.String getTitle() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      title_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A short, human-readable, title for this code action.
   * </pre>
   *
   * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public com.google.protobuf.ByteString
      getTitleBytes() {
    java.lang.Object ref = title_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      title_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KIND_FIELD_NUMBER = 2;
  private int kind_;
  /**
   * <pre>
   * The kind of the code action.
   * Used to filter code actions.
   * </pre>
   *
   * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
   */
  public int getKindValue() {
    return kind_;
  }
  /**
   * <pre>
   * The kind of the code action.
   * Used to filter code actions.
   * </pre>
   *
   * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
   */
  public protocol.rpc.CodeActionKind getKind() {
    protocol.rpc.CodeActionKind result = protocol.rpc.CodeActionKind.valueOf(kind_);
    return result == null ? protocol.rpc.CodeActionKind.UNRECOGNIZED : result;
  }

  public static final int DIAGNOSTICS_FIELD_NUMBER = 3;
  private java.util.List<protocol.Diagnostic> diagnostics_;
  /**
   * <pre>
   * The diagnostics that this code action resolves.
   * </pre>
   *
   * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
   */
  public java.util.List<protocol.Diagnostic> getDiagnosticsList() {
    return diagnostics_;
  }
  /**
   * <pre>
   * The diagnostics that this code action resolves.
   * </pre>
   *
   * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
   */
  public java.util.List<? extends protocol.DiagnosticOrBuilder> 
      getDiagnosticsOrBuilderList() {
    return diagnostics_;
  }
  /**
   * <pre>
   * The diagnostics that this code action resolves.
   * </pre>
   *
   * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
   */
  public int getDiagnosticsCount() {
    return diagnostics_.size();
  }
  /**
   * <pre>
   * The diagnostics that this code action resolves.
   * </pre>
   *
   * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
   */
  public protocol.Diagnostic getDiagnostics(int index) {
    return diagnostics_.get(index);
  }
  /**
   * <pre>
   * The diagnostics that this code action resolves.
   * </pre>
   *
   * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
   */
  public protocol.DiagnosticOrBuilder getDiagnosticsOrBuilder(
      int index) {
    return diagnostics_.get(index);
  }

  public static final int IS_PREFERRED_FIELD_NUMBER = 4;
  private boolean isPreferred_;
  /**
   * <pre>
   * Optional. Marks this as a preferred action. Preferred actions are used by the `auto fix`
   * command and can be targeted by keybindings.
   * A quick fix should be marked preferred if it properly addresses the underlying error.
   * A refactoring should be marked preferred if it is the most reasonable choice of actions to
   * take.
   * &#64;since 3.15.0
   * </pre>
   *
   * <code>bool is_preferred = 4;</code>
   */
  public boolean getIsPreferred() {
    return isPreferred_;
  }

  public static final int EDIT_FIELD_NUMBER = 5;
  private protocol.WorkspaceEdit edit_;
  /**
   * <pre>
   * Optional. The workspace edit this code action performs.
   * </pre>
   *
   * <code>.protocol.WorkspaceEdit edit = 5;</code>
   */
  public boolean hasEdit() {
    return edit_ != null;
  }
  /**
   * <pre>
   * Optional. The workspace edit this code action performs.
   * </pre>
   *
   * <code>.protocol.WorkspaceEdit edit = 5;</code>
   */
  public protocol.WorkspaceEdit getEdit() {
    return edit_ == null ? protocol.WorkspaceEdit.getDefaultInstance() : edit_;
  }
  /**
   * <pre>
   * Optional. The workspace edit this code action performs.
   * </pre>
   *
   * <code>.protocol.WorkspaceEdit edit = 5;</code>
   */
  public protocol.WorkspaceEditOrBuilder getEditOrBuilder() {
    return getEdit();
  }

  public static final int COMMAND_FIELD_NUMBER = 6;
  private protocol.Command command_;
  /**
   * <pre>
   * Optional. A command this code action executes. If a code action
   * provides an edit and a command, first the edit is
   * executed and then the command.
   * </pre>
   *
   * <code>.protocol.Command command = 6;</code>
   */
  public boolean hasCommand() {
    return command_ != null;
  }
  /**
   * <pre>
   * Optional. A command this code action executes. If a code action
   * provides an edit and a command, first the edit is
   * executed and then the command.
   * </pre>
   *
   * <code>.protocol.Command command = 6;</code>
   */
  public protocol.Command getCommand() {
    return command_ == null ? protocol.Command.getDefaultInstance() : command_;
  }
  /**
   * <pre>
   * Optional. A command this code action executes. If a code action
   * provides an edit and a command, first the edit is
   * executed and then the command.
   * </pre>
   *
   * <code>.protocol.Command command = 6;</code>
   */
  public protocol.CommandOrBuilder getCommandOrBuilder() {
    return getCommand();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTitleBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, title_);
    }
    if (kind_ != protocol.rpc.CodeActionKind.EMPTY.getNumber()) {
      output.writeEnum(2, kind_);
    }
    for (int i = 0; i < diagnostics_.size(); i++) {
      output.writeMessage(3, diagnostics_.get(i));
    }
    if (isPreferred_ != false) {
      output.writeBool(4, isPreferred_);
    }
    if (edit_ != null) {
      output.writeMessage(5, getEdit());
    }
    if (command_ != null) {
      output.writeMessage(6, getCommand());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTitleBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, title_);
    }
    if (kind_ != protocol.rpc.CodeActionKind.EMPTY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, kind_);
    }
    for (int i = 0; i < diagnostics_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, diagnostics_.get(i));
    }
    if (isPreferred_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, isPreferred_);
    }
    if (edit_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getEdit());
    }
    if (command_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getCommand());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.CodeAction)) {
      return super.equals(obj);
    }
    protocol.rpc.CodeAction other = (protocol.rpc.CodeAction) obj;

    boolean result = true;
    result = result && getTitle()
        .equals(other.getTitle());
    result = result && kind_ == other.kind_;
    result = result && getDiagnosticsList()
        .equals(other.getDiagnosticsList());
    result = result && (getIsPreferred()
        == other.getIsPreferred());
    result = result && (hasEdit() == other.hasEdit());
    if (hasEdit()) {
      result = result && getEdit()
          .equals(other.getEdit());
    }
    result = result && (hasCommand() == other.hasCommand());
    if (hasCommand()) {
      result = result && getCommand()
          .equals(other.getCommand());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TITLE_FIELD_NUMBER;
    hash = (53 * hash) + getTitle().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + kind_;
    if (getDiagnosticsCount() > 0) {
      hash = (37 * hash) + DIAGNOSTICS_FIELD_NUMBER;
      hash = (53 * hash) + getDiagnosticsList().hashCode();
    }
    hash = (37 * hash) + IS_PREFERRED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsPreferred());
    if (hasEdit()) {
      hash = (37 * hash) + EDIT_FIELD_NUMBER;
      hash = (53 * hash) + getEdit().hashCode();
    }
    if (hasCommand()) {
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.CodeAction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.CodeAction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.CodeAction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.CodeAction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.CodeAction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.CodeAction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.CodeAction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.CodeAction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.CodeAction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.CodeAction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.CodeAction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * CodeAction is a code action represents a change that can be performed in code, e.g. to fix a
   * problem or to refactor code.
   * A CodeAction must set either `edit` and/or a `command`. If both are supplied, the `edit` is
   * applied first, then the `command` is executed.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.CodeAction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.CodeAction)
      protocol.rpc.CodeActionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_CodeAction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_CodeAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.CodeAction.class, protocol.rpc.CodeAction.Builder.class);
    }

    // Construct using protocol.rpc.CodeAction.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDiagnosticsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      title_ = "";

      kind_ = 0;

      if (diagnosticsBuilder_ == null) {
        diagnostics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        diagnosticsBuilder_.clear();
      }
      isPreferred_ = false;

      if (editBuilder_ == null) {
        edit_ = null;
      } else {
        edit_ = null;
        editBuilder_ = null;
      }
      if (commandBuilder_ == null) {
        command_ = null;
      } else {
        command_ = null;
        commandBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_CodeAction_descriptor;
    }

    public protocol.rpc.CodeAction getDefaultInstanceForType() {
      return protocol.rpc.CodeAction.getDefaultInstance();
    }

    public protocol.rpc.CodeAction build() {
      protocol.rpc.CodeAction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.CodeAction buildPartial() {
      protocol.rpc.CodeAction result = new protocol.rpc.CodeAction(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.title_ = title_;
      result.kind_ = kind_;
      if (diagnosticsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          diagnostics_ = java.util.Collections.unmodifiableList(diagnostics_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.diagnostics_ = diagnostics_;
      } else {
        result.diagnostics_ = diagnosticsBuilder_.build();
      }
      result.isPreferred_ = isPreferred_;
      if (editBuilder_ == null) {
        result.edit_ = edit_;
      } else {
        result.edit_ = editBuilder_.build();
      }
      if (commandBuilder_ == null) {
        result.command_ = command_;
      } else {
        result.command_ = commandBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.CodeAction) {
        return mergeFrom((protocol.rpc.CodeAction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.CodeAction other) {
      if (other == protocol.rpc.CodeAction.getDefaultInstance()) return this;
      if (!other.getTitle().isEmpty()) {
        title_ = other.title_;
        onChanged();
      }
      if (other.kind_ != 0) {
        setKindValue(other.getKindValue());
      }
      if (diagnosticsBuilder_ == null) {
        if (!other.diagnostics_.isEmpty()) {
          if (diagnostics_.isEmpty()) {
            diagnostics_ = other.diagnostics_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDiagnosticsIsMutable();
            diagnostics_.addAll(other.diagnostics_);
          }
          onChanged();
        }
      } else {
        if (!other.diagnostics_.isEmpty()) {
          if (diagnosticsBuilder_.isEmpty()) {
            diagnosticsBuilder_.dispose();
            diagnosticsBuilder_ = null;
            diagnostics_ = other.diagnostics_;
            bitField0_ = (bitField0_ & ~0x00000004);
            diagnosticsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDiagnosticsFieldBuilder() : null;
          } else {
            diagnosticsBuilder_.addAllMessages(other.diagnostics_);
          }
        }
      }
      if (other.getIsPreferred() != false) {
        setIsPreferred(other.getIsPreferred());
      }
      if (other.hasEdit()) {
        mergeEdit(other.getEdit());
      }
      if (other.hasCommand()) {
        mergeCommand(other.getCommand());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.CodeAction parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.CodeAction) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object title_ = "";
    /**
     * <pre>
     * A short, human-readable, title for this code action.
     * </pre>
     *
     * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A short, human-readable, title for this code action.
     * </pre>
     *
     * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A short, human-readable, title for this code action.
     * </pre>
     *
     * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      title_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short, human-readable, title for this code action.
     * </pre>
     *
     * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearTitle() {
      
      title_ = getDefaultInstance().getTitle();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A short, human-readable, title for this code action.
     * </pre>
     *
     * <code>string title = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      title_ = value;
      onChanged();
      return this;
    }

    private int kind_ = 0;
    /**
     * <pre>
     * The kind of the code action.
     * Used to filter code actions.
     * </pre>
     *
     * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
     */
    public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * The kind of the code action.
     * Used to filter code actions.
     * </pre>
     *
     * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
     */
    public Builder setKindValue(int value) {
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The kind of the code action.
     * Used to filter code actions.
     * </pre>
     *
     * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
     */
    public protocol.rpc.CodeActionKind getKind() {
      protocol.rpc.CodeActionKind result = protocol.rpc.CodeActionKind.valueOf(kind_);
      return result == null ? protocol.rpc.CodeActionKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The kind of the code action.
     * Used to filter code actions.
     * </pre>
     *
     * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
     */
    public Builder setKind(protocol.rpc.CodeActionKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The kind of the code action.
     * Used to filter code actions.
     * </pre>
     *
     * <code>.protocol.rpc.CodeActionKind kind = 2;</code>
     */
    public Builder clearKind() {
      
      kind_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<protocol.Diagnostic> diagnostics_ =
      java.util.Collections.emptyList();
    private void ensureDiagnosticsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        diagnostics_ = new java.util.ArrayList<protocol.Diagnostic>(diagnostics_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.Diagnostic, protocol.Diagnostic.Builder, protocol.DiagnosticOrBuilder> diagnosticsBuilder_;

    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public java.util.List<protocol.Diagnostic> getDiagnosticsList() {
      if (diagnosticsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(diagnostics_);
      } else {
        return diagnosticsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public int getDiagnosticsCount() {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.size();
      } else {
        return diagnosticsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public protocol.Diagnostic getDiagnostics(int index) {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.get(index);
      } else {
        return diagnosticsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder setDiagnostics(
        int index, protocol.Diagnostic value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.set(index, value);
        onChanged();
      } else {
        diagnosticsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder setDiagnostics(
        int index, protocol.Diagnostic.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.set(index, builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder addDiagnostics(protocol.Diagnostic value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.add(value);
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder addDiagnostics(
        int index, protocol.Diagnostic value) {
      if (diagnosticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiagnosticsIsMutable();
        diagnostics_.add(index, value);
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder addDiagnostics(
        protocol.Diagnostic.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.add(builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder addDiagnostics(
        int index, protocol.Diagnostic.Builder builderForValue) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.add(index, builderForValue.build());
        onChanged();
      } else {
        diagnosticsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder addAllDiagnostics(
        java.lang.Iterable<? extends protocol.Diagnostic> values) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, diagnostics_);
        onChanged();
      } else {
        diagnosticsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder clearDiagnostics() {
      if (diagnosticsBuilder_ == null) {
        diagnostics_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        diagnosticsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public Builder removeDiagnostics(int index) {
      if (diagnosticsBuilder_ == null) {
        ensureDiagnosticsIsMutable();
        diagnostics_.remove(index);
        onChanged();
      } else {
        diagnosticsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public protocol.Diagnostic.Builder getDiagnosticsBuilder(
        int index) {
      return getDiagnosticsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public protocol.DiagnosticOrBuilder getDiagnosticsOrBuilder(
        int index) {
      if (diagnosticsBuilder_ == null) {
        return diagnostics_.get(index);  } else {
        return diagnosticsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public java.util.List<? extends protocol.DiagnosticOrBuilder> 
         getDiagnosticsOrBuilderList() {
      if (diagnosticsBuilder_ != null) {
        return diagnosticsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(diagnostics_);
      }
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public protocol.Diagnostic.Builder addDiagnosticsBuilder() {
      return getDiagnosticsFieldBuilder().addBuilder(
          protocol.Diagnostic.getDefaultInstance());
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public protocol.Diagnostic.Builder addDiagnosticsBuilder(
        int index) {
      return getDiagnosticsFieldBuilder().addBuilder(
          index, protocol.Diagnostic.getDefaultInstance());
    }
    /**
     * <pre>
     * The diagnostics that this code action resolves.
     * </pre>
     *
     * <code>repeated .protocol.Diagnostic diagnostics = 3;</code>
     */
    public java.util.List<protocol.Diagnostic.Builder> 
         getDiagnosticsBuilderList() {
      return getDiagnosticsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.Diagnostic, protocol.Diagnostic.Builder, protocol.DiagnosticOrBuilder> 
        getDiagnosticsFieldBuilder() {
      if (diagnosticsBuilder_ == null) {
        diagnosticsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            protocol.Diagnostic, protocol.Diagnostic.Builder, protocol.DiagnosticOrBuilder>(
                diagnostics_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        diagnostics_ = null;
      }
      return diagnosticsBuilder_;
    }

    private boolean isPreferred_ ;
    /**
     * <pre>
     * Optional. Marks this as a preferred action. Preferred actions are used by the `auto fix`
     * command and can be targeted by keybindings.
     * A quick fix should be marked preferred if it properly addresses the underlying error.
     * A refactoring should be marked preferred if it is the most reasonable choice of actions to
     * take.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool is_preferred = 4;</code>
     */
    public boolean getIsPreferred() {
      return isPreferred_;
    }
    /**
     * <pre>
     * Optional. Marks this as a preferred action. Preferred actions are used by the `auto fix`
     * command and can be targeted by keybindings.
     * A quick fix should be marked preferred if it properly addresses the underlying error.
     * A refactoring should be marked preferred if it is the most reasonable choice of actions to
     * take.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool is_preferred = 4;</code>
     */
    public Builder setIsPreferred(boolean value) {
      
      isPreferred_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Marks this as a preferred action. Preferred actions are used by the `auto fix`
     * command and can be targeted by keybindings.
     * A quick fix should be marked preferred if it properly addresses the underlying error.
     * A refactoring should be marked preferred if it is the most reasonable choice of actions to
     * take.
     * &#64;since 3.15.0
     * </pre>
     *
     * <code>bool is_preferred = 4;</code>
     */
    public Builder clearIsPreferred() {
      
      isPreferred_ = false;
      onChanged();
      return this;
    }

    private protocol.WorkspaceEdit edit_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.WorkspaceEdit, protocol.WorkspaceEdit.Builder, protocol.WorkspaceEditOrBuilder> editBuilder_;
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public boolean hasEdit() {
      return editBuilder_ != null || edit_ != null;
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public protocol.WorkspaceEdit getEdit() {
      if (editBuilder_ == null) {
        return edit_ == null ? protocol.WorkspaceEdit.getDefaultInstance() : edit_;
      } else {
        return editBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public Builder setEdit(protocol.WorkspaceEdit value) {
      if (editBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        edit_ = value;
        onChanged();
      } else {
        editBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public Builder setEdit(
        protocol.WorkspaceEdit.Builder builderForValue) {
      if (editBuilder_ == null) {
        edit_ = builderForValue.build();
        onChanged();
      } else {
        editBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public Builder mergeEdit(protocol.WorkspaceEdit value) {
      if (editBuilder_ == null) {
        if (edit_ != null) {
          edit_ =
            protocol.WorkspaceEdit.newBuilder(edit_).mergeFrom(value).buildPartial();
        } else {
          edit_ = value;
        }
        onChanged();
      } else {
        editBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public Builder clearEdit() {
      if (editBuilder_ == null) {
        edit_ = null;
        onChanged();
      } else {
        edit_ = null;
        editBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public protocol.WorkspaceEdit.Builder getEditBuilder() {
      
      onChanged();
      return getEditFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    public protocol.WorkspaceEditOrBuilder getEditOrBuilder() {
      if (editBuilder_ != null) {
        return editBuilder_.getMessageOrBuilder();
      } else {
        return edit_ == null ?
            protocol.WorkspaceEdit.getDefaultInstance() : edit_;
      }
    }
    /**
     * <pre>
     * Optional. The workspace edit this code action performs.
     * </pre>
     *
     * <code>.protocol.WorkspaceEdit edit = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.WorkspaceEdit, protocol.WorkspaceEdit.Builder, protocol.WorkspaceEditOrBuilder> 
        getEditFieldBuilder() {
      if (editBuilder_ == null) {
        editBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.WorkspaceEdit, protocol.WorkspaceEdit.Builder, protocol.WorkspaceEditOrBuilder>(
                getEdit(),
                getParentForChildren(),
                isClean());
        edit_ = null;
      }
      return editBuilder_;
    }

    private protocol.Command command_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Command, protocol.Command.Builder, protocol.CommandOrBuilder> commandBuilder_;
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public boolean hasCommand() {
      return commandBuilder_ != null || command_ != null;
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public protocol.Command getCommand() {
      if (commandBuilder_ == null) {
        return command_ == null ? protocol.Command.getDefaultInstance() : command_;
      } else {
        return commandBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public Builder setCommand(protocol.Command value) {
      if (commandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        command_ = value;
        onChanged();
      } else {
        commandBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public Builder setCommand(
        protocol.Command.Builder builderForValue) {
      if (commandBuilder_ == null) {
        command_ = builderForValue.build();
        onChanged();
      } else {
        commandBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public Builder mergeCommand(protocol.Command value) {
      if (commandBuilder_ == null) {
        if (command_ != null) {
          command_ =
            protocol.Command.newBuilder(command_).mergeFrom(value).buildPartial();
        } else {
          command_ = value;
        }
        onChanged();
      } else {
        commandBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public Builder clearCommand() {
      if (commandBuilder_ == null) {
        command_ = null;
        onChanged();
      } else {
        command_ = null;
        commandBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public protocol.Command.Builder getCommandBuilder() {
      
      onChanged();
      return getCommandFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    public protocol.CommandOrBuilder getCommandOrBuilder() {
      if (commandBuilder_ != null) {
        return commandBuilder_.getMessageOrBuilder();
      } else {
        return command_ == null ?
            protocol.Command.getDefaultInstance() : command_;
      }
    }
    /**
     * <pre>
     * Optional. A command this code action executes. If a code action
     * provides an edit and a command, first the edit is
     * executed and then the command.
     * </pre>
     *
     * <code>.protocol.Command command = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Command, protocol.Command.Builder, protocol.CommandOrBuilder> 
        getCommandFieldBuilder() {
      if (commandBuilder_ == null) {
        commandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Command, protocol.Command.Builder, protocol.CommandOrBuilder>(
                getCommand(),
                getParentForChildren(),
                isClean());
        command_ = null;
      }
      return commandBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.CodeAction)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.CodeAction)
  private static final protocol.rpc.CodeAction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.CodeAction();
  }

  public static protocol.rpc.CodeAction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CodeAction>
      PARSER = new com.google.protobuf.AbstractParser<CodeAction>() {
    public CodeAction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new CodeAction(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CodeAction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CodeAction> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.CodeAction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

