// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * SignatureInformation represents the signature of something callable. A signature
 * can have a label, like a function-name, a doc-comment, and
 * a set of parameters.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.SignatureInformation}
 */
public  final class SignatureInformation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.SignatureInformation)
    SignatureInformationOrBuilder {
  // Use SignatureInformation.newBuilder() to construct.
  private SignatureInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SignatureInformation() {
    label_ = "";
    parameters_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SignatureInformation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            label_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            documentationCase_ = 2;
            documentation_ = s;
            break;
          }
          case 26: {
            protocol.MarkupContent.Builder subBuilder = null;
            if (documentationCase_ == 3) {
              subBuilder = ((protocol.MarkupContent) documentation_).toBuilder();
            }
            documentation_ =
                input.readMessage(protocol.MarkupContent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.MarkupContent) documentation_);
              documentation_ = subBuilder.buildPartial();
            }
            documentationCase_ = 3;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              parameters_ = new java.util.ArrayList<protocol.rpc.ParameterInformation>();
              mutable_bitField0_ |= 0x00000008;
            }
            parameters_.add(
                input.readMessage(protocol.rpc.ParameterInformation.parser(), extensionRegistry));
            break;
          }
          case 42: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (activeParameter_ != null) {
              subBuilder = activeParameter_.toBuilder();
            }
            activeParameter_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(activeParameter_);
              activeParameter_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        parameters_ = java.util.Collections.unmodifiableList(parameters_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureInformation_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureInformation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.SignatureInformation.class, protocol.rpc.SignatureInformation.Builder.class);
  }

  private int bitField0_;
  private int documentationCase_ = 0;
  private java.lang.Object documentation_;
  public enum DocumentationCase
      implements com.google.protobuf.Internal.EnumLite {
    MARKUP(2),
    MARKUP_CONTENT(3),
    DOCUMENTATION_NOT_SET(0);
    private final int value;
    private DocumentationCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentationCase valueOf(int value) {
      return forNumber(value);
    }

    public static DocumentationCase forNumber(int value) {
      switch (value) {
        case 2: return MARKUP;
        case 3: return MARKUP_CONTENT;
        case 0: return DOCUMENTATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DocumentationCase
  getDocumentationCase() {
    return DocumentationCase.forNumber(
        documentationCase_);
  }

  public static final int LABEL_FIELD_NUMBER = 1;
  private volatile java.lang.Object label_;
  /**
   * <pre>
   * The label of this signature. Will be shown in
   * the UI.
   * </pre>
   *
   * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public java.lang.String getLabel() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      label_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The label of this signature. Will be shown in
   * the UI.
   * </pre>
   *
   * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public com.google.protobuf.ByteString
      getLabelBytes() {
    java.lang.Object ref = label_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      label_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKUP_FIELD_NUMBER = 2;
  /**
   * <code>string markup = 2;</code>
   */
  public java.lang.String getMarkup() {
    java.lang.Object ref = "";
    if (documentationCase_ == 2) {
      ref = documentation_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (documentationCase_ == 2) {
        documentation_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string markup = 2;</code>
   */
  public com.google.protobuf.ByteString
      getMarkupBytes() {
    java.lang.Object ref = "";
    if (documentationCase_ == 2) {
      ref = documentation_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (documentationCase_ == 2) {
        documentation_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKUP_CONTENT_FIELD_NUMBER = 3;
  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  public protocol.MarkupContent getMarkupContent() {
    if (documentationCase_ == 3) {
       return (protocol.MarkupContent) documentation_;
    }
    return protocol.MarkupContent.getDefaultInstance();
  }
  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  public protocol.MarkupContentOrBuilder getMarkupContentOrBuilder() {
    if (documentationCase_ == 3) {
       return (protocol.MarkupContent) documentation_;
    }
    return protocol.MarkupContent.getDefaultInstance();
  }

  public static final int PARAMETERS_FIELD_NUMBER = 4;
  private java.util.List<protocol.rpc.ParameterInformation> parameters_;
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  public java.util.List<protocol.rpc.ParameterInformation> getParametersList() {
    return parameters_;
  }
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  public java.util.List<? extends protocol.rpc.ParameterInformationOrBuilder> 
      getParametersOrBuilderList() {
    return parameters_;
  }
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  public int getParametersCount() {
    return parameters_.size();
  }
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  public protocol.rpc.ParameterInformation getParameters(int index) {
    return parameters_.get(index);
  }
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  public protocol.rpc.ParameterInformationOrBuilder getParametersOrBuilder(
      int index) {
    return parameters_.get(index);
  }

  public static final int ACTIVE_PARAMETER_FIELD_NUMBER = 5;
  private com.google.protobuf.Int32Value activeParameter_;
  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  public boolean hasActiveParameter() {
    return activeParameter_ != null;
  }
  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  public com.google.protobuf.Int32Value getActiveParameter() {
    return activeParameter_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : activeParameter_;
  }
  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  public com.google.protobuf.Int32ValueOrBuilder getActiveParameterOrBuilder() {
    return getActiveParameter();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getLabelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
    }
    if (documentationCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, documentation_);
    }
    if (documentationCase_ == 3) {
      output.writeMessage(3, (protocol.MarkupContent) documentation_);
    }
    for (int i = 0; i < parameters_.size(); i++) {
      output.writeMessage(4, parameters_.get(i));
    }
    if (activeParameter_ != null) {
      output.writeMessage(5, getActiveParameter());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getLabelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
    }
    if (documentationCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, documentation_);
    }
    if (documentationCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (protocol.MarkupContent) documentation_);
    }
    for (int i = 0; i < parameters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, parameters_.get(i));
    }
    if (activeParameter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getActiveParameter());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.SignatureInformation)) {
      return super.equals(obj);
    }
    protocol.rpc.SignatureInformation other = (protocol.rpc.SignatureInformation) obj;

    boolean result = true;
    result = result && getLabel()
        .equals(other.getLabel());
    result = result && getParametersList()
        .equals(other.getParametersList());
    result = result && (hasActiveParameter() == other.hasActiveParameter());
    if (hasActiveParameter()) {
      result = result && getActiveParameter()
          .equals(other.getActiveParameter());
    }
    result = result && getDocumentationCase().equals(
        other.getDocumentationCase());
    if (!result) return false;
    switch (documentationCase_) {
      case 2:
        result = result && getMarkup()
            .equals(other.getMarkup());
        break;
      case 3:
        result = result && getMarkupContent()
            .equals(other.getMarkupContent());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getLabel().hashCode();
    if (getParametersCount() > 0) {
      hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + getParametersList().hashCode();
    }
    if (hasActiveParameter()) {
      hash = (37 * hash) + ACTIVE_PARAMETER_FIELD_NUMBER;
      hash = (53 * hash) + getActiveParameter().hashCode();
    }
    switch (documentationCase_) {
      case 2:
        hash = (37 * hash) + MARKUP_FIELD_NUMBER;
        hash = (53 * hash) + getMarkup().hashCode();
        break;
      case 3:
        hash = (37 * hash) + MARKUP_CONTENT_FIELD_NUMBER;
        hash = (53 * hash) + getMarkupContent().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.SignatureInformation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SignatureInformation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SignatureInformation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SignatureInformation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SignatureInformation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureInformation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SignatureInformation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureInformation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SignatureInformation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SignatureInformation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.SignatureInformation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SignatureInformation represents the signature of something callable. A signature
   * can have a label, like a function-name, a doc-comment, and
   * a set of parameters.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.SignatureInformation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.SignatureInformation)
      protocol.rpc.SignatureInformationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.SignatureInformation.class, protocol.rpc.SignatureInformation.Builder.class);
    }

    // Construct using protocol.rpc.SignatureInformation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getParametersFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      label_ = "";

      if (parametersBuilder_ == null) {
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        parametersBuilder_.clear();
      }
      if (activeParameterBuilder_ == null) {
        activeParameter_ = null;
      } else {
        activeParameter_ = null;
        activeParameterBuilder_ = null;
      }
      documentationCase_ = 0;
      documentation_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SignatureInformation_descriptor;
    }

    public protocol.rpc.SignatureInformation getDefaultInstanceForType() {
      return protocol.rpc.SignatureInformation.getDefaultInstance();
    }

    public protocol.rpc.SignatureInformation build() {
      protocol.rpc.SignatureInformation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.SignatureInformation buildPartial() {
      protocol.rpc.SignatureInformation result = new protocol.rpc.SignatureInformation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.label_ = label_;
      if (documentationCase_ == 2) {
        result.documentation_ = documentation_;
      }
      if (documentationCase_ == 3) {
        if (markupContentBuilder_ == null) {
          result.documentation_ = documentation_;
        } else {
          result.documentation_ = markupContentBuilder_.build();
        }
      }
      if (parametersBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          parameters_ = java.util.Collections.unmodifiableList(parameters_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.parameters_ = parameters_;
      } else {
        result.parameters_ = parametersBuilder_.build();
      }
      if (activeParameterBuilder_ == null) {
        result.activeParameter_ = activeParameter_;
      } else {
        result.activeParameter_ = activeParameterBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.documentationCase_ = documentationCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.SignatureInformation) {
        return mergeFrom((protocol.rpc.SignatureInformation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.SignatureInformation other) {
      if (other == protocol.rpc.SignatureInformation.getDefaultInstance()) return this;
      if (!other.getLabel().isEmpty()) {
        label_ = other.label_;
        onChanged();
      }
      if (parametersBuilder_ == null) {
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
      } else {
        if (!other.parameters_.isEmpty()) {
          if (parametersBuilder_.isEmpty()) {
            parametersBuilder_.dispose();
            parametersBuilder_ = null;
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000008);
            parametersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getParametersFieldBuilder() : null;
          } else {
            parametersBuilder_.addAllMessages(other.parameters_);
          }
        }
      }
      if (other.hasActiveParameter()) {
        mergeActiveParameter(other.getActiveParameter());
      }
      switch (other.getDocumentationCase()) {
        case MARKUP: {
          documentationCase_ = 2;
          documentation_ = other.documentation_;
          onChanged();
          break;
        }
        case MARKUP_CONTENT: {
          mergeMarkupContent(other.getMarkupContent());
          break;
        }
        case DOCUMENTATION_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.SignatureInformation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.SignatureInformation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int documentationCase_ = 0;
    private java.lang.Object documentation_;
    public DocumentationCase
        getDocumentationCase() {
      return DocumentationCase.forNumber(
          documentationCase_);
    }

    public Builder clearDocumentation() {
      documentationCase_ = 0;
      documentation_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object label_ = "";
    /**
     * <pre>
     * The label of this signature. Will be shown in
     * the UI.
     * </pre>
     *
     * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The label of this signature. Will be shown in
     * the UI.
     * </pre>
     *
     * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The label of this signature. Will be shown in
     * the UI.
     * </pre>
     *
     * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setLabel(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      label_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The label of this signature. Will be shown in
     * the UI.
     * </pre>
     *
     * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearLabel() {
      
      label_ = getDefaultInstance().getLabel();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The label of this signature. Will be shown in
     * the UI.
     * </pre>
     *
     * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      label_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>string markup = 2;</code>
     */
    public java.lang.String getMarkup() {
      java.lang.Object ref = "";
      if (documentationCase_ == 2) {
        ref = documentation_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (documentationCase_ == 2) {
          documentation_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string markup = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMarkupBytes() {
      java.lang.Object ref = "";
      if (documentationCase_ == 2) {
        ref = documentation_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (documentationCase_ == 2) {
          documentation_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string markup = 2;</code>
     */
    public Builder setMarkup(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  documentationCase_ = 2;
      documentation_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string markup = 2;</code>
     */
    public Builder clearMarkup() {
      if (documentationCase_ == 2) {
        documentationCase_ = 0;
        documentation_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string markup = 2;</code>
     */
    public Builder setMarkupBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      documentationCase_ = 2;
      documentation_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder> markupContentBuilder_;
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContent getMarkupContent() {
      if (markupContentBuilder_ == null) {
        if (documentationCase_ == 3) {
          return (protocol.MarkupContent) documentation_;
        }
        return protocol.MarkupContent.getDefaultInstance();
      } else {
        if (documentationCase_ == 3) {
          return markupContentBuilder_.getMessage();
        }
        return protocol.MarkupContent.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder setMarkupContent(protocol.MarkupContent value) {
      if (markupContentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        documentation_ = value;
        onChanged();
      } else {
        markupContentBuilder_.setMessage(value);
      }
      documentationCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder setMarkupContent(
        protocol.MarkupContent.Builder builderForValue) {
      if (markupContentBuilder_ == null) {
        documentation_ = builderForValue.build();
        onChanged();
      } else {
        markupContentBuilder_.setMessage(builderForValue.build());
      }
      documentationCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder mergeMarkupContent(protocol.MarkupContent value) {
      if (markupContentBuilder_ == null) {
        if (documentationCase_ == 3 &&
            documentation_ != protocol.MarkupContent.getDefaultInstance()) {
          documentation_ = protocol.MarkupContent.newBuilder((protocol.MarkupContent) documentation_)
              .mergeFrom(value).buildPartial();
        } else {
          documentation_ = value;
        }
        onChanged();
      } else {
        if (documentationCase_ == 3) {
          markupContentBuilder_.mergeFrom(value);
        }
        markupContentBuilder_.setMessage(value);
      }
      documentationCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public Builder clearMarkupContent() {
      if (markupContentBuilder_ == null) {
        if (documentationCase_ == 3) {
          documentationCase_ = 0;
          documentation_ = null;
          onChanged();
        }
      } else {
        if (documentationCase_ == 3) {
          documentationCase_ = 0;
          documentation_ = null;
        }
        markupContentBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContent.Builder getMarkupContentBuilder() {
      return getMarkupContentFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    public protocol.MarkupContentOrBuilder getMarkupContentOrBuilder() {
      if ((documentationCase_ == 3) && (markupContentBuilder_ != null)) {
        return markupContentBuilder_.getMessageOrBuilder();
      } else {
        if (documentationCase_ == 3) {
          return (protocol.MarkupContent) documentation_;
        }
        return protocol.MarkupContent.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.MarkupContent markup_content = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder> 
        getMarkupContentFieldBuilder() {
      if (markupContentBuilder_ == null) {
        if (!(documentationCase_ == 3)) {
          documentation_ = protocol.MarkupContent.getDefaultInstance();
        }
        markupContentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.MarkupContent, protocol.MarkupContent.Builder, protocol.MarkupContentOrBuilder>(
                (protocol.MarkupContent) documentation_,
                getParentForChildren(),
                isClean());
        documentation_ = null;
      }
      documentationCase_ = 3;
      onChanged();;
      return markupContentBuilder_;
    }

    private java.util.List<protocol.rpc.ParameterInformation> parameters_ =
      java.util.Collections.emptyList();
    private void ensureParametersIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        parameters_ = new java.util.ArrayList<protocol.rpc.ParameterInformation>(parameters_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.rpc.ParameterInformation, protocol.rpc.ParameterInformation.Builder, protocol.rpc.ParameterInformationOrBuilder> parametersBuilder_;

    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public java.util.List<protocol.rpc.ParameterInformation> getParametersList() {
      if (parametersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(parameters_);
      } else {
        return parametersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public int getParametersCount() {
      if (parametersBuilder_ == null) {
        return parameters_.size();
      } else {
        return parametersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public protocol.rpc.ParameterInformation getParameters(int index) {
      if (parametersBuilder_ == null) {
        return parameters_.get(index);
      } else {
        return parametersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder setParameters(
        int index, protocol.rpc.ParameterInformation value) {
      if (parametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParametersIsMutable();
        parameters_.set(index, value);
        onChanged();
      } else {
        parametersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder setParameters(
        int index, protocol.rpc.ParameterInformation.Builder builderForValue) {
      if (parametersBuilder_ == null) {
        ensureParametersIsMutable();
        parameters_.set(index, builderForValue.build());
        onChanged();
      } else {
        parametersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder addParameters(protocol.rpc.ParameterInformation value) {
      if (parametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParametersIsMutable();
        parameters_.add(value);
        onChanged();
      } else {
        parametersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder addParameters(
        int index, protocol.rpc.ParameterInformation value) {
      if (parametersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParametersIsMutable();
        parameters_.add(index, value);
        onChanged();
      } else {
        parametersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder addParameters(
        protocol.rpc.ParameterInformation.Builder builderForValue) {
      if (parametersBuilder_ == null) {
        ensureParametersIsMutable();
        parameters_.add(builderForValue.build());
        onChanged();
      } else {
        parametersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder addParameters(
        int index, protocol.rpc.ParameterInformation.Builder builderForValue) {
      if (parametersBuilder_ == null) {
        ensureParametersIsMutable();
        parameters_.add(index, builderForValue.build());
        onChanged();
      } else {
        parametersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder addAllParameters(
        java.lang.Iterable<? extends protocol.rpc.ParameterInformation> values) {
      if (parametersBuilder_ == null) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
      } else {
        parametersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder clearParameters() {
      if (parametersBuilder_ == null) {
        parameters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        parametersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public Builder removeParameters(int index) {
      if (parametersBuilder_ == null) {
        ensureParametersIsMutable();
        parameters_.remove(index);
        onChanged();
      } else {
        parametersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public protocol.rpc.ParameterInformation.Builder getParametersBuilder(
        int index) {
      return getParametersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public protocol.rpc.ParameterInformationOrBuilder getParametersOrBuilder(
        int index) {
      if (parametersBuilder_ == null) {
        return parameters_.get(index);  } else {
        return parametersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public java.util.List<? extends protocol.rpc.ParameterInformationOrBuilder> 
         getParametersOrBuilderList() {
      if (parametersBuilder_ != null) {
        return parametersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(parameters_);
      }
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public protocol.rpc.ParameterInformation.Builder addParametersBuilder() {
      return getParametersFieldBuilder().addBuilder(
          protocol.rpc.ParameterInformation.getDefaultInstance());
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public protocol.rpc.ParameterInformation.Builder addParametersBuilder(
        int index) {
      return getParametersFieldBuilder().addBuilder(
          index, protocol.rpc.ParameterInformation.getDefaultInstance());
    }
    /**
     * <pre>
     * The parameters of this signature.
     * </pre>
     *
     * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
     */
    public java.util.List<protocol.rpc.ParameterInformation.Builder> 
         getParametersBuilderList() {
      return getParametersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        protocol.rpc.ParameterInformation, protocol.rpc.ParameterInformation.Builder, protocol.rpc.ParameterInformationOrBuilder> 
        getParametersFieldBuilder() {
      if (parametersBuilder_ == null) {
        parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            protocol.rpc.ParameterInformation, protocol.rpc.ParameterInformation.Builder, protocol.rpc.ParameterInformationOrBuilder>(
                parameters_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        parameters_ = null;
      }
      return parametersBuilder_;
    }

    private com.google.protobuf.Int32Value activeParameter_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> activeParameterBuilder_;
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public boolean hasActiveParameter() {
      return activeParameterBuilder_ != null || activeParameter_ != null;
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public com.google.protobuf.Int32Value getActiveParameter() {
      if (activeParameterBuilder_ == null) {
        return activeParameter_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : activeParameter_;
      } else {
        return activeParameterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public Builder setActiveParameter(com.google.protobuf.Int32Value value) {
      if (activeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        activeParameter_ = value;
        onChanged();
      } else {
        activeParameterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public Builder setActiveParameter(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (activeParameterBuilder_ == null) {
        activeParameter_ = builderForValue.build();
        onChanged();
      } else {
        activeParameterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public Builder mergeActiveParameter(com.google.protobuf.Int32Value value) {
      if (activeParameterBuilder_ == null) {
        if (activeParameter_ != null) {
          activeParameter_ =
            com.google.protobuf.Int32Value.newBuilder(activeParameter_).mergeFrom(value).buildPartial();
        } else {
          activeParameter_ = value;
        }
        onChanged();
      } else {
        activeParameterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public Builder clearActiveParameter() {
      if (activeParameterBuilder_ == null) {
        activeParameter_ = null;
        onChanged();
      } else {
        activeParameter_ = null;
        activeParameterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public com.google.protobuf.Int32Value.Builder getActiveParameterBuilder() {
      
      onChanged();
      return getActiveParameterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getActiveParameterOrBuilder() {
      if (activeParameterBuilder_ != null) {
        return activeParameterBuilder_.getMessageOrBuilder();
      } else {
        return activeParameter_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : activeParameter_;
      }
    }
    /**
     * <pre>
     * The index of the active parameter.
     * If provided, this is used in place of `SignatureHelp.activeParameter`.
     * &#64;since 3.16.0 - proposed state
     * </pre>
     *
     * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getActiveParameterFieldBuilder() {
      if (activeParameterBuilder_ == null) {
        activeParameterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getActiveParameter(),
                getParentForChildren(),
                isClean());
        activeParameter_ = null;
      }
      return activeParameterBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.SignatureInformation)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.SignatureInformation)
  private static final protocol.rpc.SignatureInformation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.SignatureInformation();
  }

  public static protocol.rpc.SignatureInformation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SignatureInformation>
      PARSER = new com.google.protobuf.AbstractParser<SignatureInformation>() {
    public SignatureInformation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureInformation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SignatureInformation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SignatureInformation> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.SignatureInformation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

