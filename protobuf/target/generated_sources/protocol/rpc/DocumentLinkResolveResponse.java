// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * DocumentLinkResolveResponse represents a DocumentLinkResolve response.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.DocumentLinkResolveResponse}
 */
public  final class DocumentLinkResolveResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.DocumentLinkResolveResponse)
    DocumentLinkResolveResponseOrBuilder {
  // Use DocumentLinkResolveResponse.newBuilder() to construct.
  private DocumentLinkResolveResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DocumentLinkResolveResponse() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DocumentLinkResolveResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.rpc.DocumentLink.Builder subBuilder = null;
            if (documentLinkResolveResponseCase_ == 1) {
              subBuilder = ((protocol.rpc.DocumentLink) documentLinkResolveResponse_).toBuilder();
            }
            documentLinkResolveResponse_ =
                input.readMessage(protocol.rpc.DocumentLink.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.DocumentLink) documentLinkResolveResponse_);
              documentLinkResolveResponse_ = subBuilder.buildPartial();
            }
            documentLinkResolveResponseCase_ = 1;
            break;
          }
          case 26: {
            protocol.Error.Builder subBuilder = null;
            if (documentLinkResolveResponseCase_ == 3) {
              subBuilder = ((protocol.Error) documentLinkResolveResponse_).toBuilder();
            }
            documentLinkResolveResponse_ =
                input.readMessage(protocol.Error.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.Error) documentLinkResolveResponse_);
              documentLinkResolveResponse_ = subBuilder.buildPartial();
            }
            documentLinkResolveResponseCase_ = 3;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentLinkResolveResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentLinkResolveResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.DocumentLinkResolveResponse.class, protocol.rpc.DocumentLinkResolveResponse.Builder.class);
  }

  private int documentLinkResolveResponseCase_ = 0;
  private java.lang.Object documentLinkResolveResponse_;
  public enum DocumentLinkResolveResponseCase
      implements com.google.protobuf.Internal.EnumLite {
    DOCUMENT_LINK(1),
    ERROR(3),
    DOCUMENTLINKRESOLVERESPONSE_NOT_SET(0);
    private final int value;
    private DocumentLinkResolveResponseCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentLinkResolveResponseCase valueOf(int value) {
      return forNumber(value);
    }

    public static DocumentLinkResolveResponseCase forNumber(int value) {
      switch (value) {
        case 1: return DOCUMENT_LINK;
        case 3: return ERROR;
        case 0: return DOCUMENTLINKRESOLVERESPONSE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DocumentLinkResolveResponseCase
  getDocumentLinkResolveResponseCase() {
    return DocumentLinkResolveResponseCase.forNumber(
        documentLinkResolveResponseCase_);
  }

  public static final int DOCUMENT_LINK_FIELD_NUMBER = 1;
  /**
   * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
   */
  public protocol.rpc.DocumentLink getDocumentLink() {
    if (documentLinkResolveResponseCase_ == 1) {
       return (protocol.rpc.DocumentLink) documentLinkResolveResponse_;
    }
    return protocol.rpc.DocumentLink.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
   */
  public protocol.rpc.DocumentLinkOrBuilder getDocumentLinkOrBuilder() {
    if (documentLinkResolveResponseCase_ == 1) {
       return (protocol.rpc.DocumentLink) documentLinkResolveResponse_;
    }
    return protocol.rpc.DocumentLink.getDefaultInstance();
  }

  public static final int ERROR_FIELD_NUMBER = 3;
  /**
   * <code>.protocol.Error error = 3;</code>
   */
  public protocol.Error getError() {
    if (documentLinkResolveResponseCase_ == 3) {
       return (protocol.Error) documentLinkResolveResponse_;
    }
    return protocol.Error.getDefaultInstance();
  }
  /**
   * <code>.protocol.Error error = 3;</code>
   */
  public protocol.ErrorOrBuilder getErrorOrBuilder() {
    if (documentLinkResolveResponseCase_ == 3) {
       return (protocol.Error) documentLinkResolveResponse_;
    }
    return protocol.Error.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (documentLinkResolveResponseCase_ == 1) {
      output.writeMessage(1, (protocol.rpc.DocumentLink) documentLinkResolveResponse_);
    }
    if (documentLinkResolveResponseCase_ == 3) {
      output.writeMessage(3, (protocol.Error) documentLinkResolveResponse_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (documentLinkResolveResponseCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (protocol.rpc.DocumentLink) documentLinkResolveResponse_);
    }
    if (documentLinkResolveResponseCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (protocol.Error) documentLinkResolveResponse_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.DocumentLinkResolveResponse)) {
      return super.equals(obj);
    }
    protocol.rpc.DocumentLinkResolveResponse other = (protocol.rpc.DocumentLinkResolveResponse) obj;

    boolean result = true;
    result = result && getDocumentLinkResolveResponseCase().equals(
        other.getDocumentLinkResolveResponseCase());
    if (!result) return false;
    switch (documentLinkResolveResponseCase_) {
      case 1:
        result = result && getDocumentLink()
            .equals(other.getDocumentLink());
        break;
      case 3:
        result = result && getError()
            .equals(other.getError());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (documentLinkResolveResponseCase_) {
      case 1:
        hash = (37 * hash) + DOCUMENT_LINK_FIELD_NUMBER;
        hash = (53 * hash) + getDocumentLink().hashCode();
        break;
      case 3:
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentLinkResolveResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.DocumentLinkResolveResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DocumentLinkResolveResponse represents a DocumentLinkResolve response.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.DocumentLinkResolveResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.DocumentLinkResolveResponse)
      protocol.rpc.DocumentLinkResolveResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentLinkResolveResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentLinkResolveResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.DocumentLinkResolveResponse.class, protocol.rpc.DocumentLinkResolveResponse.Builder.class);
    }

    // Construct using protocol.rpc.DocumentLinkResolveResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      documentLinkResolveResponseCase_ = 0;
      documentLinkResolveResponse_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentLinkResolveResponse_descriptor;
    }

    public protocol.rpc.DocumentLinkResolveResponse getDefaultInstanceForType() {
      return protocol.rpc.DocumentLinkResolveResponse.getDefaultInstance();
    }

    public protocol.rpc.DocumentLinkResolveResponse build() {
      protocol.rpc.DocumentLinkResolveResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.DocumentLinkResolveResponse buildPartial() {
      protocol.rpc.DocumentLinkResolveResponse result = new protocol.rpc.DocumentLinkResolveResponse(this);
      if (documentLinkResolveResponseCase_ == 1) {
        if (documentLinkBuilder_ == null) {
          result.documentLinkResolveResponse_ = documentLinkResolveResponse_;
        } else {
          result.documentLinkResolveResponse_ = documentLinkBuilder_.build();
        }
      }
      if (documentLinkResolveResponseCase_ == 3) {
        if (errorBuilder_ == null) {
          result.documentLinkResolveResponse_ = documentLinkResolveResponse_;
        } else {
          result.documentLinkResolveResponse_ = errorBuilder_.build();
        }
      }
      result.documentLinkResolveResponseCase_ = documentLinkResolveResponseCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.DocumentLinkResolveResponse) {
        return mergeFrom((protocol.rpc.DocumentLinkResolveResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.DocumentLinkResolveResponse other) {
      if (other == protocol.rpc.DocumentLinkResolveResponse.getDefaultInstance()) return this;
      switch (other.getDocumentLinkResolveResponseCase()) {
        case DOCUMENT_LINK: {
          mergeDocumentLink(other.getDocumentLink());
          break;
        }
        case ERROR: {
          mergeError(other.getError());
          break;
        }
        case DOCUMENTLINKRESOLVERESPONSE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.DocumentLinkResolveResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.DocumentLinkResolveResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int documentLinkResolveResponseCase_ = 0;
    private java.lang.Object documentLinkResolveResponse_;
    public DocumentLinkResolveResponseCase
        getDocumentLinkResolveResponseCase() {
      return DocumentLinkResolveResponseCase.forNumber(
          documentLinkResolveResponseCase_);
    }

    public Builder clearDocumentLinkResolveResponse() {
      documentLinkResolveResponseCase_ = 0;
      documentLinkResolveResponse_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.DocumentLink, protocol.rpc.DocumentLink.Builder, protocol.rpc.DocumentLinkOrBuilder> documentLinkBuilder_;
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public protocol.rpc.DocumentLink getDocumentLink() {
      if (documentLinkBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 1) {
          return (protocol.rpc.DocumentLink) documentLinkResolveResponse_;
        }
        return protocol.rpc.DocumentLink.getDefaultInstance();
      } else {
        if (documentLinkResolveResponseCase_ == 1) {
          return documentLinkBuilder_.getMessage();
        }
        return protocol.rpc.DocumentLink.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public Builder setDocumentLink(protocol.rpc.DocumentLink value) {
      if (documentLinkBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        documentLinkResolveResponse_ = value;
        onChanged();
      } else {
        documentLinkBuilder_.setMessage(value);
      }
      documentLinkResolveResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public Builder setDocumentLink(
        protocol.rpc.DocumentLink.Builder builderForValue) {
      if (documentLinkBuilder_ == null) {
        documentLinkResolveResponse_ = builderForValue.build();
        onChanged();
      } else {
        documentLinkBuilder_.setMessage(builderForValue.build());
      }
      documentLinkResolveResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public Builder mergeDocumentLink(protocol.rpc.DocumentLink value) {
      if (documentLinkBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 1 &&
            documentLinkResolveResponse_ != protocol.rpc.DocumentLink.getDefaultInstance()) {
          documentLinkResolveResponse_ = protocol.rpc.DocumentLink.newBuilder((protocol.rpc.DocumentLink) documentLinkResolveResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          documentLinkResolveResponse_ = value;
        }
        onChanged();
      } else {
        if (documentLinkResolveResponseCase_ == 1) {
          documentLinkBuilder_.mergeFrom(value);
        }
        documentLinkBuilder_.setMessage(value);
      }
      documentLinkResolveResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public Builder clearDocumentLink() {
      if (documentLinkBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 1) {
          documentLinkResolveResponseCase_ = 0;
          documentLinkResolveResponse_ = null;
          onChanged();
        }
      } else {
        if (documentLinkResolveResponseCase_ == 1) {
          documentLinkResolveResponseCase_ = 0;
          documentLinkResolveResponse_ = null;
        }
        documentLinkBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public protocol.rpc.DocumentLink.Builder getDocumentLinkBuilder() {
      return getDocumentLinkFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    public protocol.rpc.DocumentLinkOrBuilder getDocumentLinkOrBuilder() {
      if ((documentLinkResolveResponseCase_ == 1) && (documentLinkBuilder_ != null)) {
        return documentLinkBuilder_.getMessageOrBuilder();
      } else {
        if (documentLinkResolveResponseCase_ == 1) {
          return (protocol.rpc.DocumentLink) documentLinkResolveResponse_;
        }
        return protocol.rpc.DocumentLink.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.DocumentLink document_link = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.DocumentLink, protocol.rpc.DocumentLink.Builder, protocol.rpc.DocumentLinkOrBuilder> 
        getDocumentLinkFieldBuilder() {
      if (documentLinkBuilder_ == null) {
        if (!(documentLinkResolveResponseCase_ == 1)) {
          documentLinkResolveResponse_ = protocol.rpc.DocumentLink.getDefaultInstance();
        }
        documentLinkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.DocumentLink, protocol.rpc.DocumentLink.Builder, protocol.rpc.DocumentLinkOrBuilder>(
                (protocol.rpc.DocumentLink) documentLinkResolveResponse_,
                getParentForChildren(),
                isClean());
        documentLinkResolveResponse_ = null;
      }
      documentLinkResolveResponseCase_ = 1;
      onChanged();;
      return documentLinkBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder> errorBuilder_;
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public protocol.Error getError() {
      if (errorBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 3) {
          return (protocol.Error) documentLinkResolveResponse_;
        }
        return protocol.Error.getDefaultInstance();
      } else {
        if (documentLinkResolveResponseCase_ == 3) {
          return errorBuilder_.getMessage();
        }
        return protocol.Error.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public Builder setError(protocol.Error value) {
      if (errorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        documentLinkResolveResponse_ = value;
        onChanged();
      } else {
        errorBuilder_.setMessage(value);
      }
      documentLinkResolveResponseCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public Builder setError(
        protocol.Error.Builder builderForValue) {
      if (errorBuilder_ == null) {
        documentLinkResolveResponse_ = builderForValue.build();
        onChanged();
      } else {
        errorBuilder_.setMessage(builderForValue.build());
      }
      documentLinkResolveResponseCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public Builder mergeError(protocol.Error value) {
      if (errorBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 3 &&
            documentLinkResolveResponse_ != protocol.Error.getDefaultInstance()) {
          documentLinkResolveResponse_ = protocol.Error.newBuilder((protocol.Error) documentLinkResolveResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          documentLinkResolveResponse_ = value;
        }
        onChanged();
      } else {
        if (documentLinkResolveResponseCase_ == 3) {
          errorBuilder_.mergeFrom(value);
        }
        errorBuilder_.setMessage(value);
      }
      documentLinkResolveResponseCase_ = 3;
      return this;
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public Builder clearError() {
      if (errorBuilder_ == null) {
        if (documentLinkResolveResponseCase_ == 3) {
          documentLinkResolveResponseCase_ = 0;
          documentLinkResolveResponse_ = null;
          onChanged();
        }
      } else {
        if (documentLinkResolveResponseCase_ == 3) {
          documentLinkResolveResponseCase_ = 0;
          documentLinkResolveResponse_ = null;
        }
        errorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public protocol.Error.Builder getErrorBuilder() {
      return getErrorFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    public protocol.ErrorOrBuilder getErrorOrBuilder() {
      if ((documentLinkResolveResponseCase_ == 3) && (errorBuilder_ != null)) {
        return errorBuilder_.getMessageOrBuilder();
      } else {
        if (documentLinkResolveResponseCase_ == 3) {
          return (protocol.Error) documentLinkResolveResponse_;
        }
        return protocol.Error.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.Error error = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder> 
        getErrorFieldBuilder() {
      if (errorBuilder_ == null) {
        if (!(documentLinkResolveResponseCase_ == 3)) {
          documentLinkResolveResponse_ = protocol.Error.getDefaultInstance();
        }
        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder>(
                (protocol.Error) documentLinkResolveResponse_,
                getParentForChildren(),
                isClean());
        documentLinkResolveResponse_ = null;
      }
      documentLinkResolveResponseCase_ = 3;
      onChanged();;
      return errorBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.DocumentLinkResolveResponse)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.DocumentLinkResolveResponse)
  private static final protocol.rpc.DocumentLinkResolveResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.DocumentLinkResolveResponse();
  }

  public static protocol.rpc.DocumentLinkResolveResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentLinkResolveResponse>
      PARSER = new com.google.protobuf.AbstractParser<DocumentLinkResolveResponse>() {
    public DocumentLinkResolveResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentLinkResolveResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DocumentLinkResolveResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentLinkResolveResponse> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.DocumentLinkResolveResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

