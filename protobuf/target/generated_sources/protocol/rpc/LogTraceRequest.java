// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * LogTraceRequest represents a `$/logTrace` notification params.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.LogTraceRequest}
 */
public  final class LogTraceRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.LogTraceRequest)
    LogTraceRequestOrBuilder {
  // Use LogTraceRequest.newBuilder() to construct.
  private LogTraceRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LogTraceRequest() {
    message_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private LogTraceRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            message_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (verbose_ != null) {
              subBuilder = verbose_.toBuilder();
            }
            verbose_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(verbose_);
              verbose_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_LogTraceRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_LogTraceRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.LogTraceRequest.class, protocol.rpc.LogTraceRequest.Builder.class);
  }

  public static final int MESSAGE_FIELD_NUMBER = 1;
  private volatile java.lang.Object message_;
  /**
   * <pre>
   * The message to be logged.
   * </pre>
   *
   * <code>string message = 1;</code>
   */
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The message to be logged.
   * </pre>
   *
   * <code>string message = 1;</code>
   */
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERBOSE_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue verbose_;
  /**
   * <pre>
   * Optional. Additional information that can be computed if the `trace` configuration is set to
   * `'verbose'`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue verbose = 2;</code>
   */
  public boolean hasVerbose() {
    return verbose_ != null;
  }
  /**
   * <pre>
   * Optional. Additional information that can be computed if the `trace` configuration is set to
   * `'verbose'`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue verbose = 2;</code>
   */
  public com.google.protobuf.StringValue getVerbose() {
    return verbose_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : verbose_;
  }
  /**
   * <pre>
   * Optional. Additional information that can be computed if the `trace` configuration is set to
   * `'verbose'`.
   * </pre>
   *
   * <code>.google.protobuf.StringValue verbose = 2;</code>
   */
  public com.google.protobuf.StringValueOrBuilder getVerboseOrBuilder() {
    return getVerbose();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getMessageBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
    }
    if (verbose_ != null) {
      output.writeMessage(2, getVerbose());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getMessageBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
    }
    if (verbose_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getVerbose());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.LogTraceRequest)) {
      return super.equals(obj);
    }
    protocol.rpc.LogTraceRequest other = (protocol.rpc.LogTraceRequest) obj;

    boolean result = true;
    result = result && getMessage()
        .equals(other.getMessage());
    result = result && (hasVerbose() == other.hasVerbose());
    if (hasVerbose()) {
      result = result && getVerbose()
          .equals(other.getVerbose());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    if (hasVerbose()) {
      hash = (37 * hash) + VERBOSE_FIELD_NUMBER;
      hash = (53 * hash) + getVerbose().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.LogTraceRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.LogTraceRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.LogTraceRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.LogTraceRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.LogTraceRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * LogTraceRequest represents a `$/logTrace` notification params.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.LogTraceRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.LogTraceRequest)
      protocol.rpc.LogTraceRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_LogTraceRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_LogTraceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.LogTraceRequest.class, protocol.rpc.LogTraceRequest.Builder.class);
    }

    // Construct using protocol.rpc.LogTraceRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      message_ = "";

      if (verboseBuilder_ == null) {
        verbose_ = null;
      } else {
        verbose_ = null;
        verboseBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_LogTraceRequest_descriptor;
    }

    public protocol.rpc.LogTraceRequest getDefaultInstanceForType() {
      return protocol.rpc.LogTraceRequest.getDefaultInstance();
    }

    public protocol.rpc.LogTraceRequest build() {
      protocol.rpc.LogTraceRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.LogTraceRequest buildPartial() {
      protocol.rpc.LogTraceRequest result = new protocol.rpc.LogTraceRequest(this);
      result.message_ = message_;
      if (verboseBuilder_ == null) {
        result.verbose_ = verbose_;
      } else {
        result.verbose_ = verboseBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.LogTraceRequest) {
        return mergeFrom((protocol.rpc.LogTraceRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.LogTraceRequest other) {
      if (other == protocol.rpc.LogTraceRequest.getDefaultInstance()) return this;
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        onChanged();
      }
      if (other.hasVerbose()) {
        mergeVerbose(other.getVerbose());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.LogTraceRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.LogTraceRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * The message to be logged.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The message to be logged.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The message to be logged.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The message to be logged.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public Builder clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The message to be logged.
     * </pre>
     *
     * <code>string message = 1;</code>
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      message_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue verbose_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> verboseBuilder_;
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public boolean hasVerbose() {
      return verboseBuilder_ != null || verbose_ != null;
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public com.google.protobuf.StringValue getVerbose() {
      if (verboseBuilder_ == null) {
        return verbose_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : verbose_;
      } else {
        return verboseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public Builder setVerbose(com.google.protobuf.StringValue value) {
      if (verboseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        verbose_ = value;
        onChanged();
      } else {
        verboseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public Builder setVerbose(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (verboseBuilder_ == null) {
        verbose_ = builderForValue.build();
        onChanged();
      } else {
        verboseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public Builder mergeVerbose(com.google.protobuf.StringValue value) {
      if (verboseBuilder_ == null) {
        if (verbose_ != null) {
          verbose_ =
            com.google.protobuf.StringValue.newBuilder(verbose_).mergeFrom(value).buildPartial();
        } else {
          verbose_ = value;
        }
        onChanged();
      } else {
        verboseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public Builder clearVerbose() {
      if (verboseBuilder_ == null) {
        verbose_ = null;
        onChanged();
      } else {
        verbose_ = null;
        verboseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getVerboseBuilder() {
      
      onChanged();
      return getVerboseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getVerboseOrBuilder() {
      if (verboseBuilder_ != null) {
        return verboseBuilder_.getMessageOrBuilder();
      } else {
        return verbose_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : verbose_;
      }
    }
    /**
     * <pre>
     * Optional. Additional information that can be computed if the `trace` configuration is set to
     * `'verbose'`.
     * </pre>
     *
     * <code>.google.protobuf.StringValue verbose = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
        getVerboseFieldBuilder() {
      if (verboseBuilder_ == null) {
        verboseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getVerbose(),
                getParentForChildren(),
                isClean());
        verbose_ = null;
      }
      return verboseBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.LogTraceRequest)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.LogTraceRequest)
  private static final protocol.rpc.LogTraceRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.LogTraceRequest();
  }

  public static protocol.rpc.LogTraceRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogTraceRequest>
      PARSER = new com.google.protobuf.AbstractParser<LogTraceRequest>() {
    public LogTraceRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogTraceRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LogTraceRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogTraceRequest> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.LogTraceRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

