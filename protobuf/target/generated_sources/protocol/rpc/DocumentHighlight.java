// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * DocumentHighlight is a document highlight is a range inside a text document which deserves
 * special attention. Usually a document highlight is visualized by changing
 * the background color of its range.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.DocumentHighlight}
 */
public  final class DocumentHighlight extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.DocumentHighlight)
    DocumentHighlightOrBuilder {
  // Use DocumentHighlight.newBuilder() to construct.
  private DocumentHighlight(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DocumentHighlight() {
    kind_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DocumentHighlight(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.Range.Builder subBuilder = null;
            if (range_ != null) {
              subBuilder = range_.toBuilder();
            }
            range_ = input.readMessage(protocol.Range.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(range_);
              range_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            kind_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentHighlight_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentHighlight_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.DocumentHighlight.class, protocol.rpc.DocumentHighlight.Builder.class);
  }

  /**
   * <pre>
   * DocumentHighlightKind is a document highlight kind.
   * </pre>
   *
   * Protobuf enum {@code protocol.rpc.DocumentHighlight.DocumentHighlightKind}
   */
  public enum DocumentHighlightKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Conventional default for enums. Do not use this.
     * </pre>
     *
     * <code>DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED = 0;</code>
     */
    DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED(0),
    /**
     * <pre>
     * A textual occurrence.
     * </pre>
     *
     * <code>TEXT = 1;</code>
     */
    TEXT(1),
    /**
     * <pre>
     * Read-access of a symbol, like reading a variable.
     * </pre>
     *
     * <code>READ = 2;</code>
     */
    READ(2),
    /**
     * <pre>
     * Write-access of a symbol, like writing to a variable.
     * </pre>
     *
     * <code>WRITE = 3;</code>
     */
    WRITE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Conventional default for enums. Do not use this.
     * </pre>
     *
     * <code>DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED = 0;</code>
     */
    public static final int DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * A textual occurrence.
     * </pre>
     *
     * <code>TEXT = 1;</code>
     */
    public static final int TEXT_VALUE = 1;
    /**
     * <pre>
     * Read-access of a symbol, like reading a variable.
     * </pre>
     *
     * <code>READ = 2;</code>
     */
    public static final int READ_VALUE = 2;
    /**
     * <pre>
     * Write-access of a symbol, like writing to a variable.
     * </pre>
     *
     * <code>WRITE = 3;</code>
     */
    public static final int WRITE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentHighlightKind valueOf(int value) {
      return forNumber(value);
    }

    public static DocumentHighlightKind forNumber(int value) {
      switch (value) {
        case 0: return DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED;
        case 1: return TEXT;
        case 2: return READ;
        case 3: return WRITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DocumentHighlightKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DocumentHighlightKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DocumentHighlightKind>() {
            public DocumentHighlightKind findValueByNumber(int number) {
              return DocumentHighlightKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.rpc.DocumentHighlight.getDescriptor().getEnumTypes().get(0);
    }

    private static final DocumentHighlightKind[] VALUES = values();

    public static DocumentHighlightKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DocumentHighlightKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protocol.rpc.DocumentHighlight.DocumentHighlightKind)
  }

  public static final int RANGE_FIELD_NUMBER = 1;
  private protocol.Range range_;
  /**
   * <pre>
   * The range this highlight applies to.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public boolean hasRange() {
    return range_ != null;
  }
  /**
   * <pre>
   * The range this highlight applies to.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.Range getRange() {
    return range_ == null ? protocol.Range.getDefaultInstance() : range_;
  }
  /**
   * <pre>
   * The range this highlight applies to.
   * </pre>
   *
   * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.RangeOrBuilder getRangeOrBuilder() {
    return getRange();
  }

  public static final int KIND_FIELD_NUMBER = 2;
  private int kind_;
  /**
   * <pre>
   * Optional. The highlight kind, default is DocumentHighlightKind.Text.
   * </pre>
   *
   * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
   */
  public int getKindValue() {
    return kind_;
  }
  /**
   * <pre>
   * Optional. The highlight kind, default is DocumentHighlightKind.Text.
   * </pre>
   *
   * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
   */
  public protocol.rpc.DocumentHighlight.DocumentHighlightKind getKind() {
    protocol.rpc.DocumentHighlight.DocumentHighlightKind result = protocol.rpc.DocumentHighlight.DocumentHighlightKind.valueOf(kind_);
    return result == null ? protocol.rpc.DocumentHighlight.DocumentHighlightKind.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (range_ != null) {
      output.writeMessage(1, getRange());
    }
    if (kind_ != protocol.rpc.DocumentHighlight.DocumentHighlightKind.DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, kind_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (range_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRange());
    }
    if (kind_ != protocol.rpc.DocumentHighlight.DocumentHighlightKind.DOCUMENT_HIGHLIGHT_KIND_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, kind_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.DocumentHighlight)) {
      return super.equals(obj);
    }
    protocol.rpc.DocumentHighlight other = (protocol.rpc.DocumentHighlight) obj;

    boolean result = true;
    result = result && (hasRange() == other.hasRange());
    if (hasRange()) {
      result = result && getRange()
          .equals(other.getRange());
    }
    result = result && kind_ == other.kind_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRange()) {
      hash = (37 * hash) + RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getRange().hashCode();
    }
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + kind_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.DocumentHighlight parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentHighlight parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentHighlight parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.DocumentHighlight parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.DocumentHighlight prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DocumentHighlight is a document highlight is a range inside a text document which deserves
   * special attention. Usually a document highlight is visualized by changing
   * the background color of its range.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.DocumentHighlight}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.DocumentHighlight)
      protocol.rpc.DocumentHighlightOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentHighlight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentHighlight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.DocumentHighlight.class, protocol.rpc.DocumentHighlight.Builder.class);
    }

    // Construct using protocol.rpc.DocumentHighlight.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (rangeBuilder_ == null) {
        range_ = null;
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }
      kind_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_DocumentHighlight_descriptor;
    }

    public protocol.rpc.DocumentHighlight getDefaultInstanceForType() {
      return protocol.rpc.DocumentHighlight.getDefaultInstance();
    }

    public protocol.rpc.DocumentHighlight build() {
      protocol.rpc.DocumentHighlight result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.DocumentHighlight buildPartial() {
      protocol.rpc.DocumentHighlight result = new protocol.rpc.DocumentHighlight(this);
      if (rangeBuilder_ == null) {
        result.range_ = range_;
      } else {
        result.range_ = rangeBuilder_.build();
      }
      result.kind_ = kind_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.DocumentHighlight) {
        return mergeFrom((protocol.rpc.DocumentHighlight)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.DocumentHighlight other) {
      if (other == protocol.rpc.DocumentHighlight.getDefaultInstance()) return this;
      if (other.hasRange()) {
        mergeRange(other.getRange());
      }
      if (other.kind_ != 0) {
        setKindValue(other.getKindValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.DocumentHighlight parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.DocumentHighlight) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private protocol.Range range_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> rangeBuilder_;
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public boolean hasRange() {
      return rangeBuilder_ != null || range_ != null;
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range getRange() {
      if (rangeBuilder_ == null) {
        return range_ == null ? protocol.Range.getDefaultInstance() : range_;
      } else {
        return rangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        rangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setRange(
        protocol.Range.Builder builderForValue) {
      if (rangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        rangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeRange(protocol.Range value) {
      if (rangeBuilder_ == null) {
        if (range_ != null) {
          range_ =
            protocol.Range.newBuilder(range_).mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        rangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearRange() {
      if (rangeBuilder_ == null) {
        range_ = null;
        onChanged();
      } else {
        range_ = null;
        rangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.Range.Builder getRangeBuilder() {
      
      onChanged();
      return getRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.RangeOrBuilder getRangeOrBuilder() {
      if (rangeBuilder_ != null) {
        return rangeBuilder_.getMessageOrBuilder();
      } else {
        return range_ == null ?
            protocol.Range.getDefaultInstance() : range_;
      }
    }
    /**
     * <pre>
     * The range this highlight applies to.
     * </pre>
     *
     * <code>.protocol.Range range = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder> 
        getRangeFieldBuilder() {
      if (rangeBuilder_ == null) {
        rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Range, protocol.Range.Builder, protocol.RangeOrBuilder>(
                getRange(),
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      return rangeBuilder_;
    }

    private int kind_ = 0;
    /**
     * <pre>
     * Optional. The highlight kind, default is DocumentHighlightKind.Text.
     * </pre>
     *
     * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
     */
    public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * Optional. The highlight kind, default is DocumentHighlightKind.Text.
     * </pre>
     *
     * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
     */
    public Builder setKindValue(int value) {
      kind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The highlight kind, default is DocumentHighlightKind.Text.
     * </pre>
     *
     * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
     */
    public protocol.rpc.DocumentHighlight.DocumentHighlightKind getKind() {
      protocol.rpc.DocumentHighlight.DocumentHighlightKind result = protocol.rpc.DocumentHighlight.DocumentHighlightKind.valueOf(kind_);
      return result == null ? protocol.rpc.DocumentHighlight.DocumentHighlightKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional. The highlight kind, default is DocumentHighlightKind.Text.
     * </pre>
     *
     * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
     */
    public Builder setKind(protocol.rpc.DocumentHighlight.DocumentHighlightKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The highlight kind, default is DocumentHighlightKind.Text.
     * </pre>
     *
     * <code>.protocol.rpc.DocumentHighlight.DocumentHighlightKind kind = 2;</code>
     */
    public Builder clearKind() {
      
      kind_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.DocumentHighlight)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.DocumentHighlight)
  private static final protocol.rpc.DocumentHighlight DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.DocumentHighlight();
  }

  public static protocol.rpc.DocumentHighlight getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DocumentHighlight>
      PARSER = new com.google.protobuf.AbstractParser<DocumentHighlight>() {
    public DocumentHighlight parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DocumentHighlight(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DocumentHighlight> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DocumentHighlight> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.DocumentHighlight getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

