// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * WorkspaceSymbolsResponse represents a WorkspaceSymbols response.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.WorkspaceSymbolsResponse}
 */
public  final class WorkspaceSymbolsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.WorkspaceSymbolsResponse)
    WorkspaceSymbolsResponseOrBuilder {
  // Use WorkspaceSymbolsResponse.newBuilder() to construct.
  private WorkspaceSymbolsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WorkspaceSymbolsResponse() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private WorkspaceSymbolsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder subBuilder = null;
            if (workspaceSymbolsResponseCase_ == 1) {
              subBuilder = ((protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_).toBuilder();
            }
            workspaceSymbolsResponse_ =
                input.readMessage(protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_);
              workspaceSymbolsResponse_ = subBuilder.buildPartial();
            }
            workspaceSymbolsResponseCase_ = 1;
            break;
          }
          case 18: {
            protocol.Error.Builder subBuilder = null;
            if (workspaceSymbolsResponseCase_ == 2) {
              subBuilder = ((protocol.Error) workspaceSymbolsResponse_).toBuilder();
            }
            workspaceSymbolsResponse_ =
                input.readMessage(protocol.Error.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.Error) workspaceSymbolsResponse_);
              workspaceSymbolsResponse_ = subBuilder.buildPartial();
            }
            workspaceSymbolsResponseCase_ = 2;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.WorkspaceSymbolsResponse.class, protocol.rpc.WorkspaceSymbolsResponse.Builder.class);
  }

  public interface SymbolInformationsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    java.util.List<protocol.rpc.SymbolInformation> 
        getSymbolInformationsList();
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    protocol.rpc.SymbolInformation getSymbolInformations(int index);
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    int getSymbolInformationsCount();
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    java.util.List<? extends protocol.rpc.SymbolInformationOrBuilder> 
        getSymbolInformationsOrBuilderList();
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    protocol.rpc.SymbolInformationOrBuilder getSymbolInformationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations}
   */
  public  static final class SymbolInformations extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)
      SymbolInformationsOrBuilder {
    // Use SymbolInformations.newBuilder() to construct.
    private SymbolInformations(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolInformations() {
      symbolInformations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SymbolInformations(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                symbolInformations_ = new java.util.ArrayList<protocol.rpc.SymbolInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              symbolInformations_.add(
                  input.readMessage(protocol.rpc.SymbolInformation.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          symbolInformations_ = java.util.Collections.unmodifiableList(symbolInformations_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_SymbolInformations_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_SymbolInformations_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.class, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder.class);
    }

    public static final int SYMBOL_INFORMATIONS_FIELD_NUMBER = 1;
    private java.util.List<protocol.rpc.SymbolInformation> symbolInformations_;
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    public java.util.List<protocol.rpc.SymbolInformation> getSymbolInformationsList() {
      return symbolInformations_;
    }
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    public java.util.List<? extends protocol.rpc.SymbolInformationOrBuilder> 
        getSymbolInformationsOrBuilderList() {
      return symbolInformations_;
    }
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    public int getSymbolInformationsCount() {
      return symbolInformations_.size();
    }
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    public protocol.rpc.SymbolInformation getSymbolInformations(int index) {
      return symbolInformations_.get(index);
    }
    /**
     * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
     */
    public protocol.rpc.SymbolInformationOrBuilder getSymbolInformationsOrBuilder(
        int index) {
      return symbolInformations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < symbolInformations_.size(); i++) {
        output.writeMessage(1, symbolInformations_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < symbolInformations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, symbolInformations_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)) {
        return super.equals(obj);
      }
      protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations other = (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) obj;

      boolean result = true;
      result = result && getSymbolInformationsList()
          .equals(other.getSymbolInformationsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSymbolInformationsCount() > 0) {
        hash = (37 * hash) + SYMBOL_INFORMATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolInformationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_SymbolInformations_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_SymbolInformations_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.class, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder.class);
      }

      // Construct using protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSymbolInformationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (symbolInformationsBuilder_ == null) {
          symbolInformations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          symbolInformationsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_SymbolInformations_descriptor;
      }

      public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations getDefaultInstanceForType() {
        return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
      }

      public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations build() {
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations buildPartial() {
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations result = new protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations(this);
        int from_bitField0_ = bitField0_;
        if (symbolInformationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            symbolInformations_ = java.util.Collections.unmodifiableList(symbolInformations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.symbolInformations_ = symbolInformations_;
        } else {
          result.symbolInformations_ = symbolInformationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) {
          return mergeFrom((protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations other) {
        if (other == protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance()) return this;
        if (symbolInformationsBuilder_ == null) {
          if (!other.symbolInformations_.isEmpty()) {
            if (symbolInformations_.isEmpty()) {
              symbolInformations_ = other.symbolInformations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSymbolInformationsIsMutable();
              symbolInformations_.addAll(other.symbolInformations_);
            }
            onChanged();
          }
        } else {
          if (!other.symbolInformations_.isEmpty()) {
            if (symbolInformationsBuilder_.isEmpty()) {
              symbolInformationsBuilder_.dispose();
              symbolInformationsBuilder_ = null;
              symbolInformations_ = other.symbolInformations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              symbolInformationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSymbolInformationsFieldBuilder() : null;
            } else {
              symbolInformationsBuilder_.addAllMessages(other.symbolInformations_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.rpc.SymbolInformation> symbolInformations_ =
        java.util.Collections.emptyList();
      private void ensureSymbolInformationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          symbolInformations_ = new java.util.ArrayList<protocol.rpc.SymbolInformation>(symbolInformations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.rpc.SymbolInformation, protocol.rpc.SymbolInformation.Builder, protocol.rpc.SymbolInformationOrBuilder> symbolInformationsBuilder_;

      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public java.util.List<protocol.rpc.SymbolInformation> getSymbolInformationsList() {
        if (symbolInformationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbolInformations_);
        } else {
          return symbolInformationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public int getSymbolInformationsCount() {
        if (symbolInformationsBuilder_ == null) {
          return symbolInformations_.size();
        } else {
          return symbolInformationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public protocol.rpc.SymbolInformation getSymbolInformations(int index) {
        if (symbolInformationsBuilder_ == null) {
          return symbolInformations_.get(index);
        } else {
          return symbolInformationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder setSymbolInformations(
          int index, protocol.rpc.SymbolInformation value) {
        if (symbolInformationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolInformationsIsMutable();
          symbolInformations_.set(index, value);
          onChanged();
        } else {
          symbolInformationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder setSymbolInformations(
          int index, protocol.rpc.SymbolInformation.Builder builderForValue) {
        if (symbolInformationsBuilder_ == null) {
          ensureSymbolInformationsIsMutable();
          symbolInformations_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolInformationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder addSymbolInformations(protocol.rpc.SymbolInformation value) {
        if (symbolInformationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolInformationsIsMutable();
          symbolInformations_.add(value);
          onChanged();
        } else {
          symbolInformationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder addSymbolInformations(
          int index, protocol.rpc.SymbolInformation value) {
        if (symbolInformationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolInformationsIsMutable();
          symbolInformations_.add(index, value);
          onChanged();
        } else {
          symbolInformationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder addSymbolInformations(
          protocol.rpc.SymbolInformation.Builder builderForValue) {
        if (symbolInformationsBuilder_ == null) {
          ensureSymbolInformationsIsMutable();
          symbolInformations_.add(builderForValue.build());
          onChanged();
        } else {
          symbolInformationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder addSymbolInformations(
          int index, protocol.rpc.SymbolInformation.Builder builderForValue) {
        if (symbolInformationsBuilder_ == null) {
          ensureSymbolInformationsIsMutable();
          symbolInformations_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolInformationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder addAllSymbolInformations(
          java.lang.Iterable<? extends protocol.rpc.SymbolInformation> values) {
        if (symbolInformationsBuilder_ == null) {
          ensureSymbolInformationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbolInformations_);
          onChanged();
        } else {
          symbolInformationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder clearSymbolInformations() {
        if (symbolInformationsBuilder_ == null) {
          symbolInformations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          symbolInformationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public Builder removeSymbolInformations(int index) {
        if (symbolInformationsBuilder_ == null) {
          ensureSymbolInformationsIsMutable();
          symbolInformations_.remove(index);
          onChanged();
        } else {
          symbolInformationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public protocol.rpc.SymbolInformation.Builder getSymbolInformationsBuilder(
          int index) {
        return getSymbolInformationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public protocol.rpc.SymbolInformationOrBuilder getSymbolInformationsOrBuilder(
          int index) {
        if (symbolInformationsBuilder_ == null) {
          return symbolInformations_.get(index);  } else {
          return symbolInformationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public java.util.List<? extends protocol.rpc.SymbolInformationOrBuilder> 
           getSymbolInformationsOrBuilderList() {
        if (symbolInformationsBuilder_ != null) {
          return symbolInformationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbolInformations_);
        }
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public protocol.rpc.SymbolInformation.Builder addSymbolInformationsBuilder() {
        return getSymbolInformationsFieldBuilder().addBuilder(
            protocol.rpc.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public protocol.rpc.SymbolInformation.Builder addSymbolInformationsBuilder(
          int index) {
        return getSymbolInformationsFieldBuilder().addBuilder(
            index, protocol.rpc.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.rpc.SymbolInformation symbol_informations = 1;</code>
       */
      public java.util.List<protocol.rpc.SymbolInformation.Builder> 
           getSymbolInformationsBuilderList() {
        return getSymbolInformationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.rpc.SymbolInformation, protocol.rpc.SymbolInformation.Builder, protocol.rpc.SymbolInformationOrBuilder> 
          getSymbolInformationsFieldBuilder() {
        if (symbolInformationsBuilder_ == null) {
          symbolInformationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.rpc.SymbolInformation, protocol.rpc.SymbolInformation.Builder, protocol.rpc.SymbolInformationOrBuilder>(
                  symbolInformations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          symbolInformations_ = null;
        }
        return symbolInformationsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)
    }

    // @@protoc_insertion_point(class_scope:protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations)
    private static final protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations();
    }

    public static protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolInformations>
        PARSER = new com.google.protobuf.AbstractParser<SymbolInformations>() {
      public SymbolInformations parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SymbolInformations(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolInformations> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolInformations> getParserForType() {
      return PARSER;
    }

    public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int workspaceSymbolsResponseCase_ = 0;
  private java.lang.Object workspaceSymbolsResponse_;
  public enum WorkspaceSymbolsResponseCase
      implements com.google.protobuf.Internal.EnumLite {
    SYMBOL_INFORMATIONS(1),
    ERROR(2),
    WORKSPACESYMBOLSRESPONSE_NOT_SET(0);
    private final int value;
    private WorkspaceSymbolsResponseCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WorkspaceSymbolsResponseCase valueOf(int value) {
      return forNumber(value);
    }

    public static WorkspaceSymbolsResponseCase forNumber(int value) {
      switch (value) {
        case 1: return SYMBOL_INFORMATIONS;
        case 2: return ERROR;
        case 0: return WORKSPACESYMBOLSRESPONSE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public WorkspaceSymbolsResponseCase
  getWorkspaceSymbolsResponseCase() {
    return WorkspaceSymbolsResponseCase.forNumber(
        workspaceSymbolsResponseCase_);
  }

  public static final int SYMBOL_INFORMATIONS_FIELD_NUMBER = 1;
  /**
   * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
   */
  public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations getSymbolInformations() {
    if (workspaceSymbolsResponseCase_ == 1) {
       return (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_;
    }
    return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
   */
  public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder getSymbolInformationsOrBuilder() {
    if (workspaceSymbolsResponseCase_ == 1) {
       return (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_;
    }
    return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
  }

  public static final int ERROR_FIELD_NUMBER = 2;
  /**
   * <code>.protocol.Error error = 2;</code>
   */
  public protocol.Error getError() {
    if (workspaceSymbolsResponseCase_ == 2) {
       return (protocol.Error) workspaceSymbolsResponse_;
    }
    return protocol.Error.getDefaultInstance();
  }
  /**
   * <code>.protocol.Error error = 2;</code>
   */
  public protocol.ErrorOrBuilder getErrorOrBuilder() {
    if (workspaceSymbolsResponseCase_ == 2) {
       return (protocol.Error) workspaceSymbolsResponse_;
    }
    return protocol.Error.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (workspaceSymbolsResponseCase_ == 1) {
      output.writeMessage(1, (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_);
    }
    if (workspaceSymbolsResponseCase_ == 2) {
      output.writeMessage(2, (protocol.Error) workspaceSymbolsResponse_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (workspaceSymbolsResponseCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_);
    }
    if (workspaceSymbolsResponseCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (protocol.Error) workspaceSymbolsResponse_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.WorkspaceSymbolsResponse)) {
      return super.equals(obj);
    }
    protocol.rpc.WorkspaceSymbolsResponse other = (protocol.rpc.WorkspaceSymbolsResponse) obj;

    boolean result = true;
    result = result && getWorkspaceSymbolsResponseCase().equals(
        other.getWorkspaceSymbolsResponseCase());
    if (!result) return false;
    switch (workspaceSymbolsResponseCase_) {
      case 1:
        result = result && getSymbolInformations()
            .equals(other.getSymbolInformations());
        break;
      case 2:
        result = result && getError()
            .equals(other.getError());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (workspaceSymbolsResponseCase_) {
      case 1:
        hash = (37 * hash) + SYMBOL_INFORMATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolInformations().hashCode();
        break;
      case 2:
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.WorkspaceSymbolsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.WorkspaceSymbolsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * WorkspaceSymbolsResponse represents a WorkspaceSymbols response.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.WorkspaceSymbolsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.WorkspaceSymbolsResponse)
      protocol.rpc.WorkspaceSymbolsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.WorkspaceSymbolsResponse.class, protocol.rpc.WorkspaceSymbolsResponse.Builder.class);
    }

    // Construct using protocol.rpc.WorkspaceSymbolsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      workspaceSymbolsResponseCase_ = 0;
      workspaceSymbolsResponse_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_WorkspaceSymbolsResponse_descriptor;
    }

    public protocol.rpc.WorkspaceSymbolsResponse getDefaultInstanceForType() {
      return protocol.rpc.WorkspaceSymbolsResponse.getDefaultInstance();
    }

    public protocol.rpc.WorkspaceSymbolsResponse build() {
      protocol.rpc.WorkspaceSymbolsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.WorkspaceSymbolsResponse buildPartial() {
      protocol.rpc.WorkspaceSymbolsResponse result = new protocol.rpc.WorkspaceSymbolsResponse(this);
      if (workspaceSymbolsResponseCase_ == 1) {
        if (symbolInformationsBuilder_ == null) {
          result.workspaceSymbolsResponse_ = workspaceSymbolsResponse_;
        } else {
          result.workspaceSymbolsResponse_ = symbolInformationsBuilder_.build();
        }
      }
      if (workspaceSymbolsResponseCase_ == 2) {
        if (errorBuilder_ == null) {
          result.workspaceSymbolsResponse_ = workspaceSymbolsResponse_;
        } else {
          result.workspaceSymbolsResponse_ = errorBuilder_.build();
        }
      }
      result.workspaceSymbolsResponseCase_ = workspaceSymbolsResponseCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.WorkspaceSymbolsResponse) {
        return mergeFrom((protocol.rpc.WorkspaceSymbolsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.WorkspaceSymbolsResponse other) {
      if (other == protocol.rpc.WorkspaceSymbolsResponse.getDefaultInstance()) return this;
      switch (other.getWorkspaceSymbolsResponseCase()) {
        case SYMBOL_INFORMATIONS: {
          mergeSymbolInformations(other.getSymbolInformations());
          break;
        }
        case ERROR: {
          mergeError(other.getError());
          break;
        }
        case WORKSPACESYMBOLSRESPONSE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.WorkspaceSymbolsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.WorkspaceSymbolsResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int workspaceSymbolsResponseCase_ = 0;
    private java.lang.Object workspaceSymbolsResponse_;
    public WorkspaceSymbolsResponseCase
        getWorkspaceSymbolsResponseCase() {
      return WorkspaceSymbolsResponseCase.forNumber(
          workspaceSymbolsResponseCase_);
    }

    public Builder clearWorkspaceSymbolsResponse() {
      workspaceSymbolsResponseCase_ = 0;
      workspaceSymbolsResponse_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder> symbolInformationsBuilder_;
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations getSymbolInformations() {
      if (symbolInformationsBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 1) {
          return (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_;
        }
        return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
      } else {
        if (workspaceSymbolsResponseCase_ == 1) {
          return symbolInformationsBuilder_.getMessage();
        }
        return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public Builder setSymbolInformations(protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations value) {
      if (symbolInformationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workspaceSymbolsResponse_ = value;
        onChanged();
      } else {
        symbolInformationsBuilder_.setMessage(value);
      }
      workspaceSymbolsResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public Builder setSymbolInformations(
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder builderForValue) {
      if (symbolInformationsBuilder_ == null) {
        workspaceSymbolsResponse_ = builderForValue.build();
        onChanged();
      } else {
        symbolInformationsBuilder_.setMessage(builderForValue.build());
      }
      workspaceSymbolsResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public Builder mergeSymbolInformations(protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations value) {
      if (symbolInformationsBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 1 &&
            workspaceSymbolsResponse_ != protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance()) {
          workspaceSymbolsResponse_ = protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.newBuilder((protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          workspaceSymbolsResponse_ = value;
        }
        onChanged();
      } else {
        if (workspaceSymbolsResponseCase_ == 1) {
          symbolInformationsBuilder_.mergeFrom(value);
        }
        symbolInformationsBuilder_.setMessage(value);
      }
      workspaceSymbolsResponseCase_ = 1;
      return this;
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public Builder clearSymbolInformations() {
      if (symbolInformationsBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 1) {
          workspaceSymbolsResponseCase_ = 0;
          workspaceSymbolsResponse_ = null;
          onChanged();
        }
      } else {
        if (workspaceSymbolsResponseCase_ == 1) {
          workspaceSymbolsResponseCase_ = 0;
          workspaceSymbolsResponse_ = null;
        }
        symbolInformationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder getSymbolInformationsBuilder() {
      return getSymbolInformationsFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    public protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder getSymbolInformationsOrBuilder() {
      if ((workspaceSymbolsResponseCase_ == 1) && (symbolInformationsBuilder_ != null)) {
        return symbolInformationsBuilder_.getMessageOrBuilder();
      } else {
        if (workspaceSymbolsResponseCase_ == 1) {
          return (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_;
        }
        return protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations symbol_informations = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder> 
        getSymbolInformationsFieldBuilder() {
      if (symbolInformationsBuilder_ == null) {
        if (!(workspaceSymbolsResponseCase_ == 1)) {
          workspaceSymbolsResponse_ = protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.getDefaultInstance();
        }
        symbolInformationsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations.Builder, protocol.rpc.WorkspaceSymbolsResponse.SymbolInformationsOrBuilder>(
                (protocol.rpc.WorkspaceSymbolsResponse.SymbolInformations) workspaceSymbolsResponse_,
                getParentForChildren(),
                isClean());
        workspaceSymbolsResponse_ = null;
      }
      workspaceSymbolsResponseCase_ = 1;
      onChanged();;
      return symbolInformationsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder> errorBuilder_;
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public protocol.Error getError() {
      if (errorBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 2) {
          return (protocol.Error) workspaceSymbolsResponse_;
        }
        return protocol.Error.getDefaultInstance();
      } else {
        if (workspaceSymbolsResponseCase_ == 2) {
          return errorBuilder_.getMessage();
        }
        return protocol.Error.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public Builder setError(protocol.Error value) {
      if (errorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workspaceSymbolsResponse_ = value;
        onChanged();
      } else {
        errorBuilder_.setMessage(value);
      }
      workspaceSymbolsResponseCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public Builder setError(
        protocol.Error.Builder builderForValue) {
      if (errorBuilder_ == null) {
        workspaceSymbolsResponse_ = builderForValue.build();
        onChanged();
      } else {
        errorBuilder_.setMessage(builderForValue.build());
      }
      workspaceSymbolsResponseCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public Builder mergeError(protocol.Error value) {
      if (errorBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 2 &&
            workspaceSymbolsResponse_ != protocol.Error.getDefaultInstance()) {
          workspaceSymbolsResponse_ = protocol.Error.newBuilder((protocol.Error) workspaceSymbolsResponse_)
              .mergeFrom(value).buildPartial();
        } else {
          workspaceSymbolsResponse_ = value;
        }
        onChanged();
      } else {
        if (workspaceSymbolsResponseCase_ == 2) {
          errorBuilder_.mergeFrom(value);
        }
        errorBuilder_.setMessage(value);
      }
      workspaceSymbolsResponseCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public Builder clearError() {
      if (errorBuilder_ == null) {
        if (workspaceSymbolsResponseCase_ == 2) {
          workspaceSymbolsResponseCase_ = 0;
          workspaceSymbolsResponse_ = null;
          onChanged();
        }
      } else {
        if (workspaceSymbolsResponseCase_ == 2) {
          workspaceSymbolsResponseCase_ = 0;
          workspaceSymbolsResponse_ = null;
        }
        errorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public protocol.Error.Builder getErrorBuilder() {
      return getErrorFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    public protocol.ErrorOrBuilder getErrorOrBuilder() {
      if ((workspaceSymbolsResponseCase_ == 2) && (errorBuilder_ != null)) {
        return errorBuilder_.getMessageOrBuilder();
      } else {
        if (workspaceSymbolsResponseCase_ == 2) {
          return (protocol.Error) workspaceSymbolsResponse_;
        }
        return protocol.Error.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder> 
        getErrorFieldBuilder() {
      if (errorBuilder_ == null) {
        if (!(workspaceSymbolsResponseCase_ == 2)) {
          workspaceSymbolsResponse_ = protocol.Error.getDefaultInstance();
        }
        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.Error, protocol.Error.Builder, protocol.ErrorOrBuilder>(
                (protocol.Error) workspaceSymbolsResponse_,
                getParentForChildren(),
                isClean());
        workspaceSymbolsResponse_ = null;
      }
      workspaceSymbolsResponseCase_ = 2;
      onChanged();;
      return errorBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.WorkspaceSymbolsResponse)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.WorkspaceSymbolsResponse)
  private static final protocol.rpc.WorkspaceSymbolsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.WorkspaceSymbolsResponse();
  }

  public static protocol.rpc.WorkspaceSymbolsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WorkspaceSymbolsResponse>
      PARSER = new com.google.protobuf.AbstractParser<WorkspaceSymbolsResponse>() {
    public WorkspaceSymbolsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkspaceSymbolsResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WorkspaceSymbolsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WorkspaceSymbolsResponse> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.WorkspaceSymbolsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

