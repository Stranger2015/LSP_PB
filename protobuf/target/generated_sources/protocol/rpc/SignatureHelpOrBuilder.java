// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

public interface SignatureHelpOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.rpc.SignatureHelp)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * One or more signatures. If no signatures are available the signature help
   * request should return `null`.
   * </pre>
   *
   * <code>repeated .protocol.rpc.SignatureInformation signatures = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<protocol.rpc.SignatureInformation> 
      getSignaturesList();
  /**
   * <pre>
   * One or more signatures. If no signatures are available the signature help
   * request should return `null`.
   * </pre>
   *
   * <code>repeated .protocol.rpc.SignatureInformation signatures = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.rpc.SignatureInformation getSignatures(int index);
  /**
   * <pre>
   * One or more signatures. If no signatures are available the signature help
   * request should return `null`.
   * </pre>
   *
   * <code>repeated .protocol.rpc.SignatureInformation signatures = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  int getSignaturesCount();
  /**
   * <pre>
   * One or more signatures. If no signatures are available the signature help
   * request should return `null`.
   * </pre>
   *
   * <code>repeated .protocol.rpc.SignatureInformation signatures = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.util.List<? extends protocol.rpc.SignatureInformationOrBuilder> 
      getSignaturesOrBuilderList();
  /**
   * <pre>
   * One or more signatures. If no signatures are available the signature help
   * request should return `null`.
   * </pre>
   *
   * <code>repeated .protocol.rpc.SignatureInformation signatures = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  protocol.rpc.SignatureInformationOrBuilder getSignaturesOrBuilder(
      int index);

  /**
   * <pre>
   * The active signature. If omitted or the value lies outside the
   * range of `signatures` the value defaults to zero or is ignore if
   * the `SignatureHelp` as no signatures.
   * Whenever possible implementors should make an active decision about
   * the active signature and shouldn't rely on a default value.
   * In future version of the protocol this property might become
   * mandatory to better express this.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_signature = 2;</code>
   */
  boolean hasActiveSignature();
  /**
   * <pre>
   * The active signature. If omitted or the value lies outside the
   * range of `signatures` the value defaults to zero or is ignore if
   * the `SignatureHelp` as no signatures.
   * Whenever possible implementors should make an active decision about
   * the active signature and shouldn't rely on a default value.
   * In future version of the protocol this property might become
   * mandatory to better express this.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_signature = 2;</code>
   */
  com.google.protobuf.Int32Value getActiveSignature();
  /**
   * <pre>
   * The active signature. If omitted or the value lies outside the
   * range of `signatures` the value defaults to zero or is ignore if
   * the `SignatureHelp` as no signatures.
   * Whenever possible implementors should make an active decision about
   * the active signature and shouldn't rely on a default value.
   * In future version of the protocol this property might become
   * mandatory to better express this.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_signature = 2;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getActiveSignatureOrBuilder();

  /**
   * <pre>
   * The active parameter of the active signature. If omitted or the value
   * lies outside the range of `signatures[activeSignature].parameters`
   * defaults to 0 if the active signature has parameters. If
   * the active signature has no parameters it is ignored.
   * In future version of the protocol this property might become
   * mandatory to better express the active parameter if the
   * active signature does have any.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 3;</code>
   */
  boolean hasActiveParameter();
  /**
   * <pre>
   * The active parameter of the active signature. If omitted or the value
   * lies outside the range of `signatures[activeSignature].parameters`
   * defaults to 0 if the active signature has parameters. If
   * the active signature has no parameters it is ignored.
   * In future version of the protocol this property might become
   * mandatory to better express the active parameter if the
   * active signature does have any.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 3;</code>
   */
  com.google.protobuf.Int32Value getActiveParameter();
  /**
   * <pre>
   * The active parameter of the active signature. If omitted or the value
   * lies outside the range of `signatures[activeSignature].parameters`
   * defaults to 0 if the active signature has parameters. If
   * the active signature has no parameters it is ignored.
   * In future version of the protocol this property might become
   * mandatory to better express the active parameter if the
   * active signature does have any.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 3;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getActiveParameterOrBuilder();
}
