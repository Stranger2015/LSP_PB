// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * SemanticTokensOptions represents a server capabilities option of semanticTokensProvider.
 * &#64;since 3.16.0
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.SemanticTokensOptions}
 */
public  final class SemanticTokensOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.SemanticTokensOptions)
    SemanticTokensOptionsOrBuilder {
  // Use SemanticTokensOptions.newBuilder() to construct.
  private SemanticTokensOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SemanticTokensOptions() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SemanticTokensOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            protocol.WorkDoneProgressOptions.Builder subBuilder = null;
            if (workDoneProgressOptions_ != null) {
              subBuilder = workDoneProgressOptions_.toBuilder();
            }
            workDoneProgressOptions_ = input.readMessage(protocol.WorkDoneProgressOptions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(workDoneProgressOptions_);
              workDoneProgressOptions_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            protocol.rpc.SemanticTokensLegend.Builder subBuilder = null;
            if (legend_ != null) {
              subBuilder = legend_.toBuilder();
            }
            legend_ = input.readMessage(protocol.rpc.SemanticTokensLegend.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(legend_);
              legend_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            rangeCase_ = 3;
            range_ = input.readBool();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            rangeCase_ = 4;
            range_ = rawValue;
            break;
          }
          case 40: {
            fullCase_ = 5;
            full_ = input.readBool();
            break;
          }
          case 48: {
            fullCase_ = 6;
            full_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SemanticTokensOptions_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_SemanticTokensOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.SemanticTokensOptions.class, protocol.rpc.SemanticTokensOptions.Builder.class);
  }

  private int rangeCase_ = 0;
  private java.lang.Object range_;
  public enum RangeCase
      implements com.google.protobuf.Internal.EnumLite {
    ENABLE_RANGE(3),
    EMPTY(4),
    RANGE_NOT_SET(0);
    private final int value;
    private RangeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RangeCase valueOf(int value) {
      return forNumber(value);
    }

    public static RangeCase forNumber(int value) {
      switch (value) {
        case 3: return ENABLE_RANGE;
        case 4: return EMPTY;
        case 0: return RANGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RangeCase
  getRangeCase() {
    return RangeCase.forNumber(
        rangeCase_);
  }

  private int fullCase_ = 0;
  private java.lang.Object full_;
  public enum FullCase
      implements com.google.protobuf.Internal.EnumLite {
    ENABLE_FULL(5),
    DELTA(6),
    FULL_NOT_SET(0);
    private final int value;
    private FullCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FullCase valueOf(int value) {
      return forNumber(value);
    }

    public static FullCase forNumber(int value) {
      switch (value) {
        case 5: return ENABLE_FULL;
        case 6: return DELTA;
        case 0: return FULL_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public FullCase
  getFullCase() {
    return FullCase.forNumber(
        fullCase_);
  }

  public static final int WORK_DONE_PROGRESS_OPTIONS_FIELD_NUMBER = 1;
  private protocol.WorkDoneProgressOptions workDoneProgressOptions_;
  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
   */
  public boolean hasWorkDoneProgressOptions() {
    return workDoneProgressOptions_ != null;
  }
  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
   */
  public protocol.WorkDoneProgressOptions getWorkDoneProgressOptions() {
    return workDoneProgressOptions_ == null ? protocol.WorkDoneProgressOptions.getDefaultInstance() : workDoneProgressOptions_;
  }
  /**
   * <pre>
   * extends
   * </pre>
   *
   * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
   */
  public protocol.WorkDoneProgressOptionsOrBuilder getWorkDoneProgressOptionsOrBuilder() {
    return getWorkDoneProgressOptions();
  }

  public static final int LEGEND_FIELD_NUMBER = 2;
  private protocol.rpc.SemanticTokensLegend legend_;
  /**
   * <pre>
   * The legend used by the server
   * </pre>
   *
   * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public boolean hasLegend() {
    return legend_ != null;
  }
  /**
   * <pre>
   * The legend used by the server
   * </pre>
   *
   * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.rpc.SemanticTokensLegend getLegend() {
    return legend_ == null ? protocol.rpc.SemanticTokensLegend.getDefaultInstance() : legend_;
  }
  /**
   * <pre>
   * The legend used by the server
   * </pre>
   *
   * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  public protocol.rpc.SemanticTokensLegendOrBuilder getLegendOrBuilder() {
    return getLegend();
  }

  public static final int ENABLE_RANGE_FIELD_NUMBER = 3;
  /**
   * <code>bool enable_range = 3;</code>
   */
  public boolean getEnableRange() {
    if (rangeCase_ == 3) {
      return (java.lang.Boolean) range_;
    }
    return false;
  }

  public static final int EMPTY_FIELD_NUMBER = 4;
  /**
   * <code>.google.protobuf.NullValue empty = 4;</code>
   */
  public int getEmptyValue() {
    if (rangeCase_ == 4) {
      return (java.lang.Integer) range_;
    }
    return 0;
  }
  /**
   * <code>.google.protobuf.NullValue empty = 4;</code>
   */
  public com.google.protobuf.NullValue getEmpty() {
    if (rangeCase_ == 4) {
      com.google.protobuf.NullValue result = com.google.protobuf.NullValue.valueOf(
          (java.lang.Integer) range_);
      return result == null ? com.google.protobuf.NullValue.UNRECOGNIZED : result;
    }
    return com.google.protobuf.NullValue.NULL_VALUE;
  }

  public static final int ENABLE_FULL_FIELD_NUMBER = 5;
  /**
   * <code>bool enable_full = 5;</code>
   */
  public boolean getEnableFull() {
    if (fullCase_ == 5) {
      return (java.lang.Boolean) full_;
    }
    return false;
  }

  public static final int DELTA_FIELD_NUMBER = 6;
  /**
   * <code>bool delta = 6;</code>
   */
  public boolean getDelta() {
    if (fullCase_ == 6) {
      return (java.lang.Boolean) full_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (workDoneProgressOptions_ != null) {
      output.writeMessage(1, getWorkDoneProgressOptions());
    }
    if (legend_ != null) {
      output.writeMessage(2, getLegend());
    }
    if (rangeCase_ == 3) {
      output.writeBool(
          3, (boolean)((java.lang.Boolean) range_));
    }
    if (rangeCase_ == 4) {
      output.writeEnum(4, ((java.lang.Integer) range_));
    }
    if (fullCase_ == 5) {
      output.writeBool(
          5, (boolean)((java.lang.Boolean) full_));
    }
    if (fullCase_ == 6) {
      output.writeBool(
          6, (boolean)((java.lang.Boolean) full_));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (workDoneProgressOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getWorkDoneProgressOptions());
    }
    if (legend_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLegend());
    }
    if (rangeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            3, (boolean)((java.lang.Boolean) range_));
    }
    if (rangeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, ((java.lang.Integer) range_));
    }
    if (fullCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            5, (boolean)((java.lang.Boolean) full_));
    }
    if (fullCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            6, (boolean)((java.lang.Boolean) full_));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.SemanticTokensOptions)) {
      return super.equals(obj);
    }
    protocol.rpc.SemanticTokensOptions other = (protocol.rpc.SemanticTokensOptions) obj;

    boolean result = true;
    result = result && (hasWorkDoneProgressOptions() == other.hasWorkDoneProgressOptions());
    if (hasWorkDoneProgressOptions()) {
      result = result && getWorkDoneProgressOptions()
          .equals(other.getWorkDoneProgressOptions());
    }
    result = result && (hasLegend() == other.hasLegend());
    if (hasLegend()) {
      result = result && getLegend()
          .equals(other.getLegend());
    }
    result = result && getRangeCase().equals(
        other.getRangeCase());
    if (!result) return false;
    switch (rangeCase_) {
      case 3:
        result = result && (getEnableRange()
            == other.getEnableRange());
        break;
      case 4:
        result = result && getEmptyValue()
            == other.getEmptyValue();
        break;
      case 0:
      default:
    }
    result = result && getFullCase().equals(
        other.getFullCase());
    if (!result) return false;
    switch (fullCase_) {
      case 5:
        result = result && (getEnableFull()
            == other.getEnableFull());
        break;
      case 6:
        result = result && (getDelta()
            == other.getDelta());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasWorkDoneProgressOptions()) {
      hash = (37 * hash) + WORK_DONE_PROGRESS_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getWorkDoneProgressOptions().hashCode();
    }
    if (hasLegend()) {
      hash = (37 * hash) + LEGEND_FIELD_NUMBER;
      hash = (53 * hash) + getLegend().hashCode();
    }
    switch (rangeCase_) {
      case 3:
        hash = (37 * hash) + ENABLE_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnableRange());
        break;
      case 4:
        hash = (37 * hash) + EMPTY_FIELD_NUMBER;
        hash = (53 * hash) + getEmptyValue();
        break;
      case 0:
      default:
    }
    switch (fullCase_) {
      case 5:
        hash = (37 * hash) + ENABLE_FULL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnableFull());
        break;
      case 6:
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDelta());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.SemanticTokensOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SemanticTokensOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.SemanticTokensOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.SemanticTokensOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.SemanticTokensOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SemanticTokensOptions represents a server capabilities option of semanticTokensProvider.
   * &#64;since 3.16.0
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.SemanticTokensOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.SemanticTokensOptions)
      protocol.rpc.SemanticTokensOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SemanticTokensOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SemanticTokensOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.SemanticTokensOptions.class, protocol.rpc.SemanticTokensOptions.Builder.class);
    }

    // Construct using protocol.rpc.SemanticTokensOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (workDoneProgressOptionsBuilder_ == null) {
        workDoneProgressOptions_ = null;
      } else {
        workDoneProgressOptions_ = null;
        workDoneProgressOptionsBuilder_ = null;
      }
      if (legendBuilder_ == null) {
        legend_ = null;
      } else {
        legend_ = null;
        legendBuilder_ = null;
      }
      rangeCase_ = 0;
      range_ = null;
      fullCase_ = 0;
      full_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_SemanticTokensOptions_descriptor;
    }

    public protocol.rpc.SemanticTokensOptions getDefaultInstanceForType() {
      return protocol.rpc.SemanticTokensOptions.getDefaultInstance();
    }

    public protocol.rpc.SemanticTokensOptions build() {
      protocol.rpc.SemanticTokensOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.SemanticTokensOptions buildPartial() {
      protocol.rpc.SemanticTokensOptions result = new protocol.rpc.SemanticTokensOptions(this);
      if (workDoneProgressOptionsBuilder_ == null) {
        result.workDoneProgressOptions_ = workDoneProgressOptions_;
      } else {
        result.workDoneProgressOptions_ = workDoneProgressOptionsBuilder_.build();
      }
      if (legendBuilder_ == null) {
        result.legend_ = legend_;
      } else {
        result.legend_ = legendBuilder_.build();
      }
      if (rangeCase_ == 3) {
        result.range_ = range_;
      }
      if (rangeCase_ == 4) {
        result.range_ = range_;
      }
      if (fullCase_ == 5) {
        result.full_ = full_;
      }
      if (fullCase_ == 6) {
        result.full_ = full_;
      }
      result.rangeCase_ = rangeCase_;
      result.fullCase_ = fullCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.SemanticTokensOptions) {
        return mergeFrom((protocol.rpc.SemanticTokensOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.SemanticTokensOptions other) {
      if (other == protocol.rpc.SemanticTokensOptions.getDefaultInstance()) return this;
      if (other.hasWorkDoneProgressOptions()) {
        mergeWorkDoneProgressOptions(other.getWorkDoneProgressOptions());
      }
      if (other.hasLegend()) {
        mergeLegend(other.getLegend());
      }
      switch (other.getRangeCase()) {
        case ENABLE_RANGE: {
          setEnableRange(other.getEnableRange());
          break;
        }
        case EMPTY: {
          setEmptyValue(other.getEmptyValue());
          break;
        }
        case RANGE_NOT_SET: {
          break;
        }
      }
      switch (other.getFullCase()) {
        case ENABLE_FULL: {
          setEnableFull(other.getEnableFull());
          break;
        }
        case DELTA: {
          setDelta(other.getDelta());
          break;
        }
        case FULL_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.SemanticTokensOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.SemanticTokensOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int rangeCase_ = 0;
    private java.lang.Object range_;
    public RangeCase
        getRangeCase() {
      return RangeCase.forNumber(
          rangeCase_);
    }

    public Builder clearRange() {
      rangeCase_ = 0;
      range_ = null;
      onChanged();
      return this;
    }

    private int fullCase_ = 0;
    private java.lang.Object full_;
    public FullCase
        getFullCase() {
      return FullCase.forNumber(
          fullCase_);
    }

    public Builder clearFull() {
      fullCase_ = 0;
      full_ = null;
      onChanged();
      return this;
    }


    private protocol.WorkDoneProgressOptions workDoneProgressOptions_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.WorkDoneProgressOptions, protocol.WorkDoneProgressOptions.Builder, protocol.WorkDoneProgressOptionsOrBuilder> workDoneProgressOptionsBuilder_;
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public boolean hasWorkDoneProgressOptions() {
      return workDoneProgressOptionsBuilder_ != null || workDoneProgressOptions_ != null;
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public protocol.WorkDoneProgressOptions getWorkDoneProgressOptions() {
      if (workDoneProgressOptionsBuilder_ == null) {
        return workDoneProgressOptions_ == null ? protocol.WorkDoneProgressOptions.getDefaultInstance() : workDoneProgressOptions_;
      } else {
        return workDoneProgressOptionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public Builder setWorkDoneProgressOptions(protocol.WorkDoneProgressOptions value) {
      if (workDoneProgressOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        workDoneProgressOptions_ = value;
        onChanged();
      } else {
        workDoneProgressOptionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public Builder setWorkDoneProgressOptions(
        protocol.WorkDoneProgressOptions.Builder builderForValue) {
      if (workDoneProgressOptionsBuilder_ == null) {
        workDoneProgressOptions_ = builderForValue.build();
        onChanged();
      } else {
        workDoneProgressOptionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public Builder mergeWorkDoneProgressOptions(protocol.WorkDoneProgressOptions value) {
      if (workDoneProgressOptionsBuilder_ == null) {
        if (workDoneProgressOptions_ != null) {
          workDoneProgressOptions_ =
            protocol.WorkDoneProgressOptions.newBuilder(workDoneProgressOptions_).mergeFrom(value).buildPartial();
        } else {
          workDoneProgressOptions_ = value;
        }
        onChanged();
      } else {
        workDoneProgressOptionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public Builder clearWorkDoneProgressOptions() {
      if (workDoneProgressOptionsBuilder_ == null) {
        workDoneProgressOptions_ = null;
        onChanged();
      } else {
        workDoneProgressOptions_ = null;
        workDoneProgressOptionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public protocol.WorkDoneProgressOptions.Builder getWorkDoneProgressOptionsBuilder() {
      
      onChanged();
      return getWorkDoneProgressOptionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    public protocol.WorkDoneProgressOptionsOrBuilder getWorkDoneProgressOptionsOrBuilder() {
      if (workDoneProgressOptionsBuilder_ != null) {
        return workDoneProgressOptionsBuilder_.getMessageOrBuilder();
      } else {
        return workDoneProgressOptions_ == null ?
            protocol.WorkDoneProgressOptions.getDefaultInstance() : workDoneProgressOptions_;
      }
    }
    /**
     * <pre>
     * extends
     * </pre>
     *
     * <code>.protocol.WorkDoneProgressOptions work_done_progress_options = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.WorkDoneProgressOptions, protocol.WorkDoneProgressOptions.Builder, protocol.WorkDoneProgressOptionsOrBuilder> 
        getWorkDoneProgressOptionsFieldBuilder() {
      if (workDoneProgressOptionsBuilder_ == null) {
        workDoneProgressOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.WorkDoneProgressOptions, protocol.WorkDoneProgressOptions.Builder, protocol.WorkDoneProgressOptionsOrBuilder>(
                getWorkDoneProgressOptions(),
                getParentForChildren(),
                isClean());
        workDoneProgressOptions_ = null;
      }
      return workDoneProgressOptionsBuilder_;
    }

    private protocol.rpc.SemanticTokensLegend legend_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SemanticTokensLegend, protocol.rpc.SemanticTokensLegend.Builder, protocol.rpc.SemanticTokensLegendOrBuilder> legendBuilder_;
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public boolean hasLegend() {
      return legendBuilder_ != null || legend_ != null;
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.rpc.SemanticTokensLegend getLegend() {
      if (legendBuilder_ == null) {
        return legend_ == null ? protocol.rpc.SemanticTokensLegend.getDefaultInstance() : legend_;
      } else {
        return legendBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setLegend(protocol.rpc.SemanticTokensLegend value) {
      if (legendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        legend_ = value;
        onChanged();
      } else {
        legendBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setLegend(
        protocol.rpc.SemanticTokensLegend.Builder builderForValue) {
      if (legendBuilder_ == null) {
        legend_ = builderForValue.build();
        onChanged();
      } else {
        legendBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeLegend(protocol.rpc.SemanticTokensLegend value) {
      if (legendBuilder_ == null) {
        if (legend_ != null) {
          legend_ =
            protocol.rpc.SemanticTokensLegend.newBuilder(legend_).mergeFrom(value).buildPartial();
        } else {
          legend_ = value;
        }
        onChanged();
      } else {
        legendBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearLegend() {
      if (legendBuilder_ == null) {
        legend_ = null;
        onChanged();
      } else {
        legend_ = null;
        legendBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.rpc.SemanticTokensLegend.Builder getLegendBuilder() {
      
      onChanged();
      return getLegendFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public protocol.rpc.SemanticTokensLegendOrBuilder getLegendOrBuilder() {
      if (legendBuilder_ != null) {
        return legendBuilder_.getMessageOrBuilder();
      } else {
        return legend_ == null ?
            protocol.rpc.SemanticTokensLegend.getDefaultInstance() : legend_;
      }
    }
    /**
     * <pre>
     * The legend used by the server
     * </pre>
     *
     * <code>.protocol.rpc.SemanticTokensLegend legend = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SemanticTokensLegend, protocol.rpc.SemanticTokensLegend.Builder, protocol.rpc.SemanticTokensLegendOrBuilder> 
        getLegendFieldBuilder() {
      if (legendBuilder_ == null) {
        legendBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.SemanticTokensLegend, protocol.rpc.SemanticTokensLegend.Builder, protocol.rpc.SemanticTokensLegendOrBuilder>(
                getLegend(),
                getParentForChildren(),
                isClean());
        legend_ = null;
      }
      return legendBuilder_;
    }

    /**
     * <code>bool enable_range = 3;</code>
     */
    public boolean getEnableRange() {
      if (rangeCase_ == 3) {
        return (java.lang.Boolean) range_;
      }
      return false;
    }
    /**
     * <code>bool enable_range = 3;</code>
     */
    public Builder setEnableRange(boolean value) {
      rangeCase_ = 3;
      range_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_range = 3;</code>
     */
    public Builder clearEnableRange() {
      if (rangeCase_ == 3) {
        rangeCase_ = 0;
        range_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>.google.protobuf.NullValue empty = 4;</code>
     */
    public int getEmptyValue() {
      if (rangeCase_ == 4) {
        return ((java.lang.Integer) range_).intValue();
      }
      return 0;
    }
    /**
     * <code>.google.protobuf.NullValue empty = 4;</code>
     */
    public Builder setEmptyValue(int value) {
      rangeCase_ = 4;
      range_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.NullValue empty = 4;</code>
     */
    public com.google.protobuf.NullValue getEmpty() {
      if (rangeCase_ == 4) {
        com.google.protobuf.NullValue result = com.google.protobuf.NullValue.valueOf(
            (java.lang.Integer) range_);
        return result == null ? com.google.protobuf.NullValue.UNRECOGNIZED : result;
      }
      return com.google.protobuf.NullValue.NULL_VALUE;
    }
    /**
     * <code>.google.protobuf.NullValue empty = 4;</code>
     */
    public Builder setEmpty(com.google.protobuf.NullValue value) {
      if (value == null) {
        throw new NullPointerException();
      }
      rangeCase_ = 4;
      range_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.NullValue empty = 4;</code>
     */
    public Builder clearEmpty() {
      if (rangeCase_ == 4) {
        rangeCase_ = 0;
        range_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bool enable_full = 5;</code>
     */
    public boolean getEnableFull() {
      if (fullCase_ == 5) {
        return (java.lang.Boolean) full_;
      }
      return false;
    }
    /**
     * <code>bool enable_full = 5;</code>
     */
    public Builder setEnableFull(boolean value) {
      fullCase_ = 5;
      full_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_full = 5;</code>
     */
    public Builder clearEnableFull() {
      if (fullCase_ == 5) {
        fullCase_ = 0;
        full_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bool delta = 6;</code>
     */
    public boolean getDelta() {
      if (fullCase_ == 6) {
        return (java.lang.Boolean) full_;
      }
      return false;
    }
    /**
     * <code>bool delta = 6;</code>
     */
    public Builder setDelta(boolean value) {
      fullCase_ = 6;
      full_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool delta = 6;</code>
     */
    public Builder clearDelta() {
      if (fullCase_ == 6) {
        fullCase_ = 0;
        full_ = null;
        onChanged();
      }
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.SemanticTokensOptions)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.SemanticTokensOptions)
  private static final protocol.rpc.SemanticTokensOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.SemanticTokensOptions();
  }

  public static protocol.rpc.SemanticTokensOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SemanticTokensOptions>
      PARSER = new com.google.protobuf.AbstractParser<SemanticTokensOptions>() {
    public SemanticTokensOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SemanticTokensOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SemanticTokensOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SemanticTokensOptions> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.SemanticTokensOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

