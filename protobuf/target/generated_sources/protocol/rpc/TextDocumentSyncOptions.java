// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * TextDocumentSyncOptions represents a server capabilities option of textDocumentSync.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.TextDocumentSyncOptions}
 */
public  final class TextDocumentSyncOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.TextDocumentSyncOptions)
    TextDocumentSyncOptionsOrBuilder {
  // Use TextDocumentSyncOptions.newBuilder() to construct.
  private TextDocumentSyncOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TextDocumentSyncOptions() {
    openClose_ = false;
    change_ = 0;
    willSave_ = false;
    willSaveWaitUntil_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TextDocumentSyncOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            openClose_ = input.readBool();
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            change_ = rawValue;
            break;
          }
          case 24: {

            willSave_ = input.readBool();
            break;
          }
          case 32: {

            willSaveWaitUntil_ = input.readBool();
            break;
          }
          case 40: {
            saveCase_ = 5;
            save_ = input.readBool();
            break;
          }
          case 50: {
            protocol.rpc.SaveOptions.Builder subBuilder = null;
            if (saveCase_ == 6) {
              subBuilder = ((protocol.rpc.SaveOptions) save_).toBuilder();
            }
            save_ =
                input.readMessage(protocol.rpc.SaveOptions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.SaveOptions) save_);
              save_ = subBuilder.buildPartial();
            }
            saveCase_ = 6;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_TextDocumentSyncOptions_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_TextDocumentSyncOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.TextDocumentSyncOptions.class, protocol.rpc.TextDocumentSyncOptions.Builder.class);
  }

  private int saveCase_ = 0;
  private java.lang.Object save_;
  public enum SaveCase
      implements com.google.protobuf.Internal.EnumLite {
    ENABLE(5),
    SAVE_OPTIONS(6),
    SAVE_NOT_SET(0);
    private final int value;
    private SaveCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SaveCase valueOf(int value) {
      return forNumber(value);
    }

    public static SaveCase forNumber(int value) {
      switch (value) {
        case 5: return ENABLE;
        case 6: return SAVE_OPTIONS;
        case 0: return SAVE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SaveCase
  getSaveCase() {
    return SaveCase.forNumber(
        saveCase_);
  }

  public static final int OPEN_CLOSE_FIELD_NUMBER = 1;
  private boolean openClose_;
  /**
   * <pre>
   * Optional. Open and close notifications are sent to the server. If omitted open close
   * notification should not be sent.
   * </pre>
   *
   * <code>bool open_close = 1;</code>
   */
  public boolean getOpenClose() {
    return openClose_;
  }

  public static final int CHANGE_FIELD_NUMBER = 2;
  private int change_;
  /**
   * <pre>
   * Optional. Change notifications are sent to the server. See
   * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
   * TextDocumentSyncKind.None.
   * </pre>
   *
   * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
   */
  public int getChangeValue() {
    return change_;
  }
  /**
   * <pre>
   * Optional. Change notifications are sent to the server. See
   * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
   * TextDocumentSyncKind.None.
   * </pre>
   *
   * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
   */
  public protocol.rpc.TextDocumentSyncKind getChange() {
    protocol.rpc.TextDocumentSyncKind result = protocol.rpc.TextDocumentSyncKind.valueOf(change_);
    return result == null ? protocol.rpc.TextDocumentSyncKind.UNRECOGNIZED : result;
  }

  public static final int WILL_SAVE_FIELD_NUMBER = 3;
  private boolean willSave_;
  /**
   * <pre>
   * Optional. If present will save notifications are sent to the server. If omitted the
   * notification should not be sent.
   * </pre>
   *
   * <code>bool will_save = 3;</code>
   */
  public boolean getWillSave() {
    return willSave_;
  }

  public static final int WILL_SAVE_WAIT_UNTIL_FIELD_NUMBER = 4;
  private boolean willSaveWaitUntil_;
  /**
   * <pre>
   * Optional. If present will save wait until requests are sent to the server. If omitted the
   * request should not be sent.
   * </pre>
   *
   * <code>bool will_save_wait_until = 4;</code>
   */
  public boolean getWillSaveWaitUntil() {
    return willSaveWaitUntil_;
  }

  public static final int ENABLE_FIELD_NUMBER = 5;
  /**
   * <code>bool enable = 5;</code>
   */
  public boolean getEnable() {
    if (saveCase_ == 5) {
      return (java.lang.Boolean) save_;
    }
    return false;
  }

  public static final int SAVE_OPTIONS_FIELD_NUMBER = 6;
  /**
   * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
   */
  public protocol.rpc.SaveOptions getSaveOptions() {
    if (saveCase_ == 6) {
       return (protocol.rpc.SaveOptions) save_;
    }
    return protocol.rpc.SaveOptions.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
   */
  public protocol.rpc.SaveOptionsOrBuilder getSaveOptionsOrBuilder() {
    if (saveCase_ == 6) {
       return (protocol.rpc.SaveOptions) save_;
    }
    return protocol.rpc.SaveOptions.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (openClose_ != false) {
      output.writeBool(1, openClose_);
    }
    if (change_ != protocol.rpc.TextDocumentSyncKind.NONE.getNumber()) {
      output.writeEnum(2, change_);
    }
    if (willSave_ != false) {
      output.writeBool(3, willSave_);
    }
    if (willSaveWaitUntil_ != false) {
      output.writeBool(4, willSaveWaitUntil_);
    }
    if (saveCase_ == 5) {
      output.writeBool(
          5, (boolean)((java.lang.Boolean) save_));
    }
    if (saveCase_ == 6) {
      output.writeMessage(6, (protocol.rpc.SaveOptions) save_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (openClose_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, openClose_);
    }
    if (change_ != protocol.rpc.TextDocumentSyncKind.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, change_);
    }
    if (willSave_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, willSave_);
    }
    if (willSaveWaitUntil_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, willSaveWaitUntil_);
    }
    if (saveCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            5, (boolean)((java.lang.Boolean) save_));
    }
    if (saveCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (protocol.rpc.SaveOptions) save_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.TextDocumentSyncOptions)) {
      return super.equals(obj);
    }
    protocol.rpc.TextDocumentSyncOptions other = (protocol.rpc.TextDocumentSyncOptions) obj;

    boolean result = true;
    result = result && (getOpenClose()
        == other.getOpenClose());
    result = result && change_ == other.change_;
    result = result && (getWillSave()
        == other.getWillSave());
    result = result && (getWillSaveWaitUntil()
        == other.getWillSaveWaitUntil());
    result = result && getSaveCase().equals(
        other.getSaveCase());
    if (!result) return false;
    switch (saveCase_) {
      case 5:
        result = result && (getEnable()
            == other.getEnable());
        break;
      case 6:
        result = result && getSaveOptions()
            .equals(other.getSaveOptions());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPEN_CLOSE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOpenClose());
    hash = (37 * hash) + CHANGE_FIELD_NUMBER;
    hash = (53 * hash) + change_;
    hash = (37 * hash) + WILL_SAVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWillSave());
    hash = (37 * hash) + WILL_SAVE_WAIT_UNTIL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWillSaveWaitUntil());
    switch (saveCase_) {
      case 5:
        hash = (37 * hash) + ENABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnable());
        break;
      case 6:
        hash = (37 * hash) + SAVE_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSaveOptions().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.TextDocumentSyncOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.TextDocumentSyncOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * TextDocumentSyncOptions represents a server capabilities option of textDocumentSync.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.TextDocumentSyncOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.TextDocumentSyncOptions)
      protocol.rpc.TextDocumentSyncOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_TextDocumentSyncOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_TextDocumentSyncOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.TextDocumentSyncOptions.class, protocol.rpc.TextDocumentSyncOptions.Builder.class);
    }

    // Construct using protocol.rpc.TextDocumentSyncOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      openClose_ = false;

      change_ = 0;

      willSave_ = false;

      willSaveWaitUntil_ = false;

      saveCase_ = 0;
      save_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_TextDocumentSyncOptions_descriptor;
    }

    public protocol.rpc.TextDocumentSyncOptions getDefaultInstanceForType() {
      return protocol.rpc.TextDocumentSyncOptions.getDefaultInstance();
    }

    public protocol.rpc.TextDocumentSyncOptions build() {
      protocol.rpc.TextDocumentSyncOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.TextDocumentSyncOptions buildPartial() {
      protocol.rpc.TextDocumentSyncOptions result = new protocol.rpc.TextDocumentSyncOptions(this);
      result.openClose_ = openClose_;
      result.change_ = change_;
      result.willSave_ = willSave_;
      result.willSaveWaitUntil_ = willSaveWaitUntil_;
      if (saveCase_ == 5) {
        result.save_ = save_;
      }
      if (saveCase_ == 6) {
        if (saveOptionsBuilder_ == null) {
          result.save_ = save_;
        } else {
          result.save_ = saveOptionsBuilder_.build();
        }
      }
      result.saveCase_ = saveCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.TextDocumentSyncOptions) {
        return mergeFrom((protocol.rpc.TextDocumentSyncOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.TextDocumentSyncOptions other) {
      if (other == protocol.rpc.TextDocumentSyncOptions.getDefaultInstance()) return this;
      if (other.getOpenClose() != false) {
        setOpenClose(other.getOpenClose());
      }
      if (other.change_ != 0) {
        setChangeValue(other.getChangeValue());
      }
      if (other.getWillSave() != false) {
        setWillSave(other.getWillSave());
      }
      if (other.getWillSaveWaitUntil() != false) {
        setWillSaveWaitUntil(other.getWillSaveWaitUntil());
      }
      switch (other.getSaveCase()) {
        case ENABLE: {
          setEnable(other.getEnable());
          break;
        }
        case SAVE_OPTIONS: {
          mergeSaveOptions(other.getSaveOptions());
          break;
        }
        case SAVE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.TextDocumentSyncOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.TextDocumentSyncOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int saveCase_ = 0;
    private java.lang.Object save_;
    public SaveCase
        getSaveCase() {
      return SaveCase.forNumber(
          saveCase_);
    }

    public Builder clearSave() {
      saveCase_ = 0;
      save_ = null;
      onChanged();
      return this;
    }


    private boolean openClose_ ;
    /**
     * <pre>
     * Optional. Open and close notifications are sent to the server. If omitted open close
     * notification should not be sent.
     * </pre>
     *
     * <code>bool open_close = 1;</code>
     */
    public boolean getOpenClose() {
      return openClose_;
    }
    /**
     * <pre>
     * Optional. Open and close notifications are sent to the server. If omitted open close
     * notification should not be sent.
     * </pre>
     *
     * <code>bool open_close = 1;</code>
     */
    public Builder setOpenClose(boolean value) {
      
      openClose_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Open and close notifications are sent to the server. If omitted open close
     * notification should not be sent.
     * </pre>
     *
     * <code>bool open_close = 1;</code>
     */
    public Builder clearOpenClose() {
      
      openClose_ = false;
      onChanged();
      return this;
    }

    private int change_ = 0;
    /**
     * <pre>
     * Optional. Change notifications are sent to the server. See
     * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
     * TextDocumentSyncKind.None.
     * </pre>
     *
     * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
     */
    public int getChangeValue() {
      return change_;
    }
    /**
     * <pre>
     * Optional. Change notifications are sent to the server. See
     * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
     * TextDocumentSyncKind.None.
     * </pre>
     *
     * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
     */
    public Builder setChangeValue(int value) {
      change_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Change notifications are sent to the server. See
     * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
     * TextDocumentSyncKind.None.
     * </pre>
     *
     * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
     */
    public protocol.rpc.TextDocumentSyncKind getChange() {
      protocol.rpc.TextDocumentSyncKind result = protocol.rpc.TextDocumentSyncKind.valueOf(change_);
      return result == null ? protocol.rpc.TextDocumentSyncKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional. Change notifications are sent to the server. See
     * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
     * TextDocumentSyncKind.None.
     * </pre>
     *
     * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
     */
    public Builder setChange(protocol.rpc.TextDocumentSyncKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      change_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. Change notifications are sent to the server. See
     * [TextDocumentSyncKind][TextDocumentSyncKind]. If omitted it defaults to
     * TextDocumentSyncKind.None.
     * </pre>
     *
     * <code>.protocol.rpc.TextDocumentSyncKind change = 2;</code>
     */
    public Builder clearChange() {
      
      change_ = 0;
      onChanged();
      return this;
    }

    private boolean willSave_ ;
    /**
     * <pre>
     * Optional. If present will save notifications are sent to the server. If omitted the
     * notification should not be sent.
     * </pre>
     *
     * <code>bool will_save = 3;</code>
     */
    public boolean getWillSave() {
      return willSave_;
    }
    /**
     * <pre>
     * Optional. If present will save notifications are sent to the server. If omitted the
     * notification should not be sent.
     * </pre>
     *
     * <code>bool will_save = 3;</code>
     */
    public Builder setWillSave(boolean value) {
      
      willSave_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. If present will save notifications are sent to the server. If omitted the
     * notification should not be sent.
     * </pre>
     *
     * <code>bool will_save = 3;</code>
     */
    public Builder clearWillSave() {
      
      willSave_ = false;
      onChanged();
      return this;
    }

    private boolean willSaveWaitUntil_ ;
    /**
     * <pre>
     * Optional. If present will save wait until requests are sent to the server. If omitted the
     * request should not be sent.
     * </pre>
     *
     * <code>bool will_save_wait_until = 4;</code>
     */
    public boolean getWillSaveWaitUntil() {
      return willSaveWaitUntil_;
    }
    /**
     * <pre>
     * Optional. If present will save wait until requests are sent to the server. If omitted the
     * request should not be sent.
     * </pre>
     *
     * <code>bool will_save_wait_until = 4;</code>
     */
    public Builder setWillSaveWaitUntil(boolean value) {
      
      willSaveWaitUntil_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. If present will save wait until requests are sent to the server. If omitted the
     * request should not be sent.
     * </pre>
     *
     * <code>bool will_save_wait_until = 4;</code>
     */
    public Builder clearWillSaveWaitUntil() {
      
      willSaveWaitUntil_ = false;
      onChanged();
      return this;
    }

    /**
     * <code>bool enable = 5;</code>
     */
    public boolean getEnable() {
      if (saveCase_ == 5) {
        return (java.lang.Boolean) save_;
      }
      return false;
    }
    /**
     * <code>bool enable = 5;</code>
     */
    public Builder setEnable(boolean value) {
      saveCase_ = 5;
      save_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable = 5;</code>
     */
    public Builder clearEnable() {
      if (saveCase_ == 5) {
        saveCase_ = 0;
        save_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SaveOptions, protocol.rpc.SaveOptions.Builder, protocol.rpc.SaveOptionsOrBuilder> saveOptionsBuilder_;
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public protocol.rpc.SaveOptions getSaveOptions() {
      if (saveOptionsBuilder_ == null) {
        if (saveCase_ == 6) {
          return (protocol.rpc.SaveOptions) save_;
        }
        return protocol.rpc.SaveOptions.getDefaultInstance();
      } else {
        if (saveCase_ == 6) {
          return saveOptionsBuilder_.getMessage();
        }
        return protocol.rpc.SaveOptions.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public Builder setSaveOptions(protocol.rpc.SaveOptions value) {
      if (saveOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        save_ = value;
        onChanged();
      } else {
        saveOptionsBuilder_.setMessage(value);
      }
      saveCase_ = 6;
      return this;
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public Builder setSaveOptions(
        protocol.rpc.SaveOptions.Builder builderForValue) {
      if (saveOptionsBuilder_ == null) {
        save_ = builderForValue.build();
        onChanged();
      } else {
        saveOptionsBuilder_.setMessage(builderForValue.build());
      }
      saveCase_ = 6;
      return this;
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public Builder mergeSaveOptions(protocol.rpc.SaveOptions value) {
      if (saveOptionsBuilder_ == null) {
        if (saveCase_ == 6 &&
            save_ != protocol.rpc.SaveOptions.getDefaultInstance()) {
          save_ = protocol.rpc.SaveOptions.newBuilder((protocol.rpc.SaveOptions) save_)
              .mergeFrom(value).buildPartial();
        } else {
          save_ = value;
        }
        onChanged();
      } else {
        if (saveCase_ == 6) {
          saveOptionsBuilder_.mergeFrom(value);
        }
        saveOptionsBuilder_.setMessage(value);
      }
      saveCase_ = 6;
      return this;
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public Builder clearSaveOptions() {
      if (saveOptionsBuilder_ == null) {
        if (saveCase_ == 6) {
          saveCase_ = 0;
          save_ = null;
          onChanged();
        }
      } else {
        if (saveCase_ == 6) {
          saveCase_ = 0;
          save_ = null;
        }
        saveOptionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public protocol.rpc.SaveOptions.Builder getSaveOptionsBuilder() {
      return getSaveOptionsFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    public protocol.rpc.SaveOptionsOrBuilder getSaveOptionsOrBuilder() {
      if ((saveCase_ == 6) && (saveOptionsBuilder_ != null)) {
        return saveOptionsBuilder_.getMessageOrBuilder();
      } else {
        if (saveCase_ == 6) {
          return (protocol.rpc.SaveOptions) save_;
        }
        return protocol.rpc.SaveOptions.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.SaveOptions save_options = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.SaveOptions, protocol.rpc.SaveOptions.Builder, protocol.rpc.SaveOptionsOrBuilder> 
        getSaveOptionsFieldBuilder() {
      if (saveOptionsBuilder_ == null) {
        if (!(saveCase_ == 6)) {
          save_ = protocol.rpc.SaveOptions.getDefaultInstance();
        }
        saveOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.SaveOptions, protocol.rpc.SaveOptions.Builder, protocol.rpc.SaveOptionsOrBuilder>(
                (protocol.rpc.SaveOptions) save_,
                getParentForChildren(),
                isClean());
        save_ = null;
      }
      saveCase_ = 6;
      onChanged();;
      return saveOptionsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.TextDocumentSyncOptions)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.TextDocumentSyncOptions)
  private static final protocol.rpc.TextDocumentSyncOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.TextDocumentSyncOptions();
  }

  public static protocol.rpc.TextDocumentSyncOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TextDocumentSyncOptions>
      PARSER = new com.google.protobuf.AbstractParser<TextDocumentSyncOptions>() {
    public TextDocumentSyncOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new TextDocumentSyncOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TextDocumentSyncOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TextDocumentSyncOptions> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.TextDocumentSyncOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

