// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

/**
 * <pre>
 * MarkedString can be used to render human readable text. It is either a markdown string
 * or a code-block that provides a language and a code snippet. The language identifier
 * is semantically equal to the optional language identifier in fenced code blocks in GitHub
 * issues. See
 * https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting
 * The pair of a language and a value is an equivalent to markdown:
 * ```${language}
 * ${value}
 * ```
 * Note that markdown strings will be sanitized - that means html will be escaped.
 * Deprecated: use MarkupContent instead.
 * </pre>
 *
 * Protobuf type {@code protocol.rpc.MarkedString}
 */
public  final class MarkedString extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.rpc.MarkedString)
    MarkedStringOrBuilder {
  // Use MarkedString.newBuilder() to construct.
  private MarkedString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MarkedString() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private MarkedString(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            markedStringCase_ = 1;
            markedString_ = s;
            break;
          }
          case 18: {
            protocol.rpc.MarkedString.CodeBlock.Builder subBuilder = null;
            if (markedStringCase_ == 2) {
              subBuilder = ((protocol.rpc.MarkedString.CodeBlock) markedString_).toBuilder();
            }
            markedString_ =
                input.readMessage(protocol.rpc.MarkedString.CodeBlock.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((protocol.rpc.MarkedString.CodeBlock) markedString_);
              markedString_ = subBuilder.buildPartial();
            }
            markedStringCase_ = 2;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protocol.rpc.MarkedString.class, protocol.rpc.MarkedString.Builder.class);
  }

  public interface CodeBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.rpc.MarkedString.CodeBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>string language = 1;</code>
     */
    java.lang.String getLanguage();
    /**
     * <pre>
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>string language = 1;</code>
     */
    com.google.protobuf.ByteString
        getLanguageBytes();

    /**
     * <code>string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code protocol.rpc.MarkedString.CodeBlock}
   */
  public  static final class CodeBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.rpc.MarkedString.CodeBlock)
      CodeBlockOrBuilder {
    // Use CodeBlock.newBuilder() to construct.
    private CodeBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CodeBlock() {
      language_ = "";
      value_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CodeBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              language_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_CodeBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_CodeBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.MarkedString.CodeBlock.class, protocol.rpc.MarkedString.CodeBlock.Builder.class);
    }

    public static final int LANGUAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object language_;
    /**
     * <pre>
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>string language = 1;</code>
     */
    public java.lang.String getLanguage() {
      java.lang.Object ref = language_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        language_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (-- api-linter: core::0143::standardized-codes=disabled --)
     * </pre>
     *
     * <code>string language = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLanguageBytes() {
      java.lang.Object ref = language_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        language_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLanguageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, language_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLanguageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, language_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.rpc.MarkedString.CodeBlock)) {
        return super.equals(obj);
      }
      protocol.rpc.MarkedString.CodeBlock other = (protocol.rpc.MarkedString.CodeBlock) obj;

      boolean result = true;
      result = result && getLanguage()
          .equals(other.getLanguage());
      result = result && getValue()
          .equals(other.getValue());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguage().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.rpc.MarkedString.CodeBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.rpc.MarkedString.CodeBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.rpc.MarkedString.CodeBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.rpc.MarkedString.CodeBlock)
        protocol.rpc.MarkedString.CodeBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_CodeBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_CodeBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.rpc.MarkedString.CodeBlock.class, protocol.rpc.MarkedString.CodeBlock.Builder.class);
      }

      // Construct using protocol.rpc.MarkedString.CodeBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        language_ = "";

        value_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_CodeBlock_descriptor;
      }

      public protocol.rpc.MarkedString.CodeBlock getDefaultInstanceForType() {
        return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
      }

      public protocol.rpc.MarkedString.CodeBlock build() {
        protocol.rpc.MarkedString.CodeBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.rpc.MarkedString.CodeBlock buildPartial() {
        protocol.rpc.MarkedString.CodeBlock result = new protocol.rpc.MarkedString.CodeBlock(this);
        result.language_ = language_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.rpc.MarkedString.CodeBlock) {
          return mergeFrom((protocol.rpc.MarkedString.CodeBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.rpc.MarkedString.CodeBlock other) {
        if (other == protocol.rpc.MarkedString.CodeBlock.getDefaultInstance()) return this;
        if (!other.getLanguage().isEmpty()) {
          language_ = other.language_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.rpc.MarkedString.CodeBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.rpc.MarkedString.CodeBlock) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object language_ = "";
      /**
       * <pre>
       * (-- api-linter: core::0143::standardized-codes=disabled --)
       * </pre>
       *
       * <code>string language = 1;</code>
       */
      public java.lang.String getLanguage() {
        java.lang.Object ref = language_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          language_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (-- api-linter: core::0143::standardized-codes=disabled --)
       * </pre>
       *
       * <code>string language = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLanguageBytes() {
        java.lang.Object ref = language_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          language_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (-- api-linter: core::0143::standardized-codes=disabled --)
       * </pre>
       *
       * <code>string language = 1;</code>
       */
      public Builder setLanguage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        language_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (-- api-linter: core::0143::standardized-codes=disabled --)
       * </pre>
       *
       * <code>string language = 1;</code>
       */
      public Builder clearLanguage() {
        
        language_ = getDefaultInstance().getLanguage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (-- api-linter: core::0143::standardized-codes=disabled --)
       * </pre>
       *
       * <code>string language = 1;</code>
       */
      public Builder setLanguageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        language_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protocol.rpc.MarkedString.CodeBlock)
    }

    // @@protoc_insertion_point(class_scope:protocol.rpc.MarkedString.CodeBlock)
    private static final protocol.rpc.MarkedString.CodeBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.rpc.MarkedString.CodeBlock();
    }

    public static protocol.rpc.MarkedString.CodeBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CodeBlock>
        PARSER = new com.google.protobuf.AbstractParser<CodeBlock>() {
      public CodeBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CodeBlock(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CodeBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CodeBlock> getParserForType() {
      return PARSER;
    }

    public protocol.rpc.MarkedString.CodeBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int markedStringCase_ = 0;
  private java.lang.Object markedString_;
  public enum MarkedStringCase
      implements com.google.protobuf.Internal.EnumLite {
    TEXT(1),
    CODE_BLOCK(2),
    MARKEDSTRING_NOT_SET(0);
    private final int value;
    private MarkedStringCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MarkedStringCase valueOf(int value) {
      return forNumber(value);
    }

    public static MarkedStringCase forNumber(int value) {
      switch (value) {
        case 1: return TEXT;
        case 2: return CODE_BLOCK;
        case 0: return MARKEDSTRING_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MarkedStringCase
  getMarkedStringCase() {
    return MarkedStringCase.forNumber(
        markedStringCase_);
  }

  public static final int TEXT_FIELD_NUMBER = 1;
  /**
   * <code>string text = 1;</code>
   */
  public java.lang.String getText() {
    java.lang.Object ref = "";
    if (markedStringCase_ == 1) {
      ref = markedString_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (markedStringCase_ == 1) {
        markedString_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string text = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTextBytes() {
    java.lang.Object ref = "";
    if (markedStringCase_ == 1) {
      ref = markedString_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (markedStringCase_ == 1) {
        markedString_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODE_BLOCK_FIELD_NUMBER = 2;
  /**
   * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
   */
  public protocol.rpc.MarkedString.CodeBlock getCodeBlock() {
    if (markedStringCase_ == 2) {
       return (protocol.rpc.MarkedString.CodeBlock) markedString_;
    }
    return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
  }
  /**
   * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
   */
  public protocol.rpc.MarkedString.CodeBlockOrBuilder getCodeBlockOrBuilder() {
    if (markedStringCase_ == 2) {
       return (protocol.rpc.MarkedString.CodeBlock) markedString_;
    }
    return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (markedStringCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, markedString_);
    }
    if (markedStringCase_ == 2) {
      output.writeMessage(2, (protocol.rpc.MarkedString.CodeBlock) markedString_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (markedStringCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, markedString_);
    }
    if (markedStringCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (protocol.rpc.MarkedString.CodeBlock) markedString_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protocol.rpc.MarkedString)) {
      return super.equals(obj);
    }
    protocol.rpc.MarkedString other = (protocol.rpc.MarkedString) obj;

    boolean result = true;
    result = result && getMarkedStringCase().equals(
        other.getMarkedStringCase());
    if (!result) return false;
    switch (markedStringCase_) {
      case 1:
        result = result && getText()
            .equals(other.getText());
        break;
      case 2:
        result = result && getCodeBlock()
            .equals(other.getCodeBlock());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (markedStringCase_) {
      case 1:
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CODE_BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getCodeBlock().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protocol.rpc.MarkedString parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.MarkedString parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.MarkedString parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protocol.rpc.MarkedString parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protocol.rpc.MarkedString parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.MarkedString parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.MarkedString parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protocol.rpc.MarkedString parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protocol.rpc.MarkedString parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protocol.rpc.MarkedString parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protocol.rpc.MarkedString prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MarkedString can be used to render human readable text. It is either a markdown string
   * or a code-block that provides a language and a code snippet. The language identifier
   * is semantically equal to the optional language identifier in fenced code blocks in GitHub
   * issues. See
   * https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting
   * The pair of a language and a value is an equivalent to markdown:
   * ```${language}
   * ${value}
   * ```
   * Note that markdown strings will be sanitized - that means html will be escaped.
   * Deprecated: use MarkupContent instead.
   * </pre>
   *
   * Protobuf type {@code protocol.rpc.MarkedString}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.rpc.MarkedString)
      protocol.rpc.MarkedStringOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.rpc.MarkedString.class, protocol.rpc.MarkedString.Builder.class);
    }

    // Construct using protocol.rpc.MarkedString.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      markedStringCase_ = 0;
      markedString_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protocol.rpc.RpcProto.internal_static_protocol_rpc_MarkedString_descriptor;
    }

    public protocol.rpc.MarkedString getDefaultInstanceForType() {
      return protocol.rpc.MarkedString.getDefaultInstance();
    }

    public protocol.rpc.MarkedString build() {
      protocol.rpc.MarkedString result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public protocol.rpc.MarkedString buildPartial() {
      protocol.rpc.MarkedString result = new protocol.rpc.MarkedString(this);
      if (markedStringCase_ == 1) {
        result.markedString_ = markedString_;
      }
      if (markedStringCase_ == 2) {
        if (codeBlockBuilder_ == null) {
          result.markedString_ = markedString_;
        } else {
          result.markedString_ = codeBlockBuilder_.build();
        }
      }
      result.markedStringCase_ = markedStringCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protocol.rpc.MarkedString) {
        return mergeFrom((protocol.rpc.MarkedString)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protocol.rpc.MarkedString other) {
      if (other == protocol.rpc.MarkedString.getDefaultInstance()) return this;
      switch (other.getMarkedStringCase()) {
        case TEXT: {
          markedStringCase_ = 1;
          markedString_ = other.markedString_;
          onChanged();
          break;
        }
        case CODE_BLOCK: {
          mergeCodeBlock(other.getCodeBlock());
          break;
        }
        case MARKEDSTRING_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protocol.rpc.MarkedString parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protocol.rpc.MarkedString) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int markedStringCase_ = 0;
    private java.lang.Object markedString_;
    public MarkedStringCase
        getMarkedStringCase() {
      return MarkedStringCase.forNumber(
          markedStringCase_);
    }

    public Builder clearMarkedString() {
      markedStringCase_ = 0;
      markedString_ = null;
      onChanged();
      return this;
    }


    /**
     * <code>string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = "";
      if (markedStringCase_ == 1) {
        ref = markedString_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (markedStringCase_ == 1) {
          markedString_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = "";
      if (markedStringCase_ == 1) {
        ref = markedString_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (markedStringCase_ == 1) {
          markedString_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string text = 1;</code>
     */
    public Builder setText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  markedStringCase_ = 1;
      markedString_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string text = 1;</code>
     */
    public Builder clearText() {
      if (markedStringCase_ == 1) {
        markedStringCase_ = 0;
        markedString_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string text = 1;</code>
     */
    public Builder setTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      markedStringCase_ = 1;
      markedString_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.MarkedString.CodeBlock, protocol.rpc.MarkedString.CodeBlock.Builder, protocol.rpc.MarkedString.CodeBlockOrBuilder> codeBlockBuilder_;
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public protocol.rpc.MarkedString.CodeBlock getCodeBlock() {
      if (codeBlockBuilder_ == null) {
        if (markedStringCase_ == 2) {
          return (protocol.rpc.MarkedString.CodeBlock) markedString_;
        }
        return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
      } else {
        if (markedStringCase_ == 2) {
          return codeBlockBuilder_.getMessage();
        }
        return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public Builder setCodeBlock(protocol.rpc.MarkedString.CodeBlock value) {
      if (codeBlockBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        markedString_ = value;
        onChanged();
      } else {
        codeBlockBuilder_.setMessage(value);
      }
      markedStringCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public Builder setCodeBlock(
        protocol.rpc.MarkedString.CodeBlock.Builder builderForValue) {
      if (codeBlockBuilder_ == null) {
        markedString_ = builderForValue.build();
        onChanged();
      } else {
        codeBlockBuilder_.setMessage(builderForValue.build());
      }
      markedStringCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public Builder mergeCodeBlock(protocol.rpc.MarkedString.CodeBlock value) {
      if (codeBlockBuilder_ == null) {
        if (markedStringCase_ == 2 &&
            markedString_ != protocol.rpc.MarkedString.CodeBlock.getDefaultInstance()) {
          markedString_ = protocol.rpc.MarkedString.CodeBlock.newBuilder((protocol.rpc.MarkedString.CodeBlock) markedString_)
              .mergeFrom(value).buildPartial();
        } else {
          markedString_ = value;
        }
        onChanged();
      } else {
        if (markedStringCase_ == 2) {
          codeBlockBuilder_.mergeFrom(value);
        }
        codeBlockBuilder_.setMessage(value);
      }
      markedStringCase_ = 2;
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public Builder clearCodeBlock() {
      if (codeBlockBuilder_ == null) {
        if (markedStringCase_ == 2) {
          markedStringCase_ = 0;
          markedString_ = null;
          onChanged();
        }
      } else {
        if (markedStringCase_ == 2) {
          markedStringCase_ = 0;
          markedString_ = null;
        }
        codeBlockBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public protocol.rpc.MarkedString.CodeBlock.Builder getCodeBlockBuilder() {
      return getCodeBlockFieldBuilder().getBuilder();
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    public protocol.rpc.MarkedString.CodeBlockOrBuilder getCodeBlockOrBuilder() {
      if ((markedStringCase_ == 2) && (codeBlockBuilder_ != null)) {
        return codeBlockBuilder_.getMessageOrBuilder();
      } else {
        if (markedStringCase_ == 2) {
          return (protocol.rpc.MarkedString.CodeBlock) markedString_;
        }
        return protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.protocol.rpc.MarkedString.CodeBlock code_block = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        protocol.rpc.MarkedString.CodeBlock, protocol.rpc.MarkedString.CodeBlock.Builder, protocol.rpc.MarkedString.CodeBlockOrBuilder> 
        getCodeBlockFieldBuilder() {
      if (codeBlockBuilder_ == null) {
        if (!(markedStringCase_ == 2)) {
          markedString_ = protocol.rpc.MarkedString.CodeBlock.getDefaultInstance();
        }
        codeBlockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            protocol.rpc.MarkedString.CodeBlock, protocol.rpc.MarkedString.CodeBlock.Builder, protocol.rpc.MarkedString.CodeBlockOrBuilder>(
                (protocol.rpc.MarkedString.CodeBlock) markedString_,
                getParentForChildren(),
                isClean());
        markedString_ = null;
      }
      markedStringCase_ = 2;
      onChanged();;
      return codeBlockBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:protocol.rpc.MarkedString)
  }

  // @@protoc_insertion_point(class_scope:protocol.rpc.MarkedString)
  private static final protocol.rpc.MarkedString DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protocol.rpc.MarkedString();
  }

  public static protocol.rpc.MarkedString getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarkedString>
      PARSER = new com.google.protobuf.AbstractParser<MarkedString>() {
    public MarkedString parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarkedString(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MarkedString> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarkedString> getParserForType() {
    return PARSER;
  }

  public protocol.rpc.MarkedString getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

