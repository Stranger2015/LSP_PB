// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/rpc/rpc.proto

package protocol.rpc;

public interface SignatureInformationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.rpc.SignatureInformation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The label of this signature. Will be shown in
   * the UI.
   * </pre>
   *
   * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  java.lang.String getLabel();
  /**
   * <pre>
   * The label of this signature. Will be shown in
   * the UI.
   * </pre>
   *
   * <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  com.google.protobuf.ByteString
      getLabelBytes();

  /**
   * <code>string markup = 2;</code>
   */
  java.lang.String getMarkup();
  /**
   * <code>string markup = 2;</code>
   */
  com.google.protobuf.ByteString
      getMarkupBytes();

  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  protocol.MarkupContent getMarkupContent();
  /**
   * <code>.protocol.MarkupContent markup_content = 3;</code>
   */
  protocol.MarkupContentOrBuilder getMarkupContentOrBuilder();

  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  java.util.List<protocol.rpc.ParameterInformation> 
      getParametersList();
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  protocol.rpc.ParameterInformation getParameters(int index);
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  int getParametersCount();
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  java.util.List<? extends protocol.rpc.ParameterInformationOrBuilder> 
      getParametersOrBuilderList();
  /**
   * <pre>
   * The parameters of this signature.
   * </pre>
   *
   * <code>repeated .protocol.rpc.ParameterInformation parameters = 4;</code>
   */
  protocol.rpc.ParameterInformationOrBuilder getParametersOrBuilder(
      int index);

  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  boolean hasActiveParameter();
  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  com.google.protobuf.Int32Value getActiveParameter();
  /**
   * <pre>
   * The index of the active parameter.
   * If provided, this is used in place of `SignatureHelp.activeParameter`.
   * &#64;since 3.16.0 - proposed state
   * </pre>
   *
   * <code>.google.protobuf.Int32Value active_parameter = 5;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getActiveParameterOrBuilder();

  public protocol.rpc.SignatureInformation.DocumentationCase getDocumentationCase();
}
